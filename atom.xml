<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gladdduck</title>
  
  
  <link href="https://gladdduck.github.io/atom.xml" rel="self"/>
  
  <link href="https://gladdduck.github.io/"/>
  <updated>2024-03-18T13:28:58.923Z</updated>
  <id>https://gladdduck.github.io/</id>
  
  <author>
    <name>syxue</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://gladdduck.github.io/2024/03/18/%E7%AE%97%E6%B3%95-%E7%BE%8E%E5%9B%A2%E7%AC%94%E8%AF%95/"/>
    <id>https://gladdduck.github.io/2024/03/18/%E7%AE%97%E6%B3%95-%E7%BE%8E%E5%9B%A2%E7%AC%94%E8%AF%95/</id>
    <published>2024-03-18T13:28:14.565Z</published>
    <updated>2024-03-18T13:28:58.923Z</updated>
    
    <content type="html"><![CDATA[<p>title: 2024美团春招笔试<br />categories:</p><ul><li>学习笔记<br />tags:</li><li>实习笔试<br />toc: true # 是否启用内容索引</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;title: 2024美团春招笔试&lt;br /&gt;
categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习笔记&lt;br /&gt;
tags:&lt;/li&gt;
&lt;li&gt;实习笔试&lt;br /&gt;
toc: true # 是否启用内容索引&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hadoop学习笔记</title>
    <link href="https://gladdduck.github.io/2024/03/16/%E5%AE%9E%E4%B9%A0-Hadoop%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://gladdduck.github.io/2024/03/16/%E5%AE%9E%E4%B9%A0-Hadoop%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2024-03-16T08:26:52.655Z</published>
    <updated>2024-03-18T13:20:24.903Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hadoop概述"><a class="markdownIt-Anchor" href="#hadoop概述"></a> Hadoop概述</h2><h3 id="大数据"><a class="markdownIt-Anchor" href="#大数据"></a> 大数据</h3><ul><li>大量(Volume),多样(Variety),高速(Velocity),价值(Volue)</li><li>全体数据取代随机样本</li><li>混杂性取代精确性</li><li>相关关系取代因果关系</li></ul><h3 id="hadoop的体系"><a class="markdownIt-Anchor" href="#hadoop的体系"></a> Hadoop的体系</h3><p>Hadoop是对海量数据进行大规模分布式处理的开源软件框架</p><p><img src="https://image.yayan.xyz/20240316163048.png" alt="" /></p><ul><li>HDFS—分布式文件系统；</li><li>MapReduce—分布式处理模型；</li><li>HBase—分布式数据库（非SQL）</li><li>HCatalog—Hadoop内部数据整合工具，实现不同数据处理工具的数据类型相互转换机制；</li><li>Pig—流式数据的数据处理语言及其运行环境；</li><li>Hive—数据仓库管理工具，提供SQL查询功能；</li><li>ZooKeeper—分布式协调器。</li></ul><h3 id="大数据与云计算关系"><a class="markdownIt-Anchor" href="#大数据与云计算关系"></a> 大数据与云计算关系</h3><ul><li>云计算就是把一大堆廉价机器组织起来，通过网络向用户提供海量资源的高性能可靠服务。</li><li>云计算为大数据处理提供了可能和途径</li><li>大数据为云计算具有的大规模与分布式计算能力提供了应用空间，利用云计算解决了传统数据管理系统无法解决的问题</li></ul><h2 id="分布式文件系统hdfs"><a class="markdownIt-Anchor" href="#分布式文件系统hdfs"></a> 分布式文件系统HDFS</h2><h2 id="分布式计算模型mapreduce"><a class="markdownIt-Anchor" href="#分布式计算模型mapreduce"></a> 分布式计算模型MapReduce</h2><h2 id="通用资源管理系统yarn"><a class="markdownIt-Anchor" href="#通用资源管理系统yarn"></a> 通用资源管理系统Yarn</h2><h2 id="分布式协调器zookeeper"><a class="markdownIt-Anchor" href="#分布式协调器zookeeper"></a> 分布式协调器Zookeeper</h2><h3 id="zookerper简介"><a class="markdownIt-Anchor" href="#zookerper简介"></a> Zookerper简介</h3><p>Zookeeper是一个开源的分布式的，为分布式框架提供协调服务的Apache项目</p><p>是一个基于观察者模式设计的分布式服务管理框架，它负责存储和管理大家都关心的数据，然后接受观察者的注册，一旦这些数据的状态发生变化，Zookeeper就将负责通知已经在Zookeeper上注册的那些观察者做出相应的反应。</p><h3 id="zookerper架构"><a class="markdownIt-Anchor" href="#zookerper架构"></a> Zookerper架构</h3><p>ZooKeeper是一个由奇数（2n+1）台同构服务器组成的集群，它采用主-从结构</p><ul><li>一台主服务器Leader，若干台从服务器Follower，只要有超过半数的服务器能够工作，ZooKeeper集群就能正常工作</li><li>集群内所有服务器均保持同步，都接受客户端的读写请求</li><li>如果ZooKeeper集群中的Leader出现了故障，那么Follower们就会通过一定的策略，选举出一个新的Leader；</li></ul><p>Learder功能：</p><ul><li>启动或重启时恢复数据</li><li>检测Follower的心跳</li><li>结束Foller发来的请求根据不同的类型做出处理，比如写</li></ul><p>Follower功能：</p><ul><li>接受Leader的消息，并完成工作</li><li>向Leader发送心跳</li><li>接受客户端的请求，如果为读请求，直接返回结果，如果为写请求，转发给Leader</li></ul><h3 id="zookerper数据模型"><a class="markdownIt-Anchor" href="#zookerper数据模型"></a> Zookerper数据模型</h3><p>Zookeeper维护一个类似于树状的文件系统</p><ul><li>树状结构中有一个根节点，称为&quot;/&quot;，其他节点建立在根节点上，每个节点称为ZNode</li><li>每个节点可以存储不超过1MB的数据，持久性的ZNode还可以在创建子节点</li></ul><p>ZNode的类型：</p><ul><li>持久性节点：一旦创建，除非主动删除，否则一直存在</li><li>持久性顺序节点：一旦创建，除非主动删除，否则一直存在，节点名后面会有一个递增的序号</li><li>临时节点：客户端断开连接后，该节点会被删除</li><li>临时顺序节点：客户端断开连接后，该节点会被删除，节点名后面会有一个递增的序号</li></ul><p>ZNode组成：</p><ol><li>访问控制列表（ACL）：控制对ZNode的访问权限</li><li>ZNode自身状态信息：创建者ID等</li><li>ZNode数据：存储的数据</li></ol><h3 id="zookeeper的一致性"><a class="markdownIt-Anchor" href="#zookeeper的一致性"></a> Zookeeper的一致性</h3><h4 id="会话session机制"><a class="markdownIt-Anchor" href="#会话session机制"></a> 会话（Session）机制</h4><ul><li>当客户端成功连接到ZooKeeper时，就与之建立了一个会话，客户端通过定时向ZooKeeper发送心跳消息来保持会话有效</li><li>如果ZooKeeper在规定时间段（默认为180秒）内未能收到某个客户端的心跳消息，则使其会话失效，即导致该客户端与ZooKeeper断开</li><li>如果因服务器负载过重、网络阻塞等导致客户端与ZooKeeper集群内某个服务器断开，客户端只要在规定时间段内与ZooKeeper集群内的任何一个服务器连接上，该会话仍然有效。</li></ul><h4 id="监视watcher机制"><a class="markdownIt-Anchor" href="#监视watcher机制"></a> 监视（Watcher）机制</h4><ul><li>客户端可以在某个Znode上设置一个Watcher（监视器），来监视该Znode的状态；</li><li>Watcher一次性有效</li><li>一旦被设置了Watcher的Znode的状态发生变化，ZooKeeper服务端会将此事件通知设置Watcher的客户端，并根据事件类型触发回调客户端事先设置的处理逻辑</li></ul><h3 id="zookeeper的自身一致性"><a class="markdownIt-Anchor" href="#zookeeper的自身一致性"></a> Zookeeper的自身一致性</h3><p><strong>myid</strong>:Zookeeper集群中每个服务器的唯一标识，myid文件中只包含一个数字，这个数字就是这个服务器的编号<br /><strong>ZXID</strong>:</p><ul><li>ZooKeeper为每个事务操作分配一个全局单调递增的事务编号（ZXID），每个ZXID对应于一次事务操作，它随事务一起被记入事务日志.</li><li>ZXID是一个64位二进制数，其高32位为Leader周期的编号，称作epoch，新选出的Leader的epoch为其前任Leader的epoch值加1</li><li>ZXID的低32位是一个单调递增的计数器，Leader在执行一个新的事务操作时，都会对该计数器作加1操作，其与epoch组合成此事务操作的ZXID</li><li>每当选举出一个新的Leader时，就从该Leader的事务日志内挑选出数值最大的事务编号ZXID，对其中的epoch值作加1操作，以此作为新Leader的周期编号，并将低32位置0，从而形成新的ZXID</li></ul><h4 id="原子广播zab-zookeeper-atomic-broadcast"><a class="markdownIt-Anchor" href="#原子广播zab-zookeeper-atomic-broadcast"></a> 原子广播ZAB (ZooKeeper Atomic Broadcast)</h4><p><strong>恢复模式</strong>：</p><ul><li>系统启动或Leader发生故障时，ZAB进入恢复模式</li><li>立即进行一次Leader选举，选出一个新的Leader</li><li>让集群中至少有超过半数的Follower与Leader具有相同的系统状态，即实现数据同步</li><li>ZAB退出恢复模式，进入广播模式</li></ul><p><strong>广播模式（写流程）</strong>：</p><ul><li>Leader收到客户端发来的事务操作请求时，Leader通过ZAB的广播模式向集群内的所有Follower进行消息广播，即发送事务操作请求消息</li><li>各个Follower收到Leader广播（发送）的事务操作请求后，把将要作的事务操作及其ZXID记入各自的事务日志，然后向Leader回复ack（确认）消息</li><li>若Leader收不到超过半数的Follower回复的ack消息，则取消本次更新操作</li><li>若Leader收到超过半数的Follower回复的ack（确认）消息，则向Follower们进行消息广播—向它们发送commit（许可）消息</li><li>Follower收到Leader的commit消息，就真正执行本次更新操作，即更新内存或Znode内的数据</li><li>整个ZAB的广播模式执行过程是一个整体，不能被打断，其结果只有成功或失败，不存在中间状态</li></ul><p><img src="https://image.yayan.xyz/20240318211258.png" alt="写流程之写入请求直接发送给Leader节点" /></p><p><img src="https://image.yayan.xyz/20240318211326.png" alt="写流程之写入请求发送给follower节点" /></p><h3 id="zookeeper的选举机制"><a class="markdownIt-Anchor" href="#zookeeper的选举机制"></a> Zookeeper的选举机制</h3><h4 id="选举的基本原则"><a class="markdownIt-Anchor" href="#选举的基本原则"></a> 选举的基本原则</h4><ul><li>选举开始时，ZooKeeper集群内各台服务器上的数据不一定会完全一致，在选出Leader之后，就要以该Leader为基准来同步其他服务器上的数据；</li><li>应该把集群内拥有最新数据的服务器选为Leader，故必须挑选其事务日志中具有最大ZXID的那台服务器作为Leader，因为该服务器进行了最新的事务操作，故其拥有的数据是最新的，以其作为基准来恢复和同步数据，则可以保证数据的完整性；</li><li>若具有最大ZXID的服务器不止一个，则选其中myid最大者为Leader</li></ul><h4 id="选举流程"><a class="markdownIt-Anchor" href="#选举流程"></a> 选举流程</h4><p><img src="https://image.yayan.xyz/20240318210658.png" alt="" /></p><ol><li>集群内各服务器均进入LOOKING状态，进行一轮选举投票，即各服务器均向其他服务器发送投票消息，消息的内容为自身的myid和自身最大的ZXID，也就是把自身定为候选Leader（争作Leader）</li><li>各服务器接收投票消息（包括自己的票），从中挑选出具有最大ZXID的服务器作为候选Leader ，若这样的服务器有多个，则挑选其中myid最大者</li><li>各服务器统计本轮投票中候选Leader的得票数<ul><li>若未过半数，则把前一步挑选出的候选Leader的myid和ZXID记入投票消息，进行下一轮投票</li><li>如果候选Leader得票数过半，则判别候选Leader是否是自身，若是，则该服务器进入LEADING状态，否则该服务器进入FOLLOWING状态</li></ul></li></ol><p>###　Zookeeper的操作</p><h4 id="shell操作"><a class="markdownIt-Anchor" href="#shell操作"></a> Shell操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看节点</span></span><br><span class="line"><span class="built_in">ls</span> /</span><br><span class="line"><span class="comment"># 查看节点详细信息</span></span><br><span class="line"><span class="built_in">ls</span> -s /</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建永久节点</span></span><br><span class="line">create /node1 <span class="string">&quot;data1&quot;</span></span><br><span class="line"><span class="comment"># 创建永久顺序节点</span></span><br><span class="line">create -s /node2 <span class="string">&quot;data2&quot;</span></span><br><span class="line"><span class="comment"># 创建临时节点</span></span><br><span class="line">create -e /node3 <span class="string">&quot;data3&quot;</span></span><br><span class="line"><span class="comment"># 创建临时顺序节点</span></span><br><span class="line">create -s -e /node4 <span class="string">&quot;data4&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看节点数据</span></span><br><span class="line">get -s /node1</span><br><span class="line"><span class="comment"># 查看节点详细信息</span></span><br><span class="line"><span class="built_in">stat</span> /node1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改节点数据</span></span><br><span class="line"><span class="built_in">set</span> /node1 <span class="string">&quot;data1-1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除节点</span></span><br><span class="line">delete /node1</span><br><span class="line"><span class="comment"># 删除节点并递归删除子节点</span></span><br><span class="line">deleteall /node1</span><br></pre></td></tr></table></figure><h4 id="api操作"><a class="markdownIt-Anchor" href="#api操作"></a> API操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建监视点</span></span><br><span class="line"><span class="comment">// 1. 创建配置对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">String</span> <span class="variable">connectString</span> <span class="operator">=</span> <span class="string">&quot;hadoop102:2181,hadoop103:2181,hadoop104:2181&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="variable">sessionTimeout</span> <span class="operator">=</span> <span class="number">2000</span>;</span><br><span class="line"><span class="keyword">private</span> ZooKeeper zkClient;</span><br><span class="line"><span class="comment">// 2. 创建zookeeper的连接</span></span><br><span class="line">zkClient = <span class="keyword">new</span> <span class="title class_">ZooKeeper</span>(connectString, sessionTimeout, <span class="keyword">new</span> <span class="title class_">Watcher</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">process</span><span class="params">(WatchedEvent watchedEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;默认回调函数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 使用自定义的监视</span></span><br><span class="line">zk.exists(<span class="string">&quot;/path/to/znode&quot;</span>, <span class="keyword">new</span> <span class="title class_">Watcher</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">process</span><span class="params">(WatchedEvent event)</span> &#123;</span><br><span class="line">        <span class="comment">// 处理监视事件的逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 使用默认的监视</span></span><br><span class="line">zk.exists(<span class="string">&quot;/path/to/znode&quot;</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h2 id="分布式数据库hbase"><a class="markdownIt-Anchor" href="#分布式数据库hbase"></a> 分布式数据库HBase</h2><h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3><p>HBase是一种以HDFS为依据的分布式可扩展NoSQL列族数据库</p><h4 id="nosql理论基础-cap理论与base理论"><a class="markdownIt-Anchor" href="#nosql理论基础-cap理论与base理论"></a> NoSQL理论基础: CAP理论与BASE理论</h4><p>传统关系数据库技术的核心特征：事务操作必须遵循ACID（原子性Atomicity、一致性Consistancy、隔离性Isolation、持久性Durability）原则，具有强事务、强一致性。</p><p>NoSQL数据库的特点：NoSQL方案弱化事务处理的ACID特性，一般不持支传统数据库的SQL查询语言</p><p>CAP理论：在设计和部署分布式应用时，存在三个核心的系统需求：</p><ul><li>C：Consistency（一致性）—在对数据进行更新和删除操作后，用户都能看到相同的数据视图。</li><li>A：Availability（可用性）—可用性主要是指系统能够很好地为用户服务，不出现用户操作失败或者访问超时等用户体验不佳的情况（比如由强一致性带来的副作用）。</li><li>P：Partition Tolerance（分区容错性）—分区容错性和可扩展性是紧密相关的，好的分区容错性要求一个分布式系统就像是一个运转正常的整体，当系统中有部分网络或节点发生故障时，仍然能够依靠系统中其余完好的部分来保证系统正常运作。</li><li>CAP理论的核心：一个分布式系统不可能同时很好地满足一致性C，可用性A、分区容错性P这三个需求，最多只能同时较好地满足其中的两个需求。</li></ul><p>OldSQL为了不降低可用性，通常对数据采用不分散存储的策略，使可扩展性（即分区容错性P）受到限制，可看作保证C、A，放弃P；</p><p>NoSQL为了获得可扩展性，又不降低可用性，在设计中就会弱化甚至去除事务的ACID要求，可看作保证A、P，放弃C。</p><p>BASE (BA,S,E) 理论：牺牲强一致性，获得可用性或可靠性，表现为以下三点：</p><ul><li>BA：Basically Availability（基本可用）</li><li>S：Soft State（软状态）—允许系统中的数据存在中间状态，而这个中间状态不会影响系统的整体可用性。硬状态”是指严格遵循ACID原则的事务功能；</li><li>E: Eventually Consistency（最终一致性）—系统中的数据经过一段时间后，最终会达到一致的状态。</li></ul><h4 id="hbase逻辑结构"><a class="markdownIt-Anchor" href="#hbase逻辑结构"></a> HBase逻辑结构</h4><p>HBase的逻辑结构可以看作是一个二维的表格结构,行代表RowKey(<strong>唯一,按RowKey排序</strong>),列代表列族,其中列族下面可以有多个列限定符,每个列限定符下面存储一个值,这个值可以是多个版本的,每个版本都有一个时间戳,时间戳是一个64位的整数,代表了这个版本的时间,时间戳越大,版本越新</p><p><img src="https://image.yayan.xyz/20240318191544.png" alt="" /></p><h4 id="hbase物理结构"><a class="markdownIt-Anchor" href="#hbase物理结构"></a> HBase物理结构</h4><p>HBase的物理结构是基于HDFS的,每个表都会有一个对应的目录,目录下面有两个子目录,分别是data和wal,其中data目录存储了HFile文件,而wal目录存储了WAL文件(Write-Ahead-Log,预写日志).</p><p>HBase的RegionServer和HMaster不负责存储数据,只负责管理数据,而实际的数据存储在HDFS上</p><h4 id="hbase数据模型"><a class="markdownIt-Anchor" href="#hbase数据模型"></a> HBase数据模型</h4><ol><li>Namespace: 命名空间,类似于关系数据库中的database概念.命名空间下可以有多个表,HBase自带两个命名空间,分别是default和hbase,hbase中存放的是HBase内置的表,其中meta表存放了所有表的元数据信息</li><li>Table: 表,类似于关系数据库中的table概念,表中存放的是多行数据,每行数据都有一个唯一的RowKey,表中的数据是按照RowKey进行排序的</li><li>Row: HBase表中的每行数据都由一个RowKey和多个Column（列）组成，数据是按照RowKey的字典顺序存储的，并且查询数据时只能根据RowKey进行检索，所以RowKey的设计十分重要</li><li>Cell: 由{rowkey,  columnFamily：columnQualifier, timestamp} 唯一确定的单元。Cell为空时,不会存储在HBase中.</li></ol><h4 id="基本架构"><a class="markdownIt-Anchor" href="#基本架构"></a> 基本架构</h4><p><img src="https://image.yayan.xyz/20240318192200.png" alt="" /></p><ol><li><p>Master服务器负责管理所有Region服务器和数据表(hbase:meta)</p><ul><li>其本身不存储HBase中的数据；</li><li>接收用户对<strong>表格</strong>创建修改删除的命令并执行</li><li>监控region是否需要进行负载均衡，故障转移和region的拆分</li></ul></li><li><p>Region服务器是HBase中最核心的部分：</p><ul><li>Region服务器是HBase的读写节点，它为用户提供对<strong>数据表数据</strong>的读写服务</li><li>一张数据表被划分成(横向划分)多个HRegion，这些HRegion被分布到Region服务器集群内进行管理</li></ul></li><li><p>HRegion是一个HBase表横向切割的结果:</p><ul><li>在HRegion中,每个列族又被分为一个Store.每个Store中存储了一个列族的数据,不包含空元素</li><li>Store中包含一个MemStore,一个Block Cache和多个HFile,MemStore负责缓存写入的数据(有序,每次flush都回形成一个HFile),Block Cache负责缓存读取的数据,HFile是HBase中的数据存储文件</li></ul></li><li><p>Zookeeper监视Region服务器和Master服务器的运行状态</p><ul><li>各个Region服务器会在ZooKeeper的Z节点/server上建立临时性顺序节点，Master服务器在/server上设置Watcher，可以随时感知到各个Region服务器的运行状态；</li><li>当前的Active Master服务器在ZooKeeper上建立临时性Z节点/Master，各个Region服务器和Master集群内的其它服务器均在/Master上设置Watcher，它们可以随时感知到当前的Active Master服务器的工作（运行）状态；</li></ul></li></ol><h3 id="hbase操作"><a class="markdownIt-Anchor" href="#hbase操作"></a> HBase操作</h3><h4 id="shell操作-2"><a class="markdownIt-Anchor" href="#shell操作-2"></a> Shell操作</h4><h5 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建命名空间</span></span><br><span class="line">create_namespace <span class="string">&#x27;ns1&#x27;</span></span><br><span class="line"><span class="comment"># 查看所有命名空间</span></span><br><span class="line">list_namespace</span><br></pre></td></tr></table></figure><h5 id="ddl操作"><a class="markdownIt-Anchor" href="#ddl操作"></a> DDL操作</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建表</span></span><br><span class="line"><span class="comment"># 在ns1命名空间下创建表table1,列族为cf1,cf2</span></span><br><span class="line">create <span class="string">&#x27;ns1:table1&#x27;</span>, <span class="string">&#x27;cf1&#x27;</span>, <span class="string">&#x27;cf2&#x27;</span></span><br><span class="line"><span class="comment"># 在ns1命名空间下创建表table1,列族为cf1,cf2,并指定版本数</span></span><br><span class="line">create <span class="string">&#x27;ns1:table1&#x27;</span>, &#123;NAME =&gt; <span class="string">&#x27;cf1&#x27;</span>, VERSIONS =&gt; 3&#125;, &#123;NAME =&gt; <span class="string">&#x27;cf2&#x27;</span>, VERSIONS =&gt; 5&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看表</span></span><br><span class="line">list</span><br><span class="line"><span class="comment"># 查看表详情</span></span><br><span class="line">describe <span class="string">&#x27;ns1:table1&#x27;</span></span><br><span class="line"><span class="comment"># 删除表</span></span><br><span class="line"><span class="built_in">disable</span> <span class="string">&#x27;ns1:table1&#x27;</span></span><br><span class="line">drop <span class="string">&#x27;ns1:table1&#x27;</span></span><br><span class="line"><span class="comment"># 修改表</span></span><br><span class="line"><span class="comment"># 修改表的列族的版本数</span></span><br><span class="line">alter <span class="string">&#x27;ns1:table1&#x27;</span>, &#123;NAME =&gt; <span class="string">&#x27;cf1&#x27;</span>, VERSIONS =&gt; 5&#125;</span><br><span class="line"><span class="comment"># 删除表的列族</span></span><br><span class="line">alter <span class="string">&#x27;ns1:table1&#x27;</span>, <span class="string">&#x27;delete&#x27;</span> =&gt; <span class="string">&#x27;cf1&#x27;</span></span><br><span class="line">alter <span class="string">&#x27;ns1:table1&#x27;</span>, &#123;NAME =&gt; <span class="string">&#x27;cf1&#x27;</span>, METHOD =&gt; <span class="string">&#x27;delete&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h5 id="dml操作"><a class="markdownIt-Anchor" href="#dml操作"></a> DML操作</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 插入数据</span></span><br><span class="line"><span class="comment"># 如果重复写入相同rowKey，相同列的数据，会写入多个版本进行覆盖。</span></span><br><span class="line"><span class="comment"># 向ns1:table1表中插入一行数据,行键为row1,列族为cf1,列限定符为col1,值为value1</span></span><br><span class="line">put <span class="string">&#x27;ns1:table1&#x27;</span>, <span class="string">&#x27;row1&#x27;</span>, <span class="string">&#x27;cf1:col1&#x27;</span>, <span class="string">&#x27;value1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取数据get</span></span><br><span class="line"><span class="comment"># 读取ns1:table1表中的一行数据,行键为row1</span></span><br><span class="line">get <span class="string">&#x27;ns1:table1&#x27;</span>, <span class="string">&#x27;row1&#x27;</span></span><br><span class="line"><span class="comment"># 读取ns1:table1表中的一行数据,行键为row1,列族为cf1</span></span><br><span class="line">get <span class="string">&#x27;ns1:table1&#x27;</span>, <span class="string">&#x27;row1&#x27;</span>, &#123;COLUMN =&gt; <span class="string">&#x27;cf1&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取数据scan</span></span><br><span class="line"><span class="comment"># 读取ns1:table1表中的所有数据</span></span><br><span class="line">scan <span class="string">&#x27;ns1:table1&#x27;</span></span><br><span class="line"><span class="comment"># 读取ns1:table1表中的所有数据,并指定列族</span></span><br><span class="line">scan <span class="string">&#x27;ns1:table1&#x27;</span>, &#123;COLUMN =&gt; <span class="string">&#x27;cf1&#x27;</span>&#125;</span><br><span class="line"><span class="comment"># 读取ns1:table1表中的所有数据,从row1开始,到row2结束</span></span><br><span class="line">scan <span class="string">&#x27;ns1:table1&#x27;</span>, &#123;STARTROW =&gt; <span class="string">&#x27;row1&#x27;</span>, ENDROW =&gt; <span class="string">&#x27;row2&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除数据</span></span><br><span class="line"><span class="comment"># 删除ns1:table1表中的一行数据,行键为row1</span></span><br><span class="line">delete <span class="string">&#x27;ns1:table1&#x27;</span>, <span class="string">&#x27;row1&#x27;</span></span><br><span class="line"><span class="comment"># 删除ns1:table1表中的一行数据,行键为row1,列为cf1中的name</span></span><br><span class="line">delete <span class="string">&#x27;ns1:table1&#x27;</span>, <span class="string">&#x27;row1&#x27;</span>, <span class="string">&#x27;cf1：name&#x27;</span></span><br><span class="line"><span class="comment"># 删除数据的所有版本</span></span><br><span class="line">deleteall <span class="string">&#x27;ns1:table1&#x27;</span>, <span class="string">&#x27;row1&#x27;</span>, <span class="string">&#x27;cf1：name&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行命令会标记数据为要删除，不会直接将数据彻底删除，删除数据只在特定时期清理磁盘时进行</span></span><br></pre></td></tr></table></figure><h4 id="api操作-2"><a class="markdownIt-Anchor" href="#api操作-2"></a> API操作</h4><p>HBase的客户端连接由ConnectionFactory类来创建，用户使用完成之后需要手动关闭连接。同时连接是一个重量级的，推荐一个进程使用一个连接，对HBase的命令通过连接中的两个属性Admin(DDL)和Table(DML)来实现。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line"><span class="comment">//1. 创建配置对象</span></span><br><span class="line"><span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line"><span class="comment">// 2. 添加配置参数</span></span><br><span class="line">conf.set(<span class="string">&quot;hbase.zookeeper.quorum&quot;</span>,<span class="string">&quot;hadoop102,hadoop103,hadoop104&quot;</span>);</span><br><span class="line"><span class="comment">// 3. 创建hbase的连接</span></span><br><span class="line"><span class="comment">// 默认使用同步连接Connection                   </span></span><br><span class="line">connection = ConnectionFactory.createConnection(conf);</span><br><span class="line"><span class="comment">// 可以使用异步连接</span></span><br><span class="line"><span class="comment">// 主要影响后续的DML操作</span></span><br><span class="line">CompletableFuture&lt;AsyncConnection&gt; asyncConnection = ConnectionFactory.createAsyncConnection(conf);</span><br><span class="line"><span class="comment">// 4. 使用连接</span></span><br><span class="line">System.out.println(connection);</span><br><span class="line"><span class="comment">// 5. 关闭连接</span></span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure><p>HBase在API操作时使用了装饰者（设计师）模式。因为shell命令的参数很多，所以在API中使用了装饰者模式，将参数封装成对象，然后通过对象的方法来实现shell命令的功能。</p><h3 id="hbase一些原理"><a class="markdownIt-Anchor" href="#hbase一些原理"></a> HBase一些原理</h3><h4 id="hbase架构"><a class="markdownIt-Anchor" href="#hbase架构"></a> HBase架构</h4><p><img src="https://image.yayan.xyz/20240318195105.png" alt="" /></p><ol><li>hbase:meta 表中存储了 Hbase 集群中全部表的所有的Hregion 信息,在list命令中被过滤掉了</li><li>StoreFile保存实际数据的物理文件，StoreFile以HFile的形式存储在HDFS上。每个Store会有一个或多个StoreFile（HFile），数据在每个StoreFile中都是有序的。</li><li>MemStore写缓存，由于HFile中的数据要求是有序的，所以数据是先存储在MemStore中，排好序后，等到达刷写时机才会刷写到HFile，每次刷写都会形成一个新的HFile。</li><li>WAL由于数据要经MemStore排序后才能刷写到HFile，但把数据保存在内存中会有很高的概率导致数据丢失，为了解决这个问题，数据会先写在一个叫做Write-Ahead logfile的文件中，然后再写入MemStore中。所以在系统出现故障的时候，数据可以通过这个日志文件重建。</li><li>Store</li></ol><h4 id="hbase的写流程"><a class="markdownIt-Anchor" href="#hbase的写流程"></a> HBase的写流程</h4><p><img src="https://image.yayan.xyz/20240318195306.png" alt="" /></p><ol><li>Client先访问zookeeper，获取hbase:meta表位于哪个RegionServer。</li><li>访问对应的Region Server，获取hbase:meta表，根据读请求的namespace:table/rowkey，查询出目标数据位于哪个RegionServer中的哪个Region中。并将该table的region信息以及meta表的位置信息缓存在客户端的meta cache，方便下次访问。</li><li>与目标RegionServer进行通讯；</li><li>将数据顺序写入（追加）到WAL(HLog)；</li><li>将数据写入对应的MemStore，数据会在MemStore进行排序；</li><li>向客户端发送ack；</li><li>等达到MemStore的刷写时机后，将数据刷写到HFile。</li><li>在步骤4，5，源码的步骤是先写入HLog，在写入MemStore，然后再同步HLog。如果HLog如果写入失败，就会事务回滚。</li></ol><h4 id="hbase的读流程"><a class="markdownIt-Anchor" href="#hbase的读流程"></a> HBase的读流程</h4><p><img src="https://image.yayan.xyz/20240318200601.png" alt="" /></p><blockquote><p>误区：HBase的读流程并不是只读BlockCache的数据，考虑这种情况:<br />第一次写数据的时候成功写入，并flush罗盘了<br />第二次写数据的时候写入了MemStore，但是此时把ts设置为了比第一次写的ts小，但是没有罗盘<br />如果只读BlockCache，那么第二次写的数据就会被读到，这样就会出现数据读取不是最新的情况。</p></blockquote><ol><li>Client先访问zookeeper，获取hbase:meta表位于哪个RegionServer。</li><li>访问对应的Region Server，获取hbase:meta表，根据读请求的namespace:table/rowkey，查询出目标数据位于哪个RegionServer中的哪个Region中。并将该table的region信息以及meta表的位置信息缓存在客户端的meta cache，方便下次访问。</li><li>与目标RegionServer进行通讯；</li><li>分别在BlockCache（读缓存），MemStore和StoreFile（HFile）中查询目标数据，并将查到的所有数据进行合并。此处所有数据是指同一条数据的不同版本（timestamp）或者不同的类型（Put/Delete）</li><li>将从文件中查询到的数据块（Block，HFile数据存储单元，默认大小为64KB）缓存到BlockCache。</li><li>将合并后的最终结果返回给客户端。</li></ol><h4 id="hbase的flush操作"><a class="markdownIt-Anchor" href="#hbase的flush操作"></a> HBase的Flush操作</h4><p><img src="https://image.yayan.xyz/20240318201159.png" alt="" /></p><ol><li>Flush操作的基本单位是HRegion，即对HRegion的所有MemStore均进行Flush操作，并各自形成单独的StoreFile</li><li>MemStore中的数据达到阈值（128M）后，其所在region的所有memstore都会刷写。</li><li>到达自动刷写的时间（默认1小时），<strong>最后一次</strong>刷写的时间到当前时间间隔超过了自动刷写的时间间隔。</li><li>HRegion的所有MemStore中的数据总量到达阈值（JVM heap的40%）后，也会触发Flush操作。<ul><li>当阈值到低位线（总阈值的95%，JVM heap的38%）时，region会按照其所有memstore的大小顺序（由大到小）依次进行刷写。直到region server中所有memstore的总大小减小到上述值以下。</li><li>当阈值到高位线时，region会同时阻止继续往所有的memstore写数据。</li></ul></li></ol><h4 id="hbase的compaction操作"><a class="markdownIt-Anchor" href="#hbase的compaction操作"></a> HBase的Compaction操作</h4><p><img src="https://image.yayan.xyz/20240318202739.png" alt="" /><br />Compaction合并的原因：</p><p>StoreFile是只读文件，其内容不能被更新（增加、修改、删除），以此提升表数据的安全性<br />如果要更新StoreFile内的表数据，则必须以新增StoreFile的形式进行，把欲更新的数据（包含属性或版本号）写入新增的StoreFile中</p><p>（HBase不停的刷写，导致存储目录中有过多的数据文件，文件太多会导致维护困难、降低数据查询性能和效率。对一堆的文件进行I/O操作，耗时太多。所以HBase定期会对这些琐碎的文件进行整理，即合并Compaction。）</p><p>Compaction合并的步骤：</p><p>分为三步：排序文件、合并文件、代替原文件服务。</p><p>HBase首先从待合并的文件中读出HFile中的key-value,再按照由小到大的顺序写入一个新文件(storeFile)中。这个新文件将代替所有之前的文件，对外提供服务。</p><p>Compaction操作分为两种：</p><ul><li>Minor Compaction：只合并相邻的（3个）小文件，不会合并所有的文件，不会清理过期和删除的数据。</li><li>major Compaction：合并所有的文件，产生一个新的文件。</li></ul><p>Compaction大合并时，清空以下数据：</p><ol><li>标记为删除的数据。<ul><li>当我们删除数据时，HBase并没有把这些数据立即删除，而是将这些数据打了一个个标记，称为“墓碑”标记。在HBase合并时，会将这些带有墓碑标记的数据删除。</li></ul></li><li>TTL过期数据<ul><li>TTL(time to live)指数据包在网络中的时间。如果列族中设置了TTL过期时间，则在合并的过程中，发现过期的数据将被删除。</li></ul></li><li>版本合并<ul><li>若版本号超过了列族中预先设定的版本号，则将最早的一条数据删除。</li></ul></li></ol><p>Compaction合并的触发条件：</p><ol><li>内存中的数据flush刷写到硬盘上以后，会对当前Store中的文件进行判断，当数量达到阈值，则会触发Compaction。</li><li>Compaction Checker线程定期检查是否触发Compaction，Checker会优先检查文件数量是否大于阈值，再判断是否满足major Compaction的条件的时间范围内（7天），如果满足，则触发一次大合并Major Compaction。</li><li>手动合并</li></ol><h4 id="hbase的split操作"><a class="markdownIt-Anchor" href="#hbase的split操作"></a> HBase的Split操作</h4><p><img src="https://image.yayan.xyz/20240318202833.png" alt="" /><br />Split原因：<br />随着HRegion内的数据被持续追加，StoreFile文件的数量和长度会不断增大，由此引起Store的不断增大，从而导致HRegion的长度持续增大；</p><p>Split条件：<br />当1个region中的某个Store下所有StoreFile的总大小超过Min(R^2 * “hbase.hregion.memstore.flush.size”,&quot; hbase.hregion.max.filesize &quot;) 就会拆分，其中R为当前RegionServer中属于该table的region个数<br />具体的切分策略为：<br />第一次split：1^3 * 256 = 256MB<br />第二次split：2^3 * 256 = 2048MB<br />第三次split：3^3 * 256 = 6912MB<br />第四次split：4^3 * 256 = 16384MB &gt; 10GB，<br />因此取较小的值10GB 后面每次split的size都是10GB了。</p><p>Split过程：<br />Region的拆分是由HRegionServer完成的，在操作之前需要通过ZK汇报master，修改对应的Meta表信息添加两列info：splitA和info：splitB信息。之后需要操作HDFS上面对应的文件，按照拆分后的Region范围进行标记区分，实际操作为创建文件引用，不会挪动数据。刚完成拆分的时候，两个Region都由原先的RegionServer管理。之后汇报给Master，由Master将修改后的信息写入到Meta表中。等待下一次触发负载均衡机制，才会修改Region的管理服务者，而数据要等到下一次压缩时，才会实际进行移动。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;hadoop概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#hadoop概述&quot;&gt;&lt;/a&gt; Hadoop概述&lt;/h2&gt;
&lt;h3 id=&quot;大数据&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#大数据&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://gladdduck.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Hadoop" scheme="https://gladdduck.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Kaggle-OTTO比赛回顾</title>
    <link href="https://gladdduck.github.io/2024/03/14/%E5%AE%9E%E4%B9%A0-Kaggle-OTTO%E6%AF%94%E8%B5%9B%E5%9B%9E%E9%A1%BE/"/>
    <id>https://gladdduck.github.io/2024/03/14/%E5%AE%9E%E4%B9%A0-Kaggle-OTTO%E6%AF%94%E8%B5%9B%E5%9B%9E%E9%A1%BE/</id>
    <published>2024-03-14T10:50:22.943Z</published>
    <updated>2024-03-16T05:34:08.341Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-比赛任务"><a class="markdownIt-Anchor" href="#1-比赛任务"></a> 1. 比赛任务</h2><p>The goal of this competition is to predict e-commerce clicks, cart additions, and orders. You’ll build a multi-objective recommender system based on previous events in a user session.</p><p>这场比赛的目标是预测电子商务点击量、购物车添加量和订单。您将基于用户会话中以前的事件构建一个多目标推荐系统。</p><p>The training data contains full e-commerce session information. For each session in the test data, your task it to predict the aid values for each session type thats occur after the last timestamp ts in the test session. In other words, the test data contains sessions truncated by timestamp, and you are to predict what occurs after the point of truncation.</p><p>训练数据包含完整的电子商务会话信息。对于测试数据中的每个会话，您的任务是预测测试会话中最后一个时间戳ts之后出现的每个会话类型的商品编号(20个)。换句话说，测试数据包含按时间戳截断的会话，您要预测截断点之后会发生什么。</p><p><strong>总结:</strong> 给定每个用户每个时刻的行为(点击,加购,付款)的商品编号,给出下一个时刻,该用户三种行为最可能的20个商品编号.</p><h2 id="2-数据集"><a class="markdownIt-Anchor" href="#2-数据集"></a> 2. 数据集</h2><p><strong>数据描述:</strong><br /><img src="https://image.yayan.xyz/20240314194614.png" alt="" /></p><blockquote><p>2,899,779 sessions<br />1,855,603 items<br />216,716,096 events<br />194,720,954 clicks<br />16,896,191 carts<br />5,098,951 orders</p></blockquote><p><strong>训练数据:</strong><br /><img src="https://image.yayan.xyz/20240314194528.png" alt="" /></p><p><strong>提交样例文件:</strong><br /><img src="https://image.yayan.xyz/20240314190025.png" alt="" /></p><h2 id="3-思路"><a class="markdownIt-Anchor" href="#3-思路"></a> 3. 思路</h2><h3 id="candidate-generation"><a class="markdownIt-Anchor" href="#candidate-generation"></a> Candidate Generation</h3><p><a href="https://www.kaggle.com/competitions/otto-recommender-system/discussion/364721">Candidate Generation方法</a><br /><img src="https://image.yayan.xyz/20240314194910.png" alt="" /><br />原因:像这个数据量的数据直接放到模型里是不可能的事,所以按照上面的流程一步步来.</p><p><strong>Step 1 - Generate Candidates</strong><br />用来选择候选商品的一些标准：</p><ul><li>以前购买的物品</li><li>回购的物品</li><li>总体上最受欢迎的项目</li><li>基于某种聚类技术的相似项目</li><li>基于共同访问矩阵等类似项目</li></ul><p><strong>Step 2 - ReRank and Choose 20</strong><br />通过上一步,商品会少很多,然后可以按照一些规则来选择20个商品.</p><ul><li>Ranker Model</li><li>Handcrafted Rules</li></ul><h3 id="what-is-the-co-visitation-matrix-really"><a class="markdownIt-Anchor" href="#what-is-the-co-visitation-matrix-really"></a> What is the co-visitation matrix, really?</h3><p><a href="https://www.kaggle.com/competitions/otto-recommender-system/discussion/365358">What is the co-visitation matrix, really?</a></p><p>It is very interesting to think of modern techniques in the context of their roots.</p><p>“Radek is a _”.当我们预测横线上的词的时候, 三元模型会从&quot;Radek&quot;, “is”, and “a” 看,然后统计哪个单词和着三个单词出现的次数最多.</p><p>但是可能并没有那么多的&quot;Radek&quot;, “is”, and &quot;a&quot;的出现过.<br />所以这就是RNN(or word2vec)的出现,他们会看 “Radek was an _”, &quot;Tommy is a __&quot;作为例子.</p><p>那么，这与共访矩阵有什么关系呢？<br />共访问矩阵统计两个动作在非常接近的情况下的共出现。<br />如果用户购买了a，在购买B后不久，我们将这些值存储在一起。<br />我们计算计数，并根据最近的历史来估计未来行动的概率。<br />理解共同访问矩阵方法中发生的事情是非常重要的…</p><h3 id="candidate-rerank-model-lb-0575"><a class="markdownIt-Anchor" href="#candidate-rerank-model-lb-0575"></a> Candidate ReRank Model - [LB 0.575]</h3><p><a href="https://www.kaggle.com/code/cdeotte/candidate-rerank-model-lb-0-575?scriptVersionId=111214204">Candidate ReRank Model - LB 0.575</a></p><p><strong>Step 1 - Generate Candidates</strong><br />对每一个用户生成候选商品,五种方法:</p><ul><li>用户点击、购物车、订单的用户历史记录</li><li>测试数据一周内最受欢迎的20次点击、购物车、订单</li><li>点击/购物车/订单到购物车/订单 的共同访问矩阵(带有类型权重)</li><li>称为buy2buy的购物车/订单到购物车/订单的共访问矩阵</li><li>点击/购物车/订单与点击的共访问矩阵（带时间权重）</li></ul><p><strong>Step 2 - ReRank and Choose 20</strong><br />从上面的候选列表中选择20个作为最终预测结果,选取的顺序为:</p><ul><li>最近访问过的项目</li><li>以前多次访问的项目</li><li>以前在购物车或订单中的项目</li><li>购物车/订单到购物车/订单的共同访问矩阵</li><li>当前热门项目</li></ul><h4 id="候选商品生成"><a class="markdownIt-Anchor" href="#候选商品生成"></a> 候选商品生成</h4><p>“Carts Orders” Co-visitation Matrix - Type Weighted</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">构建思路:</span></span><br><span class="line"><span class="string">按照用户和时间进行排序</span></span><br><span class="line"><span class="string">df.groupby(&#x27;session&#x27;).cumcount()求出每个用户的行数</span></span><br><span class="line"><span class="string">保留每个用户最近的30个行为</span></span><br><span class="line"><span class="string">df.merge(df, on=&#x27;session&#x27;)创建每个用户的行为对其他行为的关系(目的是构建商品和商品的关系)</span></span><br><span class="line"><span class="string">筛选出时间间隔小于1天 且商品编号不相同的行,删除重复的值</span></span><br><span class="line"><span class="string">根据行为的权重系数,对商品之间的关系进行赋值</span></span><br><span class="line"><span class="string">得到了每个商品之间的权重系数</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">type_weight = &#123;<span class="number">0</span>:<span class="number">1</span>, <span class="number">1</span>:<span class="number">6</span>, <span class="number">2</span>:<span class="number">3</span>&#125;</span><br><span class="line">df = df.sort_values([<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;ts&#x27;</span>], ascending=[<span class="literal">True</span>, <span class="literal">False</span>])  <span class="comment"># 根据&#x27;session&#x27;和&#x27;ts&#x27;排序数据框，先升序排&#x27;session&#x27;再降序排&#x27;ts&#x27;</span></span><br><span class="line"><span class="comment"># 使用SESSION的TAIL</span></span><br><span class="line">df = df.reset_index(drop=<span class="literal">True</span>)  <span class="comment"># 重设索引并删除原索引</span></span><br><span class="line">df[<span class="string">&#x27;n&#x27;</span>] = df.groupby(<span class="string">&#x27;session&#x27;</span>).cumcount()  <span class="comment"># 对&#x27;session&#x27;进行分组计数</span></span><br><span class="line">df = df.loc[df.n &lt; <span class="number">30</span>].drop(<span class="string">&#x27;n&#x27;</span>, axis=<span class="number">1</span>)  <span class="comment"># 保留每个&#x27;session&#x27;组的前30行，然后删除计数列&#x27;n&#x27;</span></span><br><span class="line"><span class="comment"># 创建对关系</span></span><br><span class="line">df = df.merge(df, on=<span class="string">&#x27;session&#x27;</span>)  <span class="comment"># 在&#x27;session&#x27;列上合并数据框自身，创建对关系</span></span><br><span class="line">df = df.loc[((df.ts_x - df.ts_y).<span class="built_in">abs</span>() &lt; <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>) &amp; (df.aid_x != df.aid_y)]  <span class="comment"># 选择时间间隔小于1天且&#x27;aid_x&#x27;不等于&#x27;aid_y&#x27;的行</span></span><br><span class="line"><span class="comment"># 内存管理，分部计算</span></span><br><span class="line">df = df.loc[(df.aid_x &gt;= PART*SIZE) &amp; (df.aid_x &lt; (PART+<span class="number">1</span>)*SIZE)]  <span class="comment"># 根据&#x27;aid_x&#x27;值进行分块处理</span></span><br><span class="line"><span class="comment"># 分配权重</span></span><br><span class="line">df = df[[<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>, <span class="string">&#x27;type_y&#x27;</span>]].drop_duplicates([<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>])  <span class="comment"># 根据指定列去除重复行，选择指定列</span></span><br><span class="line">df[<span class="string">&#x27;wgt&#x27;</span>] = df.type_y.<span class="built_in">map</span>(type_weight)  <span class="comment"># 根据&#x27;type_y&#x27;映射权重值到&#x27;wgt&#x27;列</span></span><br><span class="line">df = df[[<span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>, <span class="string">&#x27;wgt&#x27;</span>]]  <span class="comment"># 保留&#x27;aid_x&#x27;, &#x27;aid_y&#x27;, &#x27;wgt&#x27;三列</span></span><br><span class="line">df.wgt = df.wgt.astype(<span class="string">&#x27;float32&#x27;</span>)  <span class="comment"># 将&#x27;wgt&#x27;列转换为float32类型</span></span><br><span class="line">df = df.groupby([<span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>]).wgt.<span class="built_in">sum</span>()  <span class="comment"># 根据&#x27;aid_x&#x27;, &#x27;aid_y&#x27;分组，并求&#x27;wgt&#x27;列的和</span></span><br></pre></td></tr></table></figure><p>“Buy2Buy” Co-visitation Matrix</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">构建思路:</span></span><br><span class="line"><span class="string">按照用户和时间进行排序</span></span><br><span class="line"><span class="string">df.groupby(&#x27;session&#x27;).cumcount()求出每个用户的行数</span></span><br><span class="line"><span class="string">保留每个用户最近的30个行为</span></span><br><span class="line"><span class="string">df.merge(df, on=&#x27;session&#x27;)创建每个用户的行为对其他行为的关系(目的是构建商品和商品的关系)</span></span><br><span class="line"><span class="string">筛选出时间间隔小于14天 且商品编号不相同的行,删除重复的值</span></span><br><span class="line"><span class="string">权重全部是1(加购和加购之间的关系),对商品和商品之间的关系进行分组求和</span></span><br><span class="line"><span class="string">得到了每个商品之间的权重系数</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">df = df.loc[df[<span class="string">&#x27;type&#x27;</span>].isin([<span class="number">1</span>,<span class="number">2</span>])] <span class="comment"># 仅保留购物车和订单</span></span><br><span class="line">df = df.sort_values([<span class="string">&#x27;session&#x27;</span>,<span class="string">&#x27;ts&#x27;</span>],ascending=[<span class="literal">True</span>,<span class="literal">False</span>]) <span class="comment"># 按&#x27;session&#x27;和&#x27;ts&#x27;降序排序</span></span><br><span class="line"><span class="comment"># 使用SESSION的TAIL</span></span><br><span class="line">df = df.reset_index(drop=<span class="literal">True</span>) <span class="comment"># 重新设置索引并丢弃原索引</span></span><br><span class="line">df[<span class="string">&#x27;n&#x27;</span>] = df.groupby(<span class="string">&#x27;session&#x27;</span>).cumcount() <span class="comment"># 计算每个&#x27;session&#x27;组的行数</span></span><br><span class="line"><span class="comment"># 保留用户最近的30个行为</span></span><br><span class="line">df = df.loc[df.n&lt;<span class="number">30</span>].drop(<span class="string">&#x27;n&#x27;</span>,axis=<span class="number">1</span>) <span class="comment"># 仅保留每个&#x27;session&#x27;组的前30行，并删除&#x27;n&#x27;列</span></span><br><span class="line"><span class="comment"># 创建成对关系</span></span><br><span class="line">df = df.merge(df, on=<span class="string">&#x27;session&#x27;</span>) <span class="comment"># 在&#x27;session&#x27;上合并数据框自身，创建成对关系</span></span><br><span class="line">df = df.loc[((df.ts_x - df.ts_y).<span class="built_in">abs</span>() &lt; <span class="number">14</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>) &amp; (df.aid_x != df.aid_y)] <span class="comment"># 筛选出时间间隔小于14天且&#x27;aid_x&#x27;不等于&#x27;aid_y&#x27;的行</span></span><br><span class="line"><span class="comment"># 内存管理，分部计算</span></span><br><span class="line">df = df.loc[(df.aid_x &gt;= PART*SIZE) &amp; (df.aid_x &lt; (PART+<span class="number">1</span>)*SIZE)] <span class="comment"># 根据&#x27;aid_x&#x27;的值对数据框进行分块处理</span></span><br><span class="line"><span class="comment"># 分配权重</span></span><br><span class="line">df = df[[<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>, <span class="string">&#x27;type_y&#x27;</span>]].drop_duplicates([<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>]) <span class="comment"># 根据&#x27;session&#x27;, &#x27;aid_x&#x27;, &#x27;aid_y&#x27;列去除重复行，并选择指定列</span></span><br><span class="line">df[<span class="string">&#x27;wgt&#x27;</span>] = <span class="number">1</span> <span class="comment"># 添加&#x27;wgt&#x27;列，并赋值为1</span></span><br><span class="line">df = df[[<span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>, <span class="string">&#x27;wgt&#x27;</span>]] <span class="comment"># 仅保留&#x27;aid_x&#x27;, &#x27;aid_y&#x27;, &#x27;wgt&#x27;三列</span></span><br><span class="line">df.wgt = df.wgt.astype(<span class="string">&#x27;float32&#x27;</span>) <span class="comment"># 将&#x27;wgt&#x27;列的数据类型转换为float32</span></span><br><span class="line">df = df.groupby([<span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>]).wgt.<span class="built_in">sum</span>() <span class="comment"># 根据&#x27;aid_x&#x27;, &#x27;aid_y&#x27;分组，并对&#x27;wgt&#x27;列求和</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>“Clicks” Co-visitation Matrix - Time Weighted</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">构建思路:</span></span><br><span class="line"><span class="string">按照用户和时间进行排序</span></span><br><span class="line"><span class="string">df.groupby(&#x27;session&#x27;).cumcount()求出每个用户的行数</span></span><br><span class="line"><span class="string">保留每个用户最近的30个行为</span></span><br><span class="line"><span class="string">df.merge(df, on=&#x27;session&#x27;)创建每个用户的行为对其他行为的关系(目的是构建商品和商品的关系)</span></span><br><span class="line"><span class="string">筛选出时间间隔小于1天 且商品编号不相同的行,删除重复的值</span></span><br><span class="line"><span class="string">按时间顺序对商品和商品之间的关系进行赋值,时间越近权重越大</span></span><br><span class="line"><span class="string">得到了每个商品之间的权重系数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">df = df.sort_values([<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;ts&#x27;</span>], ascending=[<span class="literal">True</span>, <span class="literal">False</span>])  <span class="comment"># 按&#x27;session&#x27;和&#x27;ts&#x27;排序，&#x27;session&#x27;升序，&#x27;ts&#x27;降序</span></span><br><span class="line"><span class="comment"># 使用SESSION的TAIL</span></span><br><span class="line">df = df.reset_index(drop=<span class="literal">True</span>)  <span class="comment"># 重置索引并删除旧索引</span></span><br><span class="line">df[<span class="string">&#x27;n&#x27;</span>] = df.groupby(<span class="string">&#x27;session&#x27;</span>).cumcount()  <span class="comment"># 对&#x27;session&#x27;进行计数</span></span><br><span class="line">df = df.loc[df.n &lt; <span class="number">30</span>].drop(<span class="string">&#x27;n&#x27;</span>, axis=<span class="number">1</span>)  <span class="comment"># 保留每个&#x27;session&#x27;组的前30行，然后删除计数列</span></span><br><span class="line"><span class="comment"># 创建对关系</span></span><br><span class="line">df = df.merge(df, on=<span class="string">&#x27;session&#x27;</span>)  <span class="comment"># 在&#x27;session&#x27;上合并数据框自身，创建对关系</span></span><br><span class="line">df = df.loc[((df.ts_x - df.ts_y).<span class="built_in">abs</span>() &lt; <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>) &amp; (df.aid_x != df.aid_y)]  <span class="comment"># 选择时间间隔小于1天且&#x27;aid_x&#x27;不等于&#x27;aid_y&#x27;的行</span></span><br><span class="line"><span class="comment"># 内存管理，分部计算</span></span><br><span class="line">df = df.loc[(df.aid_x &gt;= PART*SIZE) &amp; (df.aid_x &lt; (PART+<span class="number">1</span>)*SIZE)]  <span class="comment"># 根据&#x27;aid_x&#x27;的值对数据框进行分块处理</span></span><br><span class="line"><span class="comment"># 分配权重</span></span><br><span class="line">df = df[[<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>, <span class="string">&#x27;ts_x&#x27;</span>]].drop_duplicates([<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>])  <span class="comment"># 根据指定列去除重复行</span></span><br><span class="line">df[<span class="string">&#x27;wgt&#x27;</span>] = <span class="number">1</span> + <span class="number">3</span>*(df.ts_x - <span class="number">1659304800</span>) / (<span class="number">1662328791</span> - <span class="number">1659304800</span>)  <span class="comment"># 根据公式计算权重</span></span><br><span class="line">df = df[[<span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>, <span class="string">&#x27;wgt&#x27;</span>]]  <span class="comment"># 保留&#x27;aid_x&#x27;, &#x27;aid_y&#x27;, &#x27;wgt&#x27;三列</span></span><br><span class="line">df.wgt = df.wgt.astype(<span class="string">&#x27;float32&#x27;</span>)  <span class="comment"># 将&#x27;wgt&#x27;列的数据类型转换为float32</span></span><br><span class="line">df = df.groupby([<span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>]).wgt.<span class="built_in">sum</span>()  <span class="comment"># 根据&#x27;aid_x&#x27;, &#x27;aid_y&#x27;分组，并对&#x27;wgt&#x27;列求和</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 商品的矩阵构建完成之后都经历下面的步骤</span></span><br><span class="line">tmp = tmp.reset_index()</span><br><span class="line"><span class="comment"># 按照权重进行排序</span></span><br><span class="line">tmp = tmp.sort_values([<span class="string">&#x27;aid_x&#x27;</span>,<span class="string">&#x27;wgt&#x27;</span>],ascending=[<span class="literal">True</span>,<span class="literal">False</span>])</span><br><span class="line">tmp = tmp.reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 保留每个商品的前15(不定)个关系</span></span><br><span class="line">tmp[<span class="string">&#x27;n&#x27;</span>] = tmp.groupby(<span class="string">&#x27;aid_x&#x27;</span>).aid_y.cumcount()</span><br><span class="line">tmp = tmp.loc[tmp.n&lt;<span class="number">15</span>].drop(<span class="string">&#x27;n&#x27;</span>,axis=<span class="number">1</span>)</span><br><span class="line">tmp.groupby(<span class="string">&#x27;aid_x&#x27;</span>).aid_y.apply(<span class="built_in">list</span>).to_dict()</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">总结:</span></span><br><span class="line"><span class="string">1. &quot;Carts Orders&quot; Co-visitation Matrix - Type Weighted</span></span><br><span class="line"><span class="string">含义:根据用户的历史行为分配商品之间的权重系数对应top_20_buys</span></span><br><span class="line"><span class="string">2. &quot;Buy2Buy&quot; Co-visitation Matrix</span></span><br><span class="line"><span class="string">含义:根据用户的加购和购买行为分配商品之间的权重系数对应top_20_buy2buy</span></span><br><span class="line"><span class="string">3. &quot;Clicks&quot; Co-visitation Matrix - Time Weighted</span></span><br><span class="line"><span class="string">含义:根据用户的行为时间分配商品之间的权重系数对应top_20_clicks</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="重排名与最终选择"><a class="markdownIt-Anchor" href="#重排名与最终选择"></a> 重排名与最终选择</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">type_weight_multipliers = &#123;<span class="number">0</span>: <span class="number">1</span>, <span class="number">1</span>: <span class="number">6</span>, <span class="number">2</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">suggest_clicks</span>(<span class="params">df</span>):</span><br><span class="line">   <span class="comment"># USER HISTORY AIDS AND TYPES</span></span><br><span class="line">   aids = df.aid.tolist()  <span class="comment"># 获取用户历史商品id</span></span><br><span class="line">   ty = df.<span class="built_in">type</span>.tolist()  <span class="comment"># 获取用户历史行为</span></span><br><span class="line">   unique_aids = <span class="built_in">list</span>(<span class="built_in">dict</span>.fromkeys(aids[::-<span class="number">1</span>]))  <span class="comment"># 获取不重复的商品id</span></span><br><span class="line">   <span class="comment"># 如果历史商品id大于等于20个,则返回前20个商品id</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(unique_aids) &gt;= <span class="number">20</span>:</span><br><span class="line">       <span class="comment"># 根据商品id出现的时间,对商品id进行排序</span></span><br><span class="line">       weights = np.logspace(<span class="number">0.1</span>, <span class="number">1</span>, <span class="built_in">len</span>(aids), base=<span class="number">2</span>, endpoint=<span class="literal">True</span>) - <span class="number">1</span></span><br><span class="line">       <span class="comment"># 记录商品id:权重</span></span><br><span class="line">       aids_temp = Counter() </span><br><span class="line">       <span class="comment"># 商品,权重,类型</span></span><br><span class="line">       <span class="keyword">for</span> aid, w, t <span class="keyword">in</span> <span class="built_in">zip</span>(aids, weights, ty): </span><br><span class="line">           <span class="comment"># id权重=时间权重*类型权重</span></span><br><span class="line">           aids_temp[aid] += w * type_weight_multipliers[t]</span><br><span class="line">        <span class="comment"># 返回权重最大的前20个商品id</span></span><br><span class="line">       sorted_aids = [k <span class="keyword">for</span> k,v <span class="keyword">in</span> aids_temp.most_common(<span class="number">20</span>)]</span><br><span class="line">       <span class="keyword">return</span> sorted_aids</span><br><span class="line">   <span class="comment"># 如果不够20个, 从点击最高的商品关系中找到最近点击的商品 然后取出最关联的20个商品</span></span><br><span class="line">   aids2 = <span class="built_in">list</span>(itertools.chain(*[top_20_clicks[aid] <span class="keyword">for</span> aid <span class="keyword">in</span> unique_aids <span class="keyword">if</span> aid <span class="keyword">in</span> top_20_click]))</span><br><span class="line">   <span class="comment"># 从最近点击的商品的最关联的商品中找打出现次数最多的商品</span></span><br><span class="line">   top_aids2 = [aid2 <span class="keyword">for</span> aid2, cnt <span class="keyword">in</span> Counter(aids2).most_common(<span class="number">20</span>) <span class="keyword">if</span> aid2 <span class="keyword">not</span> <span class="keyword">in</span> unique_aids]</span><br><span class="line">   <span class="comment"># 将这些商品和用户历史商品合并</span></span><br><span class="line">   result = unique_aids + top_aids2[:<span class="number">20</span> - <span class="built_in">len</span>(unique_aids)]</span><br><span class="line">   <span class="comment"># 如果历史商品加上最关联的商品还不够20个,则从test中的历史数据中找到点击最高的商品</span></span><br><span class="line">   <span class="keyword">return</span> result + <span class="built_in">list</span>(top_clicks)[:<span class="number">20</span> - <span class="built_in">len</span>(result)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">suggest_buys</span>(<span class="params">df</span>):</span><br><span class="line">   <span class="comment"># USER HISTORY AIDS AND TYPES</span></span><br><span class="line">   aids = df.aid.tolist()  <span class="comment"># 获取用户历史商品id</span></span><br><span class="line">   ty = df.<span class="built_in">type</span>.tolist()  <span class="comment"># 获取用户历史行为</span></span><br><span class="line">   unique_aids = <span class="built_in">list</span>(<span class="built_in">dict</span>.fromkeys(aids[::-<span class="number">1</span>]))  <span class="comment"># 获取所有行为不重复的商品id</span></span><br><span class="line">   <span class="comment"># 只保留用户历史加购和购买的行为(商品id)</span></span><br><span class="line">   df = df.loc[(df[<span class="string">&#x27;type&#x27;</span>] == <span class="number">1</span>) | (df[<span class="string">&#x27;type&#x27;</span>] == <span class="number">2</span>)]  </span><br><span class="line">   <span class="comment"># 获取加购和购买的不重复商品id</span></span><br><span class="line">   unique_buys = <span class="built_in">list</span>(<span class="built_in">dict</span>.fromkeys(df.aid.tolist()[::-<span class="number">1</span>]))  </span><br><span class="line">   <span class="comment"># 如果历史行为商品id大于等于20个,则根据历史行为返回商品id</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(unique_aids) &gt;= <span class="number">20</span>:</span><br><span class="line">       <span class="comment"># 时间权重</span></span><br><span class="line">       weights = np.logspace(<span class="number">0.5</span>, <span class="number">1</span>, <span class="built_in">len</span>(aids), base=<span class="number">2</span>, endpoint=<span class="literal">True</span>) - <span class="number">1</span> </span><br><span class="line">       aids_temp = Counter() </span><br><span class="line">       <span class="comment"># id权重=时间权重*类型权重</span></span><br><span class="line">       <span class="keyword">for</span> aid, w, t <span class="keyword">in</span> <span class="built_in">zip</span>(aids, weights, types): </span><br><span class="line">           aids_temp[aid] += w * type_weight_multipliers[t] </span><br><span class="line">       <span class="comment"># 找到与用户历史购买/加购行为最相关的20个商品id</span></span><br><span class="line">       aids3 = <span class="built_in">list</span>(itertools.chain(*[top_20_buy2buy[aid] <span class="keyword">for</span> aid <span class="keyword">in</span> unique_buys <span class="keyword">if</span> aid <span class="keyword">in</span> top_20_buy2buy]))  </span><br><span class="line">       <span class="comment"># 对这些商品id的权重增加0.1</span></span><br><span class="line">       <span class="keyword">for</span> aid <span class="keyword">in</span> aids3: aids_temp[aid] += <span class="number">0.1</span></span><br><span class="line">       <span class="comment"># 返回权重最大的前20个商品id</span></span><br><span class="line">       sorted_aids = [k <span class="keyword">for</span> k, v <span class="keyword">in</span> aids_temp.most_common(<span class="number">20</span>)]</span><br><span class="line">       <span class="keyword">return</span> sorted_aids</span><br><span class="line">   <span class="comment"># 找到与用户历史所有行为的商品行为上最相关的20个商品id</span></span><br><span class="line">   aids2 = <span class="built_in">list</span>(itertools.chain(*[top_20_buys[aid] <span class="keyword">for</span> aid <span class="keyword">in</span> unique_aids <span class="keyword">if</span> aid <span class="keyword">in</span> top_20_buys]))  </span><br><span class="line">   <span class="comment"># 找到与用户历史购买/加购行为的商品最相关的20个商品id</span></span><br><span class="line">   aids3 = <span class="built_in">list</span>(itertools.chain(*[top_20_buy2buy[aid] <span class="keyword">for</span> aid <span class="keyword">in</span> unique_buys <span class="keyword">if</span> aid <span class="keyword">in</span> top_20_buy2buy]))  </span><br><span class="line">   <span class="comment"># 对这些商品出现的次数进行统计</span></span><br><span class="line">   top_aids2 = [aid2 <span class="keyword">for</span> aid2, cnt <span class="keyword">in</span> Counter(aids2 + aids3).most_common(<span class="number">20</span>) <span class="keyword">if</span> aid2 <span class="keyword">not</span> <span class="keyword">in</span> unique_aids]  </span><br><span class="line">    <span class="comment"># 获取最终结果,历史行为商品id+最相关的商品id</span></span><br><span class="line">   result = unique_aids + top_aids2[:<span class="number">20</span> - <span class="built_in">len</span>(unique_aids)] </span><br><span class="line">   <span class="comment"># 如果这些商品还不够20个,则从test中的历史数据中找到购买最高的商品</span></span><br><span class="line">   <span class="keyword">return</span> result + <span class="built_in">list</span>(top_orders)[:<span class="number">20</span> - <span class="built_in">len</span>(result)]  </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成预测结果</span></span><br><span class="line">pred_df_clicks = test_df.sort_values([<span class="string">&quot;session&quot;</span>, <span class="string">&quot;ts&quot;</span>]).groupby([<span class="string">&quot;session&quot;</span>]).apply(</span><br><span class="line">    <span class="keyword">lambda</span> x: suggest_clicks(x)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">pred_df_buys = test_df.sort_values([<span class="string">&quot;session&quot;</span>, <span class="string">&quot;ts&quot;</span>]).groupby([<span class="string">&quot;session&quot;</span>]).apply(</span><br><span class="line">    <span class="keyword">lambda</span> x: suggest_buys(x)</span><br><span class="line">)</span><br><span class="line">clicks_pred_df = pd.DataFrame(pred_df_clicks.add_suffix(<span class="string">&quot;_clicks&quot;</span>), columns=[<span class="string">&quot;labels&quot;</span>]).reset_index()</span><br><span class="line">orders_pred_df = pd.DataFrame(pred_df_buys.add_suffix(<span class="string">&quot;_orders&quot;</span>), columns=[<span class="string">&quot;labels&quot;</span>]).reset_index()</span><br><span class="line">carts_pred_df = pd.DataFrame(pred_df_buys.add_suffix(<span class="string">&quot;_carts&quot;</span>), columns=[<span class="string">&quot;labels&quot;</span>]).reset_index()</span><br><span class="line">pred_df = pd.concat([clicks_pred_df, orders_pred_df, carts_pred_df])</span><br><span class="line">pred_df.columns = [<span class="string">&quot;session_type&quot;</span>, <span class="string">&quot;labels&quot;</span>]</span><br><span class="line">pred_df[<span class="string">&quot;labels&quot;</span>] = pred_df.labels.apply(<span class="keyword">lambda</span> x: <span class="string">&quot; &quot;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,x)))</span><br><span class="line">pred_df.to_csv(<span class="string">&quot;submission.csv&quot;</span>, index=<span class="literal">False</span>)</span><br><span class="line">pred_df.head()</span><br></pre></td></tr></table></figure><h3 id="co-visitation-matrix"><a class="markdownIt-Anchor" href="#co-visitation-matrix"></a> Co-visitation Matrix</h3><p><a href="https://www.kaggle.com/code/vslaykovsky/co-visitation-matrix">Co-visitation Matrix</a></p><p><strong>Step 1 - Generate Candidates</strong></p><ul><li>总会有一些商品是经常点击的并且一起买,利用这个思想构建一个协同矩阵</li><li><ul><li>首先，我们查看同一会话中在时间上彼此接近（&lt;1天）的所有事件对。我们计算共同访问矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mrow><mi>a</mi><mi>i</mi><mi>d</mi><mn>1</mn><mtext>，</mtext><mi>a</mi><mi>i</mi><mi>d</mi><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">M_{aid1，aid2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mtight">1</span><span class="mord cjk_fallback mtight">，</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>通过对所有会话中的每对事件对的全局数量进行计数。</li></ul></li><li><ul><li>对于每个商品id,我们发现前20个最频繁的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>i</mi><mi>d</mi><mn>2</mn><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mi>s</mi><mi>o</mi><mi>r</mi><mi>t</mi><mtext>（</mtext><mi>M</mi><mo stretchy="false">[</mo><mi>a</mi><mi>i</mi><mi>d</mi><mo stretchy="false">]</mo><mtext>）</mtext><mo stretchy="false">[</mo><mo>−</mo><mn>20</mn><mo>:</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">aid2=argsort（M[aid]）[-20:]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mclose">]</span><span class="mord cjk_fallback">）</span><span class="mopen">[</span><span class="mord">−</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">]</span></span></span></span></li></ul></li></ul><p><strong>Step 2 - ReRank and Choose 20</strong></p><ul><li>从上面的候选列表中选择出现频率最高的20个作为最终预测结果</li></ul><h4 id="候选商品生成-2"><a class="markdownIt-Anchor" href="#候选商品生成-2"></a> 候选商品生成</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys  <span class="comment"># 导入sys模块</span></span><br><span class="line"><span class="keyword">import</span> gc  <span class="comment"># 导入gc模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_pairs</span>(<span class="params">df</span>):  <span class="comment"># 定义一个函数用于生成pairs</span></span><br><span class="line">   df = df.query(<span class="string">&#x27;session % @SAMPLING == 0&#x27;</span>).groupby(<span class="string">&#x27;session&#x27;</span>, as_index=<span class="literal">False</span>, sort=<span class="literal">False</span>).apply(<span class="keyword">lambda</span> g: g.tail(<span class="number">30</span>)).reset_index(drop=<span class="literal">True</span>)  <span class="comment"># 根据条件筛选数据并截取每个会话的最后30条记录</span></span><br><span class="line">   df = pd.merge(df, df, on=<span class="string">&#x27;session&#x27;</span>)  <span class="comment"># 在会话上进行自连接</span></span><br><span class="line">   pairs = df.query(<span class="string">&#x27;abs(ts_x - ts_y) &lt; 24 * 60 * 60 * 1000 and aid_x != aid_y&#x27;</span>)[[<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>]].drop_duplicates()  <span class="comment"># 筛选满足条件的数据对</span></span><br><span class="line">   <span class="keyword">return</span> pairs[[<span class="string">&#x27;aid_x&#x27;</span>, <span class="string">&#x27;aid_y&#x27;</span>]].values  <span class="comment"># 返回数据对中的&#x27;aid_x&#x27;和&#x27;aid_y&#x27;值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_aid_pairs</span>():  <span class="comment"># 定义一个函数生成aid_pairs </span></span><br><span class="line">   all_pairs = defaultdict(<span class="keyword">lambda</span>: Counter())  <span class="comment"># 初始化一个空字典用于存储所有数据配对</span></span><br><span class="line">   all_pair_chunks = []  <span class="comment"># 初始化一个空列表用于存储所有的数据块</span></span><br><span class="line">   <span class="keyword">with</span> tqdm(glob.glob(<span class="string">&#x27;../input/otto-chunk-data-inparquet-format/*_parquet/*&#x27;</span>), desc=<span class="string">&#x27;Chunks&#x27;</span>) <span class="keyword">as</span> prog:  <span class="comment"># 使用tqdm来展示进度条，并遍历文件</span></span><br><span class="line">       <span class="keyword">for</span> idx, chunk_file <span class="keyword">in</span> <span class="built_in">enumerate</span>(prog):  <span class="comment"># 遍历文件</span></span><br><span class="line">           <span class="keyword">with</span> multiprocessing.Pool() <span class="keyword">as</span> p:  <span class="comment"># 创建多进程池</span></span><br><span class="line">               chunk = pd.read_parquet(chunk_file).drop(columns=[<span class="string">&#x27;type&#x27;</span>])  <span class="comment"># 从parquet文件中读取数据块</span></span><br><span class="line">               pair_chunks = p.<span class="built_in">map</span>(gen_pairs, np.array_split(chunk, <span class="number">120</span>))  <span class="comment"># 将数据块拆分并使用gen_pairs函数生成数据对</span></span><br><span class="line">               pair_chunks = np.concatenate(pair_chunks, axis=<span class="number">0</span>)  <span class="comment"># 将数据块连接成一个数组</span></span><br><span class="line">               all_pair_chunks.append(pair_chunks)  <span class="comment"># 将数据块添加到数据块列表中</span></span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> DEBUG <span class="keyword">and</span> idx &gt;= <span class="number">3</span>:  <span class="comment"># 如果处于DEBUG模式且索引大于等于3时，跳出循环</span></span><br><span class="line">                   <span class="keyword">break</span></span><br><span class="line">               <span class="keyword">del</span> chunk, pair_chunks  <span class="comment"># 删除数据块和数据对</span></span><br><span class="line">               gc.collect()  <span class="comment"># 回收内存</span></span><br><span class="line"></span><br><span class="line">   df = pd.DataFrame(data=np.concatenate(all_pair_chunks), columns=[<span class="string">&#x27;aid1&#x27;</span>, <span class="string">&#x27;aid2&#x27;</span>])  <span class="comment"># 创建包含所有数据对的数据框</span></span><br><span class="line">   top_aids = df.groupby(<span class="string">&#x27;aid1&#x27;</span>).apply(<span class="keyword">lambda</span> df: Counter(df.aid2).most_common(<span class="number">40</span>)).to_dict()  <span class="comment"># 根据&#x27;aid1&#x27;分组，并获取前40个最常见的&#x27;aid2&#x27;值</span></span><br><span class="line">   <span class="keyword">return</span> top_aids  <span class="comment"># 返回每个&#x27;aid1&#x27;对应的前40个最常见的&#x27;aid2&#x27;值的字典</span></span><br><span class="line"><span class="comment">#    top_aids的数据结构如下：</span></span><br><span class="line"><span class="comment">#    &#123;aid1: [(aid2, count), (aid2, count), ...], aid1: [(aid2, count), (aid2, count), ...], ...&#125;</span></span><br></pre></td></tr></table></figure><h4 id="重排名与最终选择-2"><a class="markdownIt-Anchor" href="#重排名与最终选择-2"></a> 重排名与最终选择</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">suggest_aids</span>(<span class="params">df</span>):</span><br><span class="line">    <span class="comment"># 选择用户最后操作的20个商品id</span></span><br><span class="line">    aids = df.tail(<span class="number">20</span>).aid.tolist()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(aids) &gt;= <span class="number">20</span>:</span><br><span class="line">        <span class="keyword">return</span> aids</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 最后的行为不够20个,就从top_40_cnt中找到与用户最后行为最相关的商品</span></span><br><span class="line">    aids = <span class="built_in">set</span>(aids)</span><br><span class="line">    new_aids = Counter()</span><br><span class="line">    <span class="keyword">for</span> aid <span class="keyword">in</span> aids:</span><br><span class="line">        new_aids.update(top_40_cnt.get(aid, Counter()))</span><br><span class="line">    <span class="comment"># 选取出现次数最多的商品</span></span><br><span class="line">    top_aids2 = [aid2 <span class="keyword">for</span> aid2, cnt <span class="keyword">in</span> new_aids.most_common(<span class="number">20</span>) <span class="keyword">if</span> aid2 <span class="keyword">not</span> <span class="keyword">in</span> aids]        </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(aids) + top_aids2[:<span class="number">20</span> - <span class="built_in">len</span>(aids)]</span><br><span class="line"></span><br><span class="line">pred_df = test_df.sort_values([<span class="string">&quot;session&quot;</span>, <span class="string">&quot;type&quot;</span>, <span class="string">&quot;ts&quot;</span>]).groupby([<span class="string">&quot;session&quot;</span>]).apply(</span><br><span class="line">    <span class="keyword">lambda</span> x: suggest_aids(x)</span><br><span class="line">)</span><br><span class="line"><span class="comment">##################</span></span><br><span class="line"><span class="comment"># BELOW IS CODE ADDED BY CHRIS</span></span><br><span class="line"><span class="comment"># 将click, order, cart的预测结果分开处理</span></span><br></pre></td></tr></table></figure><h3 id="how-to-build-a-gbt-ranker-model"><a class="markdownIt-Anchor" href="#how-to-build-a-gbt-ranker-model"></a> How To Build a GBT Ranker Model</h3><p><a href="https://www.kaggle.com/code/radek1/training-an-xgboost-ranker-on-the-gpu">🏆 Training an XGBoost Ranker on the GPU 🔥🔥🔥</a><br /><a href="https://www.kaggle.com/code/radek1/polars-proof-of-concept-lgbm-ranker">💡 [polars] Proof of concept: LGBM Ranker🧪🧪🧪</a><br /><a href="https://www.kaggle.com/competitions/otto-recommender-system/discussion/370210">How To Build a GBT Ranker Model</a></p><p><strong>Step 1 - Generate Candidates</strong><br />使用上面的方法生成候选商品列表<br />每行一个session一个aid,数据内容如下</p><ul><li>session (i.e. user)</li><li>aid (i.e. item)</li><li>user features</li><li>item features</li><li>user-item interaction features</li><li>click target (i.e 0 or 1)</li><li>cart target (i.e. 0 or 1)</li><li>order target (i.e. 0 or 1)</li></ul><p><strong>Step 2 - ReRank and Choose 20</strong><br />使用GBT模型最终的20个商品进行预测</p><ol><li><p>Step 1<br />构建模型的数据集:训练数据是公开数据的前三周,验证数据是第四周.<br />验证数据又被分为valid A 和valid B, B是ground truth<br />对每个session先给出50个候选商品id,然后得到了一个(number_of_session * 50, 2)大小的dataframe,类似:<br />| session | aid |<br />| — | — |<br />| 1 | 1234 |<br />| 1 | 9841 |<br />| 2 | 5845 |<br />| 2 | 8984 |</p></li><li><p>Setp 2<br />创建商品特征(item feature),使用训练数据和验证数据A</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">item_features = train.groupby(<span class="string">&#x27;aid&#x27;</span>).agg(&#123;<span class="string">&#x27;aid&#x27;</span>:<span class="string">&#x27;count&#x27;</span>,<span class="string">&#x27;session&#x27;</span>:<span class="string">&#x27;nunique&#x27;</span>,<span class="string">&#x27;type&#x27;</span>:<span class="string">&#x27;mean&#x27;</span>&#125;)</span><br><span class="line">item_features.columns = [<span class="string">&#x27;item_item_count&#x27;</span>,<span class="string">&#x27;item_user_count&#x27;</span>,<span class="string">&#x27;item_buy_ratio&#x27;</span>]</span><br><span class="line"><span class="comment"># 分别是商品-商品的关系,商品-用户的火热度,商品-购买系数概率</span></span><br></pre></td></tr></table></figure><ol start="3"><li>Setp 3<br />创建用户特征(user feature),使用验证数据A</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user_features = train.groupby(<span class="string">&#x27;session&#x27;</span>).agg(&#123;<span class="string">&#x27;session&#x27;</span>:<span class="string">&#x27;count&#x27;</span>,<span class="string">&#x27;aid&#x27;</span>:<span class="string">&#x27;nunique&#x27;</span>,<span class="string">&#x27;type&#x27;</span>:<span class="string">&#x27;mean&#x27;</span>&#125;)</span><br><span class="line">user_features.columns = [<span class="string">&#x27;user_user_count&#x27;</span>,<span class="string">&#x27;user_item_count&#x27;</span>,<span class="string">&#x27;user_buy_ratio&#x27;</span>]</span><br><span class="line"><span class="comment"># 分别是用户-用户的关系,用户-商品的购买了,用户-购买系数概率</span></span><br></pre></td></tr></table></figure><ol start="4"><li><p>Setp 4<br />创建用户-商品交互特征(user-item interaction feature),使用验证数据A<br />思路很多没有具体给出.例如:<br />创建用户-商品点击交互特征<br />| session | aid | item_click|<br />| — | — | — |</p></li><li><p>Setp 5<br />将特征添加到candidate dataframe中</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">candidates = candidates.merge(item_features, left_on=<span class="string">&#x27;aid&#x27;</span>, right_index=<span class="literal">True</span>, how=<span class="string">&#x27;left&#x27;</span>).fillna(-<span class="number">1</span>)</span><br><span class="line">candidates = candidates.merge(user_features, left_on=<span class="string">&#x27;session&#x27;</span>, right_index=<span class="literal">True</span>, how=<span class="string">&#x27;left&#x27;</span>).fillna(-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>然后candidate dataframe类似:</p><table><thead><tr><th>session</th><th>aid</th><th>item_feat1</th><th>item_feat2</th><th>user_feat1</th><th>user_feat2</th></tr></thead><tbody><tr><td>1</td><td>1234</td><td>1</td><td>2</td><td>3</td><td>4</td></tr><tr><td>1</td><td>9841</td><td>5</td><td>6</td><td>7</td><td>8</td></tr><tr><td>2</td><td>5845</td><td>9</td><td>10</td><td>11</td><td>12</td></tr><tr><td>2</td><td>8984</td><td>13</td><td>14</td><td>15</td><td>16</td></tr></tbody></table><ol start="6"><li>Setp 6<br />构建ground truth,例如<code>test_labels.parquet</code>:<br />| session | type | ground_truth |<br />| — | — | — |<br />| 1 | carts | [5456,4545,98741,2355] |<br />| 2 | carts | [1257,8653,2547] |</li></ol><p>然后将其转换为如下:</p><table><thead><tr><th>session</th><th>aid</th><th>cart</th></tr></thead><tbody><tr><td>1</td><td>5456</td><td>1</td></tr><tr><td>1</td><td>4545</td><td>1</td></tr><tr><td>1</td><td>98741</td><td>1</td></tr></tbody></table><p>然后将其合并到candidate dataframe中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">candidates = candidates.merge(cart_target,on=[<span class="string">&#x27;user&#x27;</span>,<span class="string">&#x27;item&#x27;</span>],how=<span class="string">&#x27;left&#x27;</span>).fillna(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>candidates dataframe类似:</p><table><thead><tr><th>session</th><th>aid</th><th>item_feat1</th><th>item_feat2</th><th>user_feat1</th><th>user_feat2</th><th>cart</th></tr></thead><tbody><tr><td>1</td><td>1234</td><td>1</td><td>2</td><td>3</td><td>4</td><td>0</td></tr><tr><td>1</td><td>9841</td><td>5</td><td>6</td><td>7</td><td>8</td><td>1</td></tr><tr><td>2</td><td>5845</td><td>9</td><td>10</td><td>11</td><td>12</td><td>0</td></tr><tr><td>2</td><td>8984</td><td>13</td><td>14</td><td>15</td><td>16</td><td>1</td></tr></tbody></table><ol start="7"><li>Setp 7<br />训练,不适用user和aid列:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xgboost <span class="keyword">as</span> xgb  <span class="comment"># 导入XGBoost库</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GroupKFold  <span class="comment"># 从sklearn库中导入GroupKFold模块</span></span><br><span class="line"></span><br><span class="line">skf = GroupKFold(n_splits=<span class="number">5</span>)  <span class="comment"># 使用GroupKFold方法划分数据集为5折交叉验证</span></span><br><span class="line"><span class="comment"># groups参数的作用是指定用于分组的特征列。在GroupKFold交叉验证中，通过指定groups参数，可以确保在交叉验证过程中，同一组内的数据样本不会同时出现在训练集和验证集中，以避免数据泄露和提高模型的准确性。在这里，candidates[&#x27;user&#x27;]列被用作分组的特征列，以确保每个用户的数据在交叉验证时能够保持独立。</span></span><br><span class="line"><span class="keyword">for</span> fold, (train_idx, valid_idx) <span class="keyword">in</span> <span class="built_in">enumerate</span>(skf.split(candidates, candidates[<span class="string">&#x27;click&#x27;</span>], groups=candidates[<span class="string">&#x27;user&#x27;</span>])):  <span class="comment"># 遍历每一个交叉验证折数</span></span><br><span class="line"></span><br><span class="line">   X_train = candidates.loc[train_idx, FEATURES]  <span class="comment"># 获取训练集特征数据</span></span><br><span class="line">   y_train = candidates.loc[train_idx, <span class="string">&#x27;click&#x27;</span>]  <span class="comment"># 获取训练集标签数据</span></span><br><span class="line">   X_valid = candidates.loc[valid_idx, FEATURES]  <span class="comment"># 获取验证集特征数据</span></span><br><span class="line">   y_valid = candidates.loc[valid_idx, <span class="string">&#x27;click&#x27;</span>]  <span class="comment"># 获取验证集标签数据</span></span><br><span class="line"></span><br><span class="line">   <span class="comment"># 如果有50个候选项，则使用50个作为分组信息</span></span><br><span class="line"><span class="comment"># 创建一个XGBoost中的DMatrix对象，用于存储训练集的特征数据、标签数据以及分组信息。</span></span><br><span class="line"><span class="comment"># 创建DMatrix对象，可以使训练数据更高效地传递给XGBoost模型，并且能够利用分组信息优化模型的学习过程。</span></span><br><span class="line">   dtrain = xgb.DMatrix(X_train, y_train, group=[<span class="number">50</span>] * (<span class="built_in">len</span>(train_idx)//<span class="number">50</span>) )  <span class="comment"># 创建训练集的DMatrix</span></span><br><span class="line">   dvalid = xgb.DMatrix(X_valid, y_valid, group=[<span class="number">50</span>] * (<span class="built_in">len</span>(valid_idx)//<span class="number">50</span>) )  <span class="comment"># 创建验证集的DMatrix</span></span><br><span class="line"></span><br><span class="line">   xgb_parms = &#123;<span class="string">&#x27;objective&#x27;</span>:<span class="string">&#x27;rank:pairwise&#x27;</span>, <span class="string">&#x27;tree_method&#x27;</span>:<span class="string">&#x27;gpu_hist&#x27;</span>&#125;  <span class="comment"># 设置XGBoost的参数</span></span><br><span class="line">   model = xgb.train(xgb_parms, </span><br><span class="line">       dtrain=dtrain,</span><br><span class="line">       evals=[(dtrain,<span class="string">&#x27;train&#x27;</span>),(dvalid,<span class="string">&#x27;valid&#x27;</span>)],</span><br><span class="line">       num_boost_round=<span class="number">1000</span>,</span><br><span class="line">       verbose_eval=<span class="number">100</span>)  <span class="comment"># 训练XGBoost模型</span></span><br><span class="line">   model.save_model(<span class="string">f&#x27;XGB_fold<span class="subst">&#123;fold&#125;</span>_click.xgb&#x27;</span>)  <span class="comment"># 保存训练好的模型</span></span><br></pre></td></tr></table></figure><ol start="8"><li>Setp 8<br />推理:为了进行推理，我们创建了一个新的候选数据帧，但这次是根据Kaggle的测试数据。然后，我们从Kaggle训练的所有4周加上Kaggle测试的1周中制作项目特征(item feature)。我们通过Kaggle测试制作用户特征(user feature)。我们将这些特征合并到我们的候选者中。然后，我们使用保存的模型来推断点击量的预测。最后，我们通过对预测进行排序并选择20个。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">preds = np.zeros(<span class="built_in">len</span>(test_candidates))  <span class="comment"># 初始化一个全零数组用于存储预测值</span></span><br><span class="line"><span class="keyword">for</span> fold <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):  <span class="comment"># 遍历5个交叉验证折数</span></span><br><span class="line">   model = xgb.Booster()  <span class="comment"># 创建一个XGBoost模型</span></span><br><span class="line">   model.load_model(<span class="string">f&#x27;XGB_fold<span class="subst">&#123;fold&#125;</span>_click.xgb&#x27;</span>)  <span class="comment"># 载入训练好的XGBoost模型</span></span><br><span class="line">   model.set_param(&#123;<span class="string">&#x27;predictor&#x27;</span>: <span class="string">&#x27;gpu_predictor&#x27;</span>&#125;)  <span class="comment"># 设置模型参数为GPU加速预测</span></span><br><span class="line">   dtest = xgb.DMatrix(data=test_candidates[FEATURES])  <span class="comment"># 创建测试集的DMatrix对象</span></span><br><span class="line"><span class="comment"># 结果是每个候选值的预测得分（概率）</span></span><br><span class="line">   preds += model.predict(dtest)/<span class="number">5</span>  <span class="comment"># 对测试集进行预测，并将结果累加求平均</span></span><br><span class="line"></span><br><span class="line">predictions = test_candidates[[<span class="string">&#x27;user&#x27;</span>,<span class="string">&#x27;item&#x27;</span>]].copy()  <span class="comment"># 复制测试集的&#x27;user&#x27;和&#x27;item&#x27;列作为预测结果的基础</span></span><br><span class="line">predictions[<span class="string">&#x27;pred&#x27;</span>] = preds  <span class="comment"># 将预测结果添加到predictions中</span></span><br><span class="line"></span><br><span class="line">predictions = predictions.sort_values([<span class="string">&#x27;user&#x27;</span>,<span class="string">&#x27;pred&#x27;</span>], ascending=[<span class="literal">True</span>,<span class="literal">False</span>]).reset_index(drop=<span class="literal">True</span>)  <span class="comment"># 对预测结果按&#x27;user&#x27;和&#x27;pred&#x27;进行排序，并重置索引</span></span><br><span class="line">predictions[<span class="string">&#x27;n&#x27;</span>] = predictions.groupby(<span class="string">&#x27;user&#x27;</span>).item.cumcount().astype(<span class="string">&#x27;int8&#x27;</span>)  <span class="comment"># 根据&#x27;user&#x27;分组后，计算每个用户的条目数量作为序号</span></span><br><span class="line">predictions = predictions.loc[predictions.n&lt;<span class="number">20</span>]  <span class="comment"># 保留每个用户前20个预测结果</span></span><br><span class="line">sub = predictions.groupby(<span class="string">&#x27;user&#x27;</span>).item.apply(<span class="built_in">list</span>)  <span class="comment"># 根据用户分组，将预测结果转换为列表</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sub = sub.to_frame().reset_index()  <span class="comment"># 将预测结果转换为DataFrame格式</span></span><br><span class="line">sub.item = sub.item.apply(<span class="keyword">lambda</span> x: <span class="string">&quot; &quot;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,x)))  <span class="comment"># 将列表中的数字转换为字符串并拼接成一个字符串</span></span><br><span class="line">sub.columns = [<span class="string">&#x27;session_type&#x27;</span>,<span class="string">&#x27;labels&#x27;</span>]  <span class="comment"># 重命名DataFrame的列名</span></span><br><span class="line">sub.session_type = sub.session_type.astype(<span class="string">&#x27;str&#x27;</span>)+ <span class="string">&#x27;_clicks&#x27;</span>  <span class="comment"># 修改&#x27;session_type&#x27;列的数据类型</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="word2vec-how-to-training-and-submission"><a class="markdownIt-Anchor" href="#word2vec-how-to-training-and-submission"></a> 💡 Word2Vec How-to [training and submission]🚀🚀🚀</h3><p><a href="https://www.kaggle.com/code/radek1/word2vec-how-to-training-and-submission">💡 Word2Vec How-to [training and submission]🚀🚀🚀</a></p><p>A session where one action follows another action is very much like a sentence!</p><p>类似地，在这里我们可以利用这样一个事实，即在一个紧密的序列中出现的商品id可能有一些相似之处。</p><p>所以我们使用word2vec模型来训练商品id的嵌入向量，然后使用这些向量来计算商品id之间的相似度。</p><p>这样给定一个商品的id就可以找到和她类似的商品id。</p><h4 id="使用word2vec直接获取20个商品"><a class="markdownIt-Anchor" href="#使用word2vec直接获取20个商品"></a> 使用word2vec直接获取20个商品</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 将用户的所有行为的商品id转换为一个句子,[&#x27;aid1&#x27;,&#x27;aid2&#x27;,&#x27;aid3&#x27;,&#x27;aid4&#x27;]</span></span><br><span class="line">sentences_df = pl.concat([train, test]).groupby(<span class="string">&#x27;session&#x27;</span>).agg(</span><br><span class="line">    pl.col(<span class="string">&#x27;aid&#x27;</span>).alias(<span class="string">&#x27;sentence&#x27;</span>)</span><br><span class="line">)</span><br><span class="line">sentences = sentences_df[<span class="string">&#x27;sentence&#x27;</span>].to_list()</span><br><span class="line"><span class="comment"># 训练word2vec模型</span></span><br><span class="line">w2vec = Word2Vec(sentences=sentences, vector_size=<span class="number">32</span>, min_count=<span class="number">1</span>, workers=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建aid到索引的映射字典</span></span><br><span class="line">aid2idx = &#123;aid: i <span class="keyword">for</span> i, aid <span class="keyword">in</span> <span class="built_in">enumerate</span>(w2vec. index_to_key)&#125;  </span><br><span class="line"><span class="comment"># 创建一个Annoy索引对象，指定向量维度为32，距离度量方式为欧氏距离</span></span><br><span class="line">index = AnnoyIndex(<span class="number">32</span>, <span class="string">&#x27;euclidean&#x27;</span>)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历aid2idx字典</span></span><br><span class="line"><span class="keyword">for</span> aid, idx <span class="keyword">in</span> aid2idx.items():  </span><br><span class="line">   index.add_item(idx, w2vec.wv.vectors[idx])  <span class="comment"># 将向量添加到Annoy索引对象中</span></span><br><span class="line">   </span><br><span class="line">index.build(<span class="number">10</span>)  <span class="comment"># 构建Annoy索引，其中10表示构建索引时要使用的树的数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># index存储的是 索引-&gt;向量</span></span><br><span class="line"><span class="comment"># aid2idx存储的是 商品id-&gt;索引</span></span><br><span class="line">sample_sub = pd.read_csv(<span class="string">&#x27;../input/otto-recommender-system//sample_submission.csv&#x27;</span>)  <span class="comment"># 从CSV文件中读取sample_sub数据</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">选择最近的20个商品</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从测试集中获取每个用户的AID列表和类型列表</span></span><br><span class="line">test_session_AIDs = test.to_pandas().reset_index(drop=<span class="literal">True</span>).groupby(<span class="string">&#x27;session&#x27;</span>)[<span class="string">&#x27;aid&#x27;</span>].apply(<span class="built_in">list</span>)</span><br><span class="line">test_session_types = test.to_pandas().reset_index(drop=<span class="literal">True</span>).groupby(<span class="string">&#x27;session&#x27;</span>)[<span class="string">&#x27;type&#x27;</span>].apply(<span class="built_in">list</span>)</span><br><span class="line"></span><br><span class="line">labels = []  <span class="comment"># 初始化一个空列表用于存储标签结果</span></span><br><span class="line"></span><br><span class="line">type_weight_multipliers = &#123;<span class="number">0</span>: <span class="number">1</span>, <span class="number">1</span>: <span class="number">6</span>, <span class="number">2</span>: <span class="number">3</span>&#125;  <span class="comment"># 定义类型权重</span></span><br><span class="line"><span class="keyword">for</span> AIDs, types <span class="keyword">in</span> <span class="built_in">zip</span>(test_session_AIDs, test_session_types):  <span class="comment"># 遍历测试集中的每个用户的AID和类型</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(AIDs) &gt;= <span class="number">20</span>:  <span class="comment"># 如果AID数量大于等于20</span></span><br><span class="line">       <span class="comment"># 如果我们有足够的AID（大于等于20）我们不需要查找候选项！我们只需使用旧的逻辑</span></span><br><span class="line">       weights=np.logspace(<span class="number">0.1</span>,<span class="number">1</span>,<span class="built_in">len</span>(AIDs),base=<span class="number">2</span>, endpoint=<span class="literal">True</span>)-<span class="number">1</span>  <span class="comment"># 根据AID数量生成对应的权重</span></span><br><span class="line">       aids_temp=defaultdict(<span class="keyword">lambda</span>: <span class="number">0</span>)  <span class="comment"># 初始化一个默认值为0的字典</span></span><br><span class="line">       <span class="keyword">for</span> aid,w,t <span class="keyword">in</span> <span class="built_in">zip</span>(AIDs,weights,types):  <span class="comment"># 遍历AID，权重和类型</span></span><br><span class="line">           aids_temp[aid]+= w * type_weight_multipliers[t]  <span class="comment"># 根据AID和类型计算加权得分</span></span><br><span class="line">       </span><br><span class="line">       sorted_aids=[k <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">sorted</span>(aids_temp.items(), key=<span class="keyword">lambda</span> item: -item[<span class="number">1</span>])]  <span class="comment"># 按照加权得分对AID进行排序</span></span><br><span class="line">       labels.append(sorted_aids[:<span class="number">20</span>])  <span class="comment"># 将前20个AID添加到标签中</span></span><br><span class="line">   <span class="keyword">else</span>:  <span class="comment"># 如果AID数量小于20</span></span><br><span class="line">       <span class="comment"># 这里我们没有20个AID要输出-我们将使用word2vec嵌入来生成候选项！</span></span><br><span class="line">       AIDs = <span class="built_in">list</span>(<span class="built_in">dict</span>.fromkeys(AIDs[::-<span class="number">1</span>]))  <span class="comment"># 移除重复项并反转AID列表</span></span><br><span class="line"></span><br><span class="line">       <span class="comment"># 获取时间最近的AID</span></span><br><span class="line">       most_recent_aid = AIDs[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># most_recent_aid是商品id,aid2idx[most_recent_aid]拿到对应的索引</span></span><br><span class="line">        <span class="comment"># index.get_nns_by_item(aid2idx[most_recent_aid], 21)根据索引获取向量并计算最近的21个商品</span></span><br><span class="line">       <span class="comment"># 寻找一些邻居</span></span><br><span class="line">       nns = [w2vec.wv.index_to_key[i] <span class="keyword">for</span> i <span class="keyword">in</span> index.get_nns_by_item(aid2idx[most_recent_aid], <span class="number">21</span>)[<span class="number">1</span>:]]  <span class="comment"># 使用Annoy索引找到最近邻的AID</span></span><br><span class="line">       labels.append((AIDs+nns)[:<span class="number">20</span>])  <span class="comment"># 将AID和邻居的AID组合，取前20个作为标签</span></span><br></pre></td></tr></table></figure><h4 id="使用word2vec-获取候选商品"><a class="markdownIt-Anchor" href="#使用word2vec-获取候选商品"></a> 使用word2vec 获取候选商品</h4><p>和covisiation matrix类似,使用word2vec可以获取最相关的商品</p><p>数据为:</p><table><thead><tr><th>session</th><th>aid</th><th>type</th></tr></thead><tbody><tr><td>1</td><td>10</td><td>0</td></tr><tr><td>1</td><td>20</td><td>0</td></tr><tr><td>2</td><td>20</td><td>1</td></tr><tr><td>2</td><td>30</td><td>0</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">假如通过上面的代码我们已经类似的获取到了最相关的商品</span><br><span class="line">| session | aid |</span><br><span class="line">| --- | --- |</span><br><span class="line">| <span class="number">1</span> | <span class="number">11</span> | </span><br><span class="line">| <span class="number">1</span> | <span class="number">20</span> |</span><br><span class="line">| <span class="number">2</span> | <span class="number">25</span> | </span><br><span class="line">| <span class="number">2</span> | <span class="number">6</span> | </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">那么下面还有几个步骤</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> Step <span class="number">1</span>: Add ordering information to our candidates.</span><br><span class="line">word2vec模型是按照相似度评分来排序的,所以我们需要添加一些排序信息</span><br><span class="line"></span><br><span class="line">| session | aid | rank |</span><br><span class="line">| --- | --- | --- |</span><br><span class="line">| <span class="number">1</span> | <span class="number">11</span> | <span class="number">1</span> |</span><br><span class="line">| <span class="number">1</span> | <span class="number">20</span> | <span class="number">2</span> |</span><br><span class="line">| <span class="number">2</span> | <span class="number">25</span> | <span class="number">1</span> |</span><br><span class="line">| <span class="number">2</span> | <span class="number">6</span> | <span class="number">2</span> |</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 将这些信息合并到candidates中</span><br><span class="line">| session | aid | rank | <span class="built_in">type</span> |</span><br><span class="line">| --- | --- | --- | --- |</span><br><span class="line">| <span class="number">1</span> | <span class="number">11</span> | <span class="number">1</span> | null |</span><br><span class="line">| <span class="number">1</span> | <span class="number">20</span> | <span class="number">2</span> | <span class="number">0</span> |</span><br><span class="line">| <span class="number">1</span> | <span class="number">10</span> | null | <span class="number">0</span> |</span><br><span class="line">| <span class="number">2</span> | <span class="number">25</span> | <span class="number">1</span> | null |</span><br><span class="line">| <span class="number">2</span> | <span class="number">6</span> | <span class="number">2</span> | null |</span><br><span class="line">| <span class="number">2</span> | <span class="number">20</span> | null | <span class="number">1</span> |</span><br><span class="line">| <span class="number">2</span> | <span class="number">30</span> | null | <span class="number">0</span> |</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 使用Ranker模型进行预测,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 💡 [2 methods] How-to ensemble predictions 🏅🏅🏅</span></span><br><span class="line">[💡 [<span class="number">2</span> methods] How-to ensemble predictions 🏅🏅🏅](https://www.kaggle.com/code/radek1/<span class="number">2</span>-methods-how-to-ensemble-predictions)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">对预测结果集成:</span><br><span class="line">- 投票集成(voting ensemble)</span><br><span class="line">- 加权投票集成(voting ensemble <span class="keyword">with</span> weights),对好结果有更大的权重</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_sub</span>(<span class="params">path, weight=<span class="number">1</span></span>):  <span class="comment"># 定义一个函数用于加载和预处理提交结果</span></span><br><span class="line">   <span class="string">&#x27;&#x27;&#x27;a helper function for loading and preprocessing submissions&#x27;&#x27;&#x27;</span></span><br><span class="line">   <span class="keyword">return</span> (</span><br><span class="line">       pl.read_csv(path)  <span class="comment"># 从路径中读取CSV文件</span></span><br><span class="line">           .with_column(pl.col(<span class="string">&#x27;labels&#x27;</span>).<span class="built_in">str</span>.split(by=<span class="string">&#x27; &#x27;</span>))  <span class="comment"># 将&#x27;labels&#x27;列按空格拆分为列表</span></span><br><span class="line">           .with_column(pl.lit(weight).alias(<span class="string">&#x27;vote&#x27;</span>))  <span class="comment"># 新增名为&#x27;vote&#x27;的列，其中填充权重值</span></span><br><span class="line">           .explode(<span class="string">&#x27;labels&#x27;</span>)  <span class="comment"># 展开&#x27;labels&#x27;列中的列表</span></span><br><span class="line">           .rename(&#123;<span class="string">&#x27;labels&#x27;</span>: <span class="string">&#x27;aid&#x27;</span>&#125;)  <span class="comment"># 重命名&#x27;labels&#x27;为&#x27;aid&#x27;</span></span><br><span class="line">           .with_column(pl.col(<span class="string">&#x27;aid&#x27;</span>).cast(pl.UInt32))  <span class="comment"># 将&#x27;aid&#x27;列转换为UInt32类型</span></span><br><span class="line">           .with_column(pl.col(<span class="string">&#x27;vote&#x27;</span>).cast(pl.UInt8))  <span class="comment"># 将&#x27;vote&#x27;列转换为UInt8类型</span></span><br><span class="line">   )</span><br><span class="line"><span class="comment"># 有无权重</span></span><br><span class="line">subs = [read_sub(path) <span class="keyword">for</span> path <span class="keyword">in</span> paths]</span><br><span class="line">subs = [read_sub(path, weight) <span class="keyword">for</span> path, weight <span class="keyword">in</span> <span class="built_in">zip</span>(paths, [<span class="number">1</span>, <span class="number">0.55</span>, <span class="number">0.55</span>])]</span><br></pre></td></tr></table></figure><p>读取后的数据为:</p><table><thead><tr><th>session_type</th><th>aid</th><th>vote</th></tr></thead><tbody><tr><td>1_clicks</td><td>1234</td><td>1</td></tr><tr><td>1_clicks</td><td>9841</td><td>1</td></tr><tr><td>2_clicks</td><td>5845</td><td>1</td></tr></tbody></table><p>由于内存限制,只能进行join:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">subs = subs[<span class="number">0</span>].join(subs[<span class="number">1</span>], how=<span class="string">&#x27;outer&#x27;</span>, on=[<span class="string">&#x27;session_type&#x27;</span>, <span class="string">&#x27;aid&#x27;</span>]).join(subs[<span class="number">2</span>], how=<span class="string">&#x27;outer&#x27;</span>, on=[<span class="string">&#x27;session_type&#x27;</span>, <span class="string">&#x27;aid&#x27;</span>], suffix=<span class="string">&#x27;_right2&#x27;</span>)</span><br><span class="line">subs.head()</span><br></pre></td></tr></table></figure><p>合并后的数据</p><table><thead><tr><th>session_type</th><th>aid</th><th>vote</th><th>vote_right</th><th>vote_right2</th></tr></thead><tbody><tr><td>1_clicks</td><td>1234</td><td>1</td><td>1</td><td>1</td></tr><tr><td>1_clicks</td><td>9841</td><td>1</td><td>null</td><td>1</td></tr><tr><td>2_clicks</td><td>5845</td><td>1</td><td>1</td><td>null</td></tr><tr><td>2_clicks</td><td>8984</td><td>1</td><td>null</td><td>null</td></tr></tbody></table><p>用0填充null值,然后对vote求和,排序:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">subs = (subs</span><br><span class="line">    .fill_null(<span class="number">0</span>)</span><br><span class="line">    .with_column((pl.col(<span class="string">&#x27;vote&#x27;</span>) + pl.col(<span class="string">&#x27;vote_right&#x27;</span>) + pl.col(<span class="string">&#x27;vote_right2&#x27;</span>)).alias(<span class="string">&#x27;vote_sum&#x27;</span>))</span><br><span class="line">    .drop([<span class="string">&#x27;vote&#x27;</span>, <span class="string">&#x27;vote_right&#x27;</span>, <span class="string">&#x27;vote_right2&#x27;</span>])</span><br><span class="line">    .sort(by=<span class="string">&#x27;vote_sum&#x27;</span>)</span><br><span class="line">    .reverse()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>数据如下:</p><table><thead><tr><th>session_type</th><th>aid</th><th>vote_sum</th></tr></thead><tbody><tr><td>1_clicks</td><td>1234</td><td>3</td></tr><tr><td>2_clicks</td><td>5845</td><td>2</td></tr><tr><td>1_clicks</td><td>9841</td><td>2</td></tr></tbody></table><p>然后对每个类型选择前20个商品,然后聚合成数组:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">preds = subs.groupby(<span class="string">&#x27;session_type&#x27;</span>).agg([</span><br><span class="line">    pl.col(<span class="string">&#x27;aid&#x27;</span>).head(<span class="number">20</span>).alias(<span class="string">&#x27;labels&#x27;</span>)</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">preds = preds.with_column(pl.col(<span class="string">&#x27;labels&#x27;</span>).apply(<span class="keyword">lambda</span> lst: <span class="string">&#x27; &#x27;</span>.join([<span class="built_in">str</span>(aid) <span class="keyword">for</span> aid <span class="keyword">in</span> lst])))</span><br></pre></td></tr></table></figure><h3 id="matrix-factorization-pytorchmerlin-dataloader"><a class="markdownIt-Anchor" href="#matrix-factorization-pytorchmerlin-dataloader"></a> 💡Matrix Factorization [PyTorch+Merlin Dataloader]</h3><p>与word2vec类似,使用矩阵分解来获取商品的嵌入向量</p><p><a href="https://www.kaggle.com/code/cpmpml/matrix-factorization-with-gpu">💡Matrix Factorization with GPU [PyTorch+Merlin Dataloader]</a></p><p>使用Pytorch的Embedding层来训练商品的嵌入向量,然后使用这些向量来计算商品id之间的相似度.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建aid_pairs</span></span><br><span class="line">train_pairs = cudf.concat([train, test])[[<span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;aid&#x27;</span>]]</span><br><span class="line"><span class="keyword">del</span> train, test</span><br><span class="line"></span><br><span class="line">train_pairs[<span class="string">&#x27;aid_next&#x27;</span>] = train_pairs.groupby(<span class="string">&#x27;session&#x27;</span>).aid.shift(-<span class="number">1</span>)</span><br><span class="line">train_pairs = train_pairs[[<span class="string">&#x27;aid&#x27;</span>, <span class="string">&#x27;aid_next&#x27;</span>]].dropna().reset_index(drop=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th>aid</th><th>aid_next</th></tr></thead><tbody><tr><td>1</td><td>2</td></tr><tr><td>2</td><td>3</td></tr><tr><td>3</td><td>4</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="comment"># WordEmbedding模型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MatrixFactorization</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n_aids, n_factors</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.aid_factors = nn.Embedding(n_aids, n_factors, sparse=<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, aid1, aid2</span>):</span><br><span class="line">        aid1 = self.aid_factors(aid1)</span><br><span class="line">        aid2 = self.aid_factors(aid2)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> (aid1 * aid2).<span class="built_in">sum</span>(dim=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 评价指标</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AverageMeter</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Computes and stores the average and current value&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, fmt=<span class="string">&#x27;:f&#x27;</span></span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.fmt = fmt</span><br><span class="line">        self.reset()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reset</span>(<span class="params">self</span>):</span><br><span class="line">        self.val = <span class="number">0</span></span><br><span class="line">        self.avg = <span class="number">0</span></span><br><span class="line">        self.<span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">        self.count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, val, n=<span class="number">1</span></span>):</span><br><span class="line">        self.val = val</span><br><span class="line">        self.<span class="built_in">sum</span> += val * n</span><br><span class="line">        self.count += n</span><br><span class="line">        self.avg = self.<span class="built_in">sum</span> / self.count</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        fmtstr = <span class="string">&#x27;&#123;name&#125; &#123;val&#x27;</span> + self.fmt + <span class="string">&#x27;&#125; (&#123;avg&#x27;</span> + self.fmt + <span class="string">&#x27;&#125;)&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> fmtstr.<span class="built_in">format</span>(**self.__dict__)    </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 训练</span></span><br><span class="line">model.to(<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epochs):</span><br><span class="line">    <span class="keyword">for</span> batch, _ <span class="keyword">in</span> train_dl_merlin:</span><br><span class="line">        model.train()</span><br><span class="line">        losses = AverageMeter(<span class="string">&#x27;Loss&#x27;</span>, <span class="string">&#x27;:.4e&#x27;</span>)</span><br><span class="line">            </span><br><span class="line">        aid1, aid2 = batch[<span class="string">&#x27;aid&#x27;</span>], batch[<span class="string">&#x27;aid_next&#x27;</span>]</span><br><span class="line">        aid1 = aid1.to(<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line">        aid2 = aid2.to(<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line">        output_pos = model(aid1, aid2)</span><br><span class="line">        output_neg = model(aid1, aid2[torch.randperm(aid2.shape[<span class="number">0</span>])])</span><br><span class="line">        </span><br><span class="line">        output = torch.cat([output_pos, output_neg])</span><br><span class="line">        targets = torch.cat([torch.ones_like(output_pos), torch.zeros_like(output_pos)])</span><br><span class="line">        loss = criterion(output, targets)</span><br><span class="line">        losses.update(loss.item())</span><br><span class="line">        </span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">        </span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        accuracy = AverageMeter(<span class="string">&#x27;accuracy&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> batch, _ <span class="keyword">in</span> valid_dl_merlin:</span><br><span class="line">            aid1, aid2 = batch[<span class="string">&#x27;aid&#x27;</span>], batch[<span class="string">&#x27;aid_next&#x27;</span>]</span><br><span class="line">            output_pos = model(aid1, aid2)</span><br><span class="line">            output_neg = model(aid1, aid2[torch.randperm(aid2.shape[<span class="number">0</span>])])</span><br><span class="line">            accuracy_batch = torch.cat([output_pos.sigmoid() &gt; <span class="number">0.5</span>, output_neg.sigmoid() &lt; <span class="number">0.5</span>]).<span class="built_in">float</span>().mean()</span><br><span class="line">            accuracy.update(accuracy_batch, aid1.shape[<span class="number">0</span>])</span><br><span class="line">            </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;epoch+<span class="number">1</span>:02d&#125;</span>: * TrainLoss <span class="subst">&#123;losses.avg:<span class="number">.3</span>f&#125;</span>  * Accuracy <span class="subst">&#123;accuracy.avg:<span class="number">.3</span>f&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取嵌入并计算相似度</span></span><br><span class="line">embeddings = model.aid_factors.weight.detach().cpu().numpy()</span><br><span class="line"></span><br><span class="line">knn = NearestNeighbors(n_neighbors=<span class="number">21</span>, metric=<span class="string">&#x27;euclidean&#x27;</span>)</span><br><span class="line">knn.fit(embeddings)</span><br><span class="line"></span><br><span class="line">_, aid_nns = knn.kneighbors(embeddings)</span><br><span class="line"></span><br><span class="line">sample_sub = pd.read_csv(<span class="string">&#x27;../input/otto-recommender-system//sample_submission.csv&#x27;</span>)</span><br><span class="line">test = cudf.read_parquet(<span class="string">&#x27;../input/otto-full-optimized-memory-footprint/test.parquet&#x27;</span>)</span><br><span class="line"></span><br><span class="line">session_types = [<span class="string">&#x27;clicks&#x27;</span>, <span class="string">&#x27;carts&#x27;</span>, <span class="string">&#x27;orders&#x27;</span>]</span><br><span class="line">gr = test.reset_index(drop=<span class="literal">True</span>).to_pandas().groupby(<span class="string">&#x27;session&#x27;</span>)</span><br><span class="line">test_session_AIDs = gr[<span class="string">&#x27;aid&#x27;</span>].apply(<span class="built_in">list</span>)</span><br><span class="line">test_session_types = gr[<span class="string">&#x27;type&#x27;</span>].apply(<span class="built_in">list</span>)</span><br><span class="line"></span><br><span class="line">labels = []</span><br><span class="line"></span><br><span class="line">type_weight_multipliers = &#123;<span class="number">0</span>: <span class="number">1</span>, <span class="number">1</span>: <span class="number">6</span>, <span class="number">2</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">for</span> AIDs, types <span class="keyword">in</span> <span class="built_in">zip</span>(test_session_AIDs, test_session_types):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(AIDs) &gt;= <span class="number">20</span>:</span><br><span class="line">        <span class="comment"># if we have enough aids (over equals 20) we don&#x27;t need to look for candidates! we just use the old logic</span></span><br><span class="line">        weights=np.logspace(<span class="number">0.1</span>,<span class="number">1</span>,<span class="built_in">len</span>(AIDs),base=<span class="number">2</span>, endpoint=<span class="literal">True</span>)-<span class="number">1</span></span><br><span class="line">        aids_temp=defaultdict(<span class="keyword">lambda</span>: <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">for</span> aid,w,t <span class="keyword">in</span> <span class="built_in">zip</span>(AIDs,weights,types): </span><br><span class="line">            aids_temp[aid]+= w * type_weight_multipliers[t]</span><br><span class="line">            </span><br><span class="line">        sorted_aids=[k <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">sorted</span>(aids_temp.items(), key=<span class="keyword">lambda</span> item: -item[<span class="number">1</span>])]</span><br><span class="line">        labels.append(sorted_aids[:<span class="number">20</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># here we don&#x27;t have 20 aids to output -- we will use approximate nearest neighbor search and our embeddings</span></span><br><span class="line">        <span class="comment"># to generate candidates!</span></span><br><span class="line">        AIDs = <span class="built_in">list</span>(<span class="built_in">dict</span>.fromkeys(AIDs[::-<span class="number">1</span>]))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># let&#x27;s grab the most recent aid</span></span><br><span class="line">        most_recent_aid = AIDs[<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># and look for some neighbors!</span></span><br><span class="line">        nns = <span class="built_in">list</span>(aid_nns[most_recent_aid])</span><br><span class="line">                        </span><br><span class="line">        labels.append((AIDs+nns)[:<span class="number">20</span>])</span><br><span class="line"></span><br><span class="line">labels_as_strings = [<span class="string">&#x27; &#x27;</span>.join([<span class="built_in">str</span>(l) <span class="keyword">for</span> l <span class="keyword">in</span> lls]) <span class="keyword">for</span> lls <span class="keyword">in</span> labels]</span><br><span class="line"></span><br><span class="line">predictions = pd.DataFrame(data=&#123;<span class="string">&#x27;session_type&#x27;</span>: test_session_AIDs.index, <span class="string">&#x27;labels&#x27;</span>: labels_as_strings&#125;)</span><br><span class="line"></span><br><span class="line">prediction_dfs = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> st <span class="keyword">in</span> session_types:</span><br><span class="line">    modified_predictions = predictions.copy()</span><br><span class="line">    modified_predictions.session_type = modified_predictions.session_type.astype(<span class="string">&#x27;str&#x27;</span>) + <span class="string">f&#x27;_<span class="subst">&#123;st&#125;</span>&#x27;</span></span><br><span class="line">    prediction_dfs.append(modified_predictions)</span><br><span class="line"></span><br><span class="line">submission = pd.concat(prediction_dfs).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line">submission.to_csv(<span class="string">&#x27;submission.csv&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h3 id="226th-place-solution-two-cents-from-a-first-timer"><a class="markdownIt-Anchor" href="#226th-place-solution-two-cents-from-a-first-timer"></a> 226th (?!) Place Solution &amp; Two-cents from a First-timer</h3><p><a href="https://www.kaggle.com/competitions/otto-recommender-system/discussion/383657">226th (?!) Place Solution &amp; Two-cents from a First-timer</a></p><p><img src="https://image.yayan.xyz/20240316125957.png" alt="" /></p><ol><li>Item Co-visitation Matrix<br />entirely based one Chris’ notebook</li></ol><ul><li>Order matrix: Click/cart/order to click/cart/order with type weighting</li><li>Buy2buy matrix: Cart/order to cart/order</li><li>Click matrix: click/cart/order to clicks with time weighting</li></ul><ol start="2"><li>Feature Feneration</li></ol><ul><li><p>Item features (for each aid)</p></li><li><ul><li>Count of events (click/cart/order)</li></ul></li><li><ul><li>Sum of event weight</li></ul></li><li><ul><li>Quarter of day (QoD) with most events (0-3)</li></ul></li><li><ul><li>Day of week (DoW) with most events (0-6)</li></ul></li><li><p>User features (for each session)</p></li><li><ul><li>Count of events (click/cart/order) and interacted items (aid)</li></ul></li><li><ul><li>Sum of event weight</li></ul></li><li><ul><li>QoD with most events (0-3)</li></ul></li><li><ul><li>DoW with most events (0-6)</li></ul></li><li><ul><li>Number of days with events</li></ul></li><li><ul><li>Days from first to last events</li></ul></li><li><p>User-item features (for each session-aid pair)</p></li><li><ul><li>Count of events (click/cart/order) and interacted items (aid)</li></ul></li><li><ul><li>Sum of event weight</li></ul></li><li><ul><li>QoD with most events in both categorical (0-3) and one-hot encoded (0/1 for each) format</li></ul></li><li><ul><li>DoW with most events in both categorical (0-6) and one-hot encoded (0/1 for each) format</li></ul></li><li><ul><li>last_n = item_chronological_rank / user_total_event_count</li></ul></li><li><ul><li>last_ts = (user_item_last_timestamp - start_week_timestamp) / (end_week_timestamp - start_week_timestamp)</li></ul></li></ul><ol start="3"><li>Candidate Selection<br />partly based on Chris’ notebook<br />For each session,I select top X most relevant items in each event type</li></ol><ul><li>会话单击/点选/订购项目的次数</li><li>共访权总和</li><li>该商品是否为本周点击次数最多/购买次数最多的商品</li></ul><ol start="4"><li>Ranker</li></ol><ul><li>Rule-base ranker in Chris’ notebook</li><li>XGBRanker with <code>rank:pairwise</code> objective</li><li><ul><li>the model is overfitting and requires a lot of hyperparameter tuning</li></ul></li></ul><ol start="5"><li>Solution Ensemble</li></ol><ul><li>use their public LB scores as weights</li><li>Ensemble of XGBRanker above and public submissions</li><li>Ensemble of above two ranker methods and public submissions</li></ul><p>6, what have I learned</p><ul><li>read the discussion and notebooks forums</li><li>try as many ideas as possible</li><li>know every line of code you write</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-比赛任务&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-比赛任务&quot;&gt;&lt;/a&gt; 1. 比赛任务&lt;/h2&gt;
&lt;p&gt;The goal of this competition is to predict e-commerce click</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://gladdduck.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Kaggle" scheme="https://gladdduck.github.io/tags/Kaggle/"/>
    
  </entry>
  
  <entry>
    <title>vscode免密连接服务器</title>
    <link href="https://gladdduck.github.io/2024/03/11/%E9%85%8D%E7%BD%AE-vscode%E5%85%8D%E5%AF%86%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://gladdduck.github.io/2024/03/11/%E9%85%8D%E7%BD%AE-vscode%E5%85%8D%E5%AF%86%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2024-03-11T07:09:42.878Z</published>
    <updated>2024-03-11T07:16:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>看<a href="https://www.bilibili.com/video/BV1Qp4y1n7EN?p=29&amp;spm_id_from=pageDriver&amp;vd_source=602787b9249cd70cfca4def5e041f060">尚硅谷的视频</a>知道了免密连接的原理</p><h3 id="本地"><a class="markdownIt-Anchor" href="#本地"></a> 本地</h3><ol><li>生成公钥和私钥</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa </span><br><span class="line"><span class="comment"># 一路回车即可,如果已经存在了,可以起个名字方便区分</span></span><br></pre></td></tr></table></figure><ol start="2"><li>生成的公钥和私钥在<code>C:/user/xxx/.ssh</code>目录下</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id_rsa:是私钥 ,私钥存在自己电脑上</span><br><span class="line">id_rsa.pub:是公钥, 公钥放在服务器上(想连谁就把公钥发给谁)</span><br></pre></td></tr></table></figure><p>3.在vscode中安装<code>Remote - SSH</code>插件, 然后按步骤连接服务器,在配置文件中填写服务器的ip地址,用户名,密码,端口号等信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host 服务器名称</span><br><span class="line">  HostName ip</span><br><span class="line">  User 用户名</span><br><span class="line">  PreferredAuthentications publickey</span><br><span class="line">IdentityFile &quot;C:/Users/[用户名]/.ssh/id_rsa&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="服务器"><a class="markdownIt-Anchor" href="#服务器"></a> 服务器</h3><ol><li>在服务器上进入.ssh文件夹</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure><ol start="2"><li>创建/打开一个<code>authorized_keys</code>文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> authorized_keys</span><br><span class="line">或者</span><br><span class="line">vim authorized_keys</span><br></pre></td></tr></table></figure><ol start="3"><li>把本地的公钥内容复制到<code>authorized_keys</code>文件中保存</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">或者上传id_rsa.pub到.ssh文件夹</span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure><p><strong>完成</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;看&lt;a href=&quot;https://www.bilibili.com/video/BV1Qp4y1n7EN?p=29&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=602787b9249cd70cfca4def5e041f060&quot;&gt;尚硅谷</summary>
      
    
    
    
    <category term="杂七杂八配置" scheme="https://gladdduck.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Vscode" scheme="https://gladdduck.github.io/tags/Vscode/"/>
    
  </entry>
  
  <entry>
    <title>位运算技巧分类总结</title>
    <link href="https://gladdduck.github.io/2024/03/06/%E7%AE%97%E6%B3%95-%E4%BD%8D%E8%BF%90%E7%AE%97%E6%8A%80%E5%B7%A7%E5%88%86%E7%B1%BB%E6%80%BB%E7%BB%93/"/>
    <id>https://gladdduck.github.io/2024/03/06/%E7%AE%97%E6%B3%95-%E4%BD%8D%E8%BF%90%E7%AE%97%E6%8A%80%E5%B7%A7%E5%88%86%E7%B1%BB%E6%80%BB%E7%BB%93/</id>
    <published>2024-03-06T02:05:35.115Z</published>
    <updated>2024-03-06T02:28:44.290Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/circle/discuss/CaOJ45/">从集合论到位运算，常见位运算技巧分类总结！</a></p><h3 id="1集合与集合"><a class="markdownIt-Anchor" href="#1集合与集合"></a> 1.集合与集合</h3><p><img src="https://image.yayan.xyz/20240306101351.png" alt="" /></p><h3 id="2集合与元素"><a class="markdownIt-Anchor" href="#2集合与元素"></a> 2.集合与元素</h3><p><img src="https://image.yayan.xyz/20240306101641.png" alt="" /></p><h3 id="3遍历集合"><a class="markdownIt-Anchor" href="#3遍历集合"></a> 3.遍历集合</h3><p>设元素范围从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，挨个判断每个元素是否在集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span>中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    <span class="keyword">if</span> (s &gt;&gt; i) &amp; <span class="number">1</span>:  <span class="comment"># i 在 s 中</span></span><br><span class="line">        <span class="comment"># 处理 i 的逻辑</span></span><br></pre></td></tr></table></figure><h3 id="4枚举集合"><a class="markdownIt-Anchor" href="#4枚举集合"></a> 4.枚举集合</h3><p>设元素范围从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，从空集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\empty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>枚举到全集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span> &lt;&lt; n):</span><br><span class="line">    <span class="comment"># 处理 s 的逻辑</span></span><br></pre></td></tr></table></figure><p>从大到小枚举所有非空子集：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sub=s</span><br><span class="line"><span class="keyword">while</span> sub:</span><br><span class="line">    <span class="comment"># 处理 sub 的逻辑</span></span><br><span class="line">    sub=(sub-<span class="number">1</span>)&amp;s</span><br></pre></td></tr></table></figure><h3 id="5练习"><a class="markdownIt-Anchor" href="#5练习"></a> 5.练习</h3><p>位运算练习:</p><ul><li><a href="https://leetcode.cn/problems/subsets/description/">LeetCode 78. 子集</a></li><li><a href="https://leetcode.cn/problems/combinations/description/">LeetCode 77. 组合</a></li><li><a href="https://leetcode.cn/problems/permutations/description/">LeetCode 46. 全排列</a></li></ul><p>状态压缩 DP。这类题目通常和排列/子集有关，可以先从暴力回溯开始思考，再过渡到记忆化搜索和递推。</p><ul><li><a href="https://leetcode.cn/problems/maximum-and-sum-of-array/description/">LeetCode 2172. 数组的最大与和</a></li><li><a href="https://leetcode.cn/problems/smallest-sufficient-team/description/">LeetCode 1125. 最小的必要团队</a></li><li><a href="https://leetcode.cn/problems/fair-distribution-of-cookies/description/">LeetCode 2305. 公平分发饼干</a></li><li><a href="https://leetcode.cn/problems/parallel-courses-ii/description/">LeetCode 1494. 并行课程 II</a></li><li><a href="https://leetcode.cn/problems/EJvmW4/description/">LeetCode LCP 53. 守护太空城</a></li><li><a href="https://leetcode.cn/problems/minimum-xor-sum-of-two-arrays/description/">LeetCode 1879. 两个数组最小的异或值之和</a></li><li><a href="https://leetcode.cn/problems/minimum-number-of-work-sessions-to-finish-the-tasks/description/">LeetCode 1986. 完成任务的最少工作时间段</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.cn/circle/discuss/CaOJ45/&quot;&gt;从集合论到位运算，常见位运算技巧分类总结！&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1集合与集合&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1集</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://gladdduck.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法刷题笔记" scheme="https://gladdduck.github.io/tags/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Few-shot Object Detection应用论文</title>
    <link href="https://gladdduck.github.io/2023/12/28/%E5%AD%A6%E6%9C%AF-Few-shotDetection%E5%BA%94%E7%94%A8%E8%AE%BA%E6%96%87/"/>
    <id>https://gladdduck.github.io/2023/12/28/%E5%AD%A6%E6%9C%AF-Few-shotDetection%E5%BA%94%E7%94%A8%E8%AE%BA%E6%96%87/</id>
    <published>2023-12-28T04:19:17.803Z</published>
    <updated>2023-12-28T04:21:07.648Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-prototype-cnn-for-few-shot-object-detection-in-remote-sensing-images"><a class="markdownIt-Anchor" href="#1-prototype-cnn-for-few-shot-object-detection-in-remote-sensing-images"></a> 1. Prototype-CNN for Few-Shot Object Detection in Remote Sensing Images</h3><h3 id="2-an-efficient-few-shot-object-detection-method-for-railway-intrusion-via-fine-tune-approach-and-contrastive-learning"><a class="markdownIt-Anchor" href="#2-an-efficient-few-shot-object-detection-method-for-railway-intrusion-via-fine-tune-approach-and-contrastive-learning"></a> 2. An Efficient Few-Shot Object Detection Method for Railway Intrusion via Fine-tune Approach and Contrastive learning</h3><h3 id="3-rethinking-few-shot-object-detection-on-a-multi-domain-benchmark"><a class="markdownIt-Anchor" href="#3-rethinking-few-shot-object-detection-on-a-multi-domain-benchmark"></a> 3. Rethinking Few-Shot Object Detection on a Multi-Domain Benchmark</h3><h3 id="4-robust-few-shot-aerial-image-object-detection-via-unbiased-proposals-filtration"><a class="markdownIt-Anchor" href="#4-robust-few-shot-aerial-image-object-detection-via-unbiased-proposals-filtration"></a> 4. Robust Few-Shot Aerial Image Object Detection via Unbiased Proposals Filtration</h3><h3 id="5-industrial-few-shot-fractal-object-detection"><a class="markdownIt-Anchor" href="#5-industrial-few-shot-fractal-object-detection"></a> 5. Industrial few-shot fractal object detection</h3><h3 id="6-a-new-few-shot-learning-based-model-for-prohibited-objects-detection-in-cluttered-baggage-x-ray-images-through-edge-detection-and-reverse-validationpdf"><a class="markdownIt-Anchor" href="#6-a-new-few-shot-learning-based-model-for-prohibited-objects-detection-in-cluttered-baggage-x-ray-images-through-edge-detection-and-reverse-validationpdf"></a> 6. A New Few-Shot Learning-Based Model for Prohibited Objects Detection in Cluttered Baggage X-Ray Images Through Edge Detection and Reverse Validation.pdf</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-prototype-cnn-for-few-shot-object-detection-in-remote-sensing-images&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-prototype-cnn-for-few-</summary>
      
    
    
    
    <category term="论文记录" scheme="https://gladdduck.github.io/categories/%E8%AE%BA%E6%96%87%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Few-shotObjectDetection" scheme="https://gladdduck.github.io/tags/Few-shotObjectDetection/"/>
    
  </entry>
  
  <entry>
    <title>DEViT代码阅读</title>
    <link href="https://gladdduck.github.io/2023/12/15/%E5%AD%A6%E6%9C%AF-DEViT%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    <id>https://gladdduck.github.io/2023/12/15/%E5%AD%A6%E6%9C%AF-DEViT%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB/</id>
    <published>2023-12-15T06:48:19.603Z</published>
    <updated>2023-12-15T06:49:27.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id="detectron2代码阅读"><a class="markdownIt-Anchor" href="#detectron2代码阅读"></a> detectron2代码阅读</h2><h2 id="devit代码阅读"><a class="markdownIt-Anchor" href="#devit代码阅读"></a> DEViT代码阅读</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;detectron2代码阅读&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#detectron2代码阅读&quot;&gt;&lt;/a&gt; detectron2代码阅读&lt;/h2&gt;
&lt;h2 id=&quot;devit代码阅读&quot;&gt;&lt;a class=&quot;markdownIt</summary>
      
    
    
    
    <category term="论文记录" scheme="https://gladdduck.github.io/categories/%E8%AE%BA%E6%96%87%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="代码阅读" scheme="https://gladdduck.github.io/tags/%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2023-12</title>
    <link href="https://gladdduck.github.io/2023/12/11/%E7%AE%97%E6%B3%95-LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%982023-12/"/>
    <id>https://gladdduck.github.io/2023/12/11/%E7%AE%97%E6%B3%95-LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%982023-12/</id>
    <published>2023-12-11T11:42:27.397Z</published>
    <updated>2024-01-02T12:45:48.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="202312leetcode每日一题"><a class="markdownIt-Anchor" href="#202312leetcode每日一题"></a> 2023.12LeetCode每日一题</h2><h3 id="20231211-最小体力消耗路径中等"><a class="markdownIt-Anchor" href="#20231211-最小体力消耗路径中等"></a> 2023.12.11 最小体力消耗路径[中等]</h3><p><a href="https://leetcode.cn/problems/path-with-minimum-effort/description/?envType=daily-question&amp;envId=2023-12-11">1631. 最小体力消耗路径</a></p><p>思路:</p><ol><li>深搜\宽搜:统计所有路径，然后找到最小的路径</li><li>动态规划:dp[i][j]表示到达i,j的最小消耗，dp[i][j]=min(dp[i-1][j],dp[i][j-1])+abs(heights[i][j]-heights[i-1][j-1])</li></ol><p><strong>错误</strong>: 题目求的不是最小消耗的路径,而是这个路径上最大绝对值差值的最小()</p><p>题解:</p><ol><li>二分:二分的是最大绝对值差值,然后判断是否能够到达终点(深搜宽搜),能到就继续缩小差值,不能就增大差值</li><li>并查集:将所有边按照权值从小到大排序,然后依次加入并查集,如果起点和终点连通,那么这个权值就是答案</li><li>最短路径算法:当前最短路径可以表示为这条路径上最大的权重(普通的最短路径应该表示为这条路径上权重的和),然后使用最短路径算法求解</li></ol><h3 id="20231212-用邮票贴满网格图困难"><a class="markdownIt-Anchor" href="#20231212-用邮票贴满网格图困难"></a> 2023.12.12 😒用邮票贴满网格图[困难]</h3><p><a href="https://leetcode.cn/problems/stamping-the-grid/?envType=daily-question&amp;envId=2023-12-25">2132. 用邮票贴满网格图</a></p><h3 id="20231213-下一个更大元素-iv困难"><a class="markdownIt-Anchor" href="#20231213-下一个更大元素-iv困难"></a> 2023.12.13 下一个更大元素 IV[困难]</h3><h4 id="下一个更大元素-i简单"><a class="markdownIt-Anchor" href="#下一个更大元素-i简单"></a> 下一个更大元素 I[简单]</h4><ol><li>先在nums2中找到当前元素的位置,然后从这个位置开始遍历,找到第一个比当前元素大的元素,如果找不到就返回-1</li><li>单调栈+Hash表,先对nums2进行单调栈处理(从后往前记录(相当于当前元素和他左边的元素无关),从栈底到栈顶递增),然后用一个map记录每个数字对应的右边第一个比它大的数字,最后遍历nums1,直接从map中取值</li></ol><h4 id="下一个更大元素-ii中等"><a class="markdownIt-Anchor" href="#下一个更大元素-ii中等"></a> 下一个更大元素 II[中等]</h4><ol><li>单调栈+循环数组,循环数组使用取余的方式实现, 单调栈里存的是数组下标(元素从栈底到栈顶递减),当栈顶的元素被弹出来时,说明当前元素是栈顶元素右边第一个比它大的元素,栈顶元素的答案就是遍历到的当前元素</li></ol><h4 id="下一个更大元素-iii中等"><a class="markdownIt-Anchor" href="#下一个更大元素-iii中等"></a> 下一个更大元素 III[中等]</h4><ol><li>分析＋单调栈,对一个数字:564973,从后往前找(因为是最小的,动后面的肯定最小)</li></ol><ul><li>对于3,后面没有比它大的数字,所以3不动</li><li>对于73,没有比7大的数字,所以不动</li><li>对于973,没有比9大的数字,所以不动</li><li>对于4973,找到后面比4大的最小的数字,交换4和7,得到567,在对剩下的数字排序,得到349,答案就是567349</li></ul><ol start="2"><li>类似<a href="https://leetcode.cn/problems/next-permutation/description/">31.下一个排列</a></li></ol><ul><li>[31.下一个排列],从后往前先找到第一个正序对,然后再从后往前找到第一个比这个正序对中的第一个数字大的数字,交换这两个数字,然后将后面的数字排序</li><li>[31.下一个排列]也可以用1的方法做</li></ul><h4 id="下一个更大元素-iv困难"><a class="markdownIt-Anchor" href="#下一个更大元素-iv困难"></a> 下一个更大元素 IV[困难]</h4><ol><li>用一个最小堆q来存储已经找到下一个比他大的元素,用一个单调栈st来存储还没找到下一个比他大的元素的元素,具体操作:<ul><li>如果q非空,且堆顶元素小于栈顶元素,说明堆顶的这个元素找到了第二个比他大的元素,重复操作直到堆顶元素大于栈顶元素或者堆为空</li><li>如果st非空,且栈顶元素小于当前元素,说明栈顶元素找到了第一个比他大的元素,将栈顶元素弹出加入到堆中,重复操作直到栈顶元素大于当前元素或者栈为空</li><li>将当前元素入栈</li></ul></li><li>最小堆复杂度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>,使用单调栈替换掉最小堆,复杂度就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span><ul><li>用一个stack2代替最小堆,只要保证stack2是一个从栈底到栈顶单调递减的栈,如何保证stack2是单调递减的:从1可知堆顶的元素一定是大于栈里的,因此在stack1弹出来的时候,不要一个个弹,用切片弹,然后把整个切片加入到stack2中,这样就保证了stack2是单调递减的</li></ul></li></ol><h3 id="20231213-字典序最小回文串简单"><a class="markdownIt-Anchor" href="#20231213-字典序最小回文串简单"></a> 2023.12.13 字典序最小回文串[简单]</h3><p><a href="https://leetcode.cn/problems/lexicographically-smallest-palindrome/?envType=daily-question&amp;envId=2023-12-13">2697. 字典序最小回文串</a></p><p>思路:</p><ol><li>从左开始遍历到字符串长度的中间,如果遇到不相等的字符,那么就将这两个字符替换为二者之间最小的(双指针)</li></ol><h3 id="20231215-反转二叉树的奇数层中等"><a class="markdownIt-Anchor" href="#20231215-反转二叉树的奇数层中等"></a> 2023.12.15 反转二叉树的奇数层[中等]</h3><p><a href="https://leetcode.cn/problems/reverse-odd-levels-of-binary-tree/?envType=daily-question&amp;envId=2023-12-15">2415. 反转二叉树的奇数层</a></p><p>思路:</p><ol><li>宽搜,难点在于如何存储每一层的节点,想法是用两个队列,一个从左往右搜左子树的,一个从右往左搜右子树的,这样顺序就是对称的.到奇数层直接交换两个队列的当前节点的值就行</li><li>想复杂了,只要交换值就行,不用交换节点</li></ol><p>题解:</p><ol><li>宽搜,把每一层的节点都存到list里,奇数层交换</li><li>深搜, 传递两个节点,一个从最左边往下搜, 一个从最右边往下搜,奇数层则交换这两个节点的值</li></ol><h3 id="20231216-统计区间中的整数数目苦难"><a class="markdownIt-Anchor" href="#20231216-统计区间中的整数数目苦难"></a> 2023.12.16 统计区间中的整数数目[苦难]</h3><p><a href="https://leetcode.cn/problems/count-integers-in-intervals/description/?envType=daily-question&amp;envId=2023-12-16">2276. 统计区间中的整数数目</a></p><p>线段树解决的是「区间和」问题，并且该「区间」会被修改。</p><h4 id="线段树最简单模板"><a class="markdownIt-Anchor" href="#线段树最简单模板"></a> 线段树最简单模板</h4><p>思想:将数组看成一棵树,叶子节点是数组的值,非叶子节点代表了其叶子节点区间的和/最大值/最小值.<br /><a href="https://leetcode.cn/problems/range-sum-query-mutable/">307. 区域和检索 - 数组可修改</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SegTreeSimple</span>:</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, nums</span>):</span><br><span class="line">    self.tree = [<span class="number">0</span>] * (<span class="number">4</span> * <span class="built_in">len</span>(nums))</span><br><span class="line">    self.nums=nums</span><br><span class="line">    self.build(<span class="number">1</span>,<span class="number">0</span>,<span class="built_in">len</span>(nums)-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">build</span>(<span class="params">self, cur, left, right</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    l,r表示的是当前需要构建的区间</span></span><br><span class="line"><span class="string">    cur是[l,r]区间的在树中的节点</span></span><br><span class="line"><span class="string">    l==r说明到达了树的叶子节点,那么cur的值就是数组的值</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 到达当前节点</span></span><br><span class="line">    <span class="keyword">if</span> left==right:</span><br><span class="line">      self.tree[cur] = self.nums[left]</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="comment">#　构建左右子树</span></span><br><span class="line">    self.build(cur * <span class="number">2</span>, left, mid)</span><br><span class="line">    self.build(cur * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, right)</span><br><span class="line">    <span class="comment"># 向上更新</span></span><br><span class="line">    self.pushup(cur)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">pushup</span>(<span class="params">self, root</span>):</span><br><span class="line">    <span class="comment"># 求区间   和/最大值/最小值</span></span><br><span class="line">    self.tree[root] = self.tree[root * <span class="number">2</span>] + self.tree[root * <span class="number">2</span> + <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 区间更新</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">updateArrange</span>(<span class="params">self, cur, left, right, start, end , val</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    cur是当前在数中的节点</span></span><br><span class="line"><span class="string">    l,r是要更新的区间</span></span><br><span class="line"><span class="string">    start,end是当前区间</span></span><br><span class="line"><span class="string">    val是要更新的值</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> start == end:</span><br><span class="line">        self.tree[cur] = val</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> left&lt;start <span class="keyword">or</span> right&gt;end:</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    mid = (start + end) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> left &lt;= mid:</span><br><span class="line">        self.updateArrange(cur * <span class="number">2</span>, left, right, start, mid, val)</span><br><span class="line">    <span class="keyword">if</span> right&gt;mid:</span><br><span class="line">        self.updateArrange(cur * <span class="number">2</span> + <span class="number">1</span>, left, right, mid+<span class="number">1</span>, end, val)</span><br><span class="line">    self.pushup(cur)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 单点更新</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, cur, left, right, index, val</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    cur是当前区间在树中的节点</span></span><br><span class="line"><span class="string">    l,r是要更新的数组的区间</span></span><br><span class="line"><span class="string">    index是要更新的数组的索引</span></span><br><span class="line"><span class="string">    val是要更新的值</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> left == right:</span><br><span class="line">      <span class="comment"># 覆盖式,也可是增量式</span></span><br><span class="line">      self.tree[cur] = val</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> index &lt;= mid:</span><br><span class="line">      self.update(cur * <span class="number">2</span>, left, mid, index, val)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      self.update(cur * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, right, index, val)</span><br><span class="line">    self.pushup(cur)</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 区间查询</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">self, cur, left, right, start, end</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    left,right是要查询的区间</span></span><br><span class="line"><span class="string">    cur是当前区间对应的树的节点</span></span><br><span class="line"><span class="string">    start,end是当前区间</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 当前区间完全处于查询区间之内</span></span><br><span class="line">    <span class="keyword">if</span> left &lt;= start <span class="keyword">and</span> end &lt;= right:</span><br><span class="line">      <span class="keyword">return</span> self.tree[cur]</span><br><span class="line">    mid = (start + end) // <span class="number">2</span></span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> left &lt;= mid:</span><br><span class="line">      ans += self.query(cur * <span class="number">2</span>, left, right, start, mid)</span><br><span class="line">    <span class="keyword">if</span> right &gt; mid:</span><br><span class="line">      ans += self.query(cur * <span class="number">2</span> + <span class="number">1</span>, left, right, mid + <span class="number">1</span>, end)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h4 id="线段树lazy模板"><a class="markdownIt-Anchor" href="#线段树lazy模板"></a> 线段树Lazy模板</h4><p>思想:<br />在上面查询的时候,如果当前区间包括在查询区间里面,那么就可以直接返回当前区间的值而不用向下传递.<br />在区间修改时,如果当前区间包括在修改区间里面,那么也可以直接修改当前区间的值而不用向下传递(如果向下传递的话相当于遍历其子树时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>).<br />做法是使用一个lazy数组记录当前区间需要向下传递的值,在查询,如果当前区间需要向下传递的值不为0,那么就向下传递,并且将当前区间的lazy值清零</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SegTreeLazy</span>:</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, nums</span>):</span><br><span class="line">    self.tree = [<span class="number">0</span>] * (<span class="number">4</span> * <span class="built_in">len</span>(nums))</span><br><span class="line">    self.lazy = [<span class="number">0</span>] * (<span class="number">4</span> * <span class="built_in">len</span>(nums))</span><br><span class="line">    self.nums=nums</span><br><span class="line">    self.build(<span class="number">1</span>,<span class="number">0</span>,<span class="built_in">len</span>(nums)-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">build</span>(<span class="params">self, cur, left, right</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    l,r表示的是当前需要构建的区间</span></span><br><span class="line"><span class="string">    cur是[l,r]区间的在树中的节点</span></span><br><span class="line"><span class="string">    l==r说明到达了树的叶子节点,那么cur的值就是数组的值</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 到达当前节点</span></span><br><span class="line">    <span class="keyword">if</span> left==right:</span><br><span class="line">      self.tree[cur] = self.nums[left]</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="comment">#　构建左右子树</span></span><br><span class="line">    self.build(cur * <span class="number">2</span>, left, mid)</span><br><span class="line">    self.build(cur * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, right)</span><br><span class="line">    <span class="comment"># 向上更新</span></span><br><span class="line">    self.pushup(cur)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">pushup</span>(<span class="params">self, root</span>):</span><br><span class="line">    <span class="comment"># 求区间   和/最大值/最小值</span></span><br><span class="line">    self.tree[root] = self.tree[root * <span class="number">2</span>] + self.tree[root * <span class="number">2</span> + <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 单点更新</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, cur, left, right, index, val</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    cur是当前区间在树中的节点</span></span><br><span class="line"><span class="string">    l,r是要更新的数组的区间</span></span><br><span class="line"><span class="string">    index是要更新的数组的索引</span></span><br><span class="line"><span class="string">    val是要更新的值</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> left == right:</span><br><span class="line">      <span class="comment"># 覆盖式,也可是增量式</span></span><br><span class="line">      self.tree[cur] = val</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> index &lt;= mid:</span><br><span class="line">      self.update(cur * <span class="number">2</span>, left, mid, index, val)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      self.update(cur * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, right, index, val)</span><br><span class="line">    self.pushup(cur)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 区间更新</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">updateRange</span>(<span class="params">self, cur, left, right, start, end, val</span>):</span><br><span class="line">    <span class="comment"># 当前区间完全处于查询区间之内</span></span><br><span class="line">    <span class="keyword">if</span> left &lt;= start <span class="keyword">and</span> end &lt;= right:</span><br><span class="line">      <span class="comment"># 只更新当前区间的值,不向下传递</span></span><br><span class="line">      self.tree[cur] += val * (end - start + <span class="number">1</span>)</span><br><span class="line">      <span class="comment"># 记录当前区间需要向下传递的值,如果不是区间没必要向下传递</span></span><br><span class="line">      <span class="keyword">if</span> start != end:</span><br><span class="line">        self.lazy[cur] += val</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    mid = (start + end) // <span class="number">2</span></span><br><span class="line">    <span class="comment"># 向下传递lazy值,如果是覆盖式更新,不能使用self.lazy!-0判断,需要使用额外的bool数组</span></span><br><span class="line">    <span class="keyword">if</span> self.lazy[cur] != <span class="number">0</span>:</span><br><span class="line">      self.pushdown(cur, start, end, mid)</span><br><span class="line">    <span class="keyword">if</span> left &lt;= mid:</span><br><span class="line">      self.updateRange(cur * <span class="number">2</span>, left, right, start, mid, val)</span><br><span class="line">    <span class="keyword">if</span> right &gt; mid:</span><br><span class="line">      self.updateRange(cur * <span class="number">2</span> + <span class="number">1</span>, left, right, mid + <span class="number">1</span>, end, val)</span><br><span class="line">    self.pushup(cur)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">pushdown</span>(<span class="params">self, cur, start, end, mid</span>):</span><br><span class="line">    <span class="comment"># 向下传递lazy值,值传递到子节点</span></span><br><span class="line">    self.tree[cur * <span class="number">2</span>] += self.lazy[cur] * (mid - start + <span class="number">1</span>)</span><br><span class="line">    self.tree[cur * <span class="number">2</span> + <span class="number">1</span>] += self.lazy[cur] * (end - mid)</span><br><span class="line">    self.lazy[cur * <span class="number">2</span>] += self.lazy[cur]</span><br><span class="line">    self.lazy[cur * <span class="number">2</span> + <span class="number">1</span>] += self.lazy[cur]</span><br><span class="line">    self.lazy[cur] = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 区间查询</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">self, cur, left, right, start, end</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    left,right是要查询的区间</span></span><br><span class="line"><span class="string">    cur是当前区间对应的树的节点</span></span><br><span class="line"><span class="string">    start,end是当前区间</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 当前区间完全处于查询区间之内</span></span><br><span class="line">    <span class="keyword">if</span> left &lt;= start <span class="keyword">and</span> end &lt;= right:</span><br><span class="line">      <span class="keyword">return</span> self.tree[cur]</span><br><span class="line">    mid = (start + end) // <span class="number">2</span></span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> self.lazy[cur] != <span class="number">0</span>:</span><br><span class="line">       self.pushdown(cur, start, end, mid)</span><br><span class="line">    <span class="keyword">if</span> left &lt;= mid:</span><br><span class="line">      ans += self.query(cur * <span class="number">2</span>, left, right, start, mid)</span><br><span class="line">    <span class="keyword">if</span> right &gt; mid:</span><br><span class="line">      ans += self.query(cur * <span class="number">2</span> + <span class="number">1</span>, left, right, mid + <span class="number">1</span>, end)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h4 id="线段树离散化模板"><a class="markdownIt-Anchor" href="#线段树离散化模板"></a> 线段树离散化模板</h4><p><img src="http://image.yayan.xyz/20231216162436.png" alt="" /><br />思想:<br />需要直到全部的区间坐标<br />做好原数组与离散后数组的映射关系<br /><a href="https://leetcode.cn/problems/falling-squares/description/">699. 掉落的方块</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SegTreeDiscrete</span>:</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n </span>):</span><br><span class="line">    self.tree = [<span class="number">0</span>] * (<span class="number">4</span> * n)</span><br><span class="line">    self.lazy = [<span class="number">0</span>] * (<span class="number">4</span> * n)</span><br><span class="line">    self.build(<span class="number">1</span>,<span class="number">0</span>,n-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">build</span>(<span class="params">self, cur, left, right</span>):</span><br><span class="line">    <span class="keyword">if</span> left==right:</span><br><span class="line">      self.tree[cur] = <span class="number">0</span></span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    self.build(cur * <span class="number">2</span>, left, mid)</span><br><span class="line">    self.build(cur * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, right)</span><br><span class="line">    self.pushup(cur)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">pushup</span>(<span class="params">self, root</span>):</span><br><span class="line">    self.tree[root] = <span class="built_in">max</span>(self.tree[root * <span class="number">2</span>] , self.tree[root * <span class="number">2</span> + <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">updateRange</span>(<span class="params">self, cur, left, right, start, end, val</span>):</span><br><span class="line">    <span class="keyword">if</span> left &lt;= start <span class="keyword">and</span> end &lt;= right:</span><br><span class="line">      self.tree[cur] = val</span><br><span class="line">      <span class="keyword">if</span> start != end:</span><br><span class="line">        self.lazy[cur] = val</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    mid = (start + end) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> self.lazy[cur] != <span class="number">0</span>:</span><br><span class="line">      self.pushdown(cur, start, end, mid)</span><br><span class="line">    <span class="keyword">if</span> left &lt;= mid:</span><br><span class="line">      self.updateRange(cur * <span class="number">2</span>, left, right, start, mid, val)</span><br><span class="line">    <span class="keyword">if</span> right &gt; mid:</span><br><span class="line">      self.updateRange(cur * <span class="number">2</span> + <span class="number">1</span>, left, right, mid + <span class="number">1</span>, end, val)</span><br><span class="line">    self.pushup(cur)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">pushdown</span>(<span class="params">self, cur, start, end, mid</span>):</span><br><span class="line">    self.tree[cur * <span class="number">2</span>] = self.tree[cur]</span><br><span class="line">    self.tree[cur * <span class="number">2</span> + <span class="number">1</span>] = self.tree[cur]</span><br><span class="line">    self.lazy[cur * <span class="number">2</span>] = self.lazy[cur]</span><br><span class="line">    self.lazy[cur * <span class="number">2</span> + <span class="number">1</span>] = self.lazy[cur]</span><br><span class="line">    self.lazy[cur] = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">self, cur, left, right, start, end</span>):</span><br><span class="line">    <span class="keyword">if</span> left &lt;= start <span class="keyword">and</span> end &lt;= right:</span><br><span class="line">      <span class="keyword">return</span> self.tree[cur]</span><br><span class="line">    mid = (start + end) // <span class="number">2</span></span><br><span class="line">    ans = -<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> self.lazy[cur] != <span class="number">0</span>:</span><br><span class="line">       self.pushdown(cur, start, end, mid)</span><br><span class="line">    <span class="keyword">if</span> left &lt;= mid:</span><br><span class="line">      ans = <span class="built_in">max</span>(self.query(cur * <span class="number">2</span>, left, right, start, mid), ans)</span><br><span class="line">    <span class="keyword">if</span> right &gt; mid:</span><br><span class="line">      ans = <span class="built_in">max</span>(self.query(cur * <span class="number">2</span> + <span class="number">1</span>, left, right, mid + <span class="number">1</span>, end), ans)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="comment"># 离散化,原值-&gt;离散后的索引(值)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">discrete</span>(<span class="params">self,nums</span>):</span><br><span class="line">        num_set = <span class="built_in">set</span>(nums)</span><br><span class="line">        num_list = <span class="built_in">sorted</span>(<span class="built_in">list</span>(num_set))</span><br><span class="line">        <span class="keyword">return</span> &#123;num: idx + <span class="number">1</span> <span class="keyword">for</span> idx, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(num_list)&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fallingSquares</span>(<span class="params">self, positions: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        n = <span class="built_in">len</span>(positions)</span><br><span class="line">        arr = [<span class="number">0</span>] * (<span class="number">2</span> * n)</span><br><span class="line">        size = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            arr[i * <span class="number">2</span>] = positions[i][<span class="number">0</span>]</span><br><span class="line">            arr[i * <span class="number">2</span> + <span class="number">1</span>] = positions[i][<span class="number">0</span>] + positions[i][<span class="number">1</span>]</span><br><span class="line">            size = <span class="built_in">max</span>(size, arr[i * <span class="number">2</span> + <span class="number">1</span>])</span><br><span class="line">        arr_map = self.discrete(arr)</span><br><span class="line">        st = SegTreeDiscrete(<span class="built_in">len</span>(arr_map))</span><br><span class="line">        res = []</span><br><span class="line">        height = <span class="number">0</span></span><br><span class="line">        max_height = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            l = arr_map[positions[i][<span class="number">0</span>]]</span><br><span class="line">            h = positions[i][<span class="number">1</span>]</span><br><span class="line">            r = arr_map[positions[i][<span class="number">0</span>] + h]</span><br><span class="line">            </span><br><span class="line">            height = st.query(<span class="number">1</span>, l, r-<span class="number">1</span> , <span class="number">0</span>, <span class="built_in">len</span>(arr_map)-<span class="number">1</span>)</span><br><span class="line">            st.updateRange(<span class="number">1</span>, l, r-<span class="number">1</span>,<span class="number">0</span>,<span class="built_in">len</span>(arr_map)-<span class="number">1</span>, height + h)</span><br><span class="line"></span><br><span class="line">            max_height = <span class="built_in">max</span>(max_height, height + h)</span><br><span class="line">            res.append(max_height)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h4 id="线段树动态开点模板"><a class="markdownIt-Anchor" href="#线段树动态开点模板"></a> 线段树动态开点模板</h4><p>思想:<br />不能在程序开始时就完成初始线段树的构建，在区间查询或区间修改时，根据传入的区间信息来动态地创建结点<br /><a href="https://leetcode.cn/problems/count-integers-in-intervals/description/?envType=daily-question&amp;envId=2023-12-16">2276. 统计区间中的整数数目</a><br /><a href="https://leetcode.cn/problems/range-module/">715. Range 模块</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">      self.leftChild = <span class="literal">None</span></span><br><span class="line">      self.rightChild = <span class="literal">None</span></span><br><span class="line">      self.val = <span class="number">0</span></span><br><span class="line">      self.lazy = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SegTreeDynamicPointer</span>:</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">    self.root = Node()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">pushup</span>(<span class="params">self, curNode</span>):</span><br><span class="line">    curNode.val=curNode.leftChild.val+curNode.rightChild.val</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">AddNode</span>(<span class="params">self, curNode</span>):</span><br><span class="line">    <span class="keyword">if</span> curNode.leftChild == <span class="literal">None</span>:</span><br><span class="line">      curNode.leftChild = Node()</span><br><span class="line">    <span class="keyword">if</span> curNode.rightChild == <span class="literal">None</span>:</span><br><span class="line">      curNode.rightChild = Node()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">pushdown</span>(<span class="params">self, curNode, start, end, mid</span>):</span><br><span class="line">    curNode.leftChild.val = (mid - start + <span class="number">1</span>)</span><br><span class="line">    curNode.rightChild.val = (end - mid)</span><br><span class="line">    curNode.leftChild.lazy = curNode.lazy</span><br><span class="line">    curNode.rightChild.lazy = curNode.lazy</span><br><span class="line">    curNode.lazy = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 区间更新</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">updateRange</span>(<span class="params">self, curNode, left, right, start, end, val</span>):</span><br><span class="line">    <span class="comment"># 当前区间完全处于查询区间之内</span></span><br><span class="line">    <span class="keyword">if</span> left &lt;= start <span class="keyword">and</span> end &lt;= right:</span><br><span class="line">      curNode.val = (end-start+<span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> start != end:</span><br><span class="line">        curNode.lazy = <span class="number">1</span></span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    <span class="comment"># 动态开点</span></span><br><span class="line">    self.AddNode(curNode)</span><br><span class="line">    mid = (start + end) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> curNode.lazy != <span class="number">0</span>:</span><br><span class="line">      self.pushdown(curNode, start, end, mid)</span><br><span class="line">    <span class="keyword">if</span> left &lt;= mid:</span><br><span class="line">      self.updateRange(curNode.leftChild, left, right, start, mid, val)</span><br><span class="line">    <span class="keyword">if</span> right &gt; mid:</span><br><span class="line">      self.updateRange(curNode.rightChild, left, right, mid + <span class="number">1</span>, end, val)</span><br><span class="line">    self.pushup(curNode)</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 区间查询</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">self, curNode, left, right, start, end</span>):</span><br><span class="line">    <span class="keyword">if</span> left &lt;= start <span class="keyword">and</span> end &lt;= right:</span><br><span class="line">      <span class="keyword">return</span> curNode.val</span><br><span class="line">    self.AddNode(curNode)</span><br><span class="line">    mid = (start + end) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> curNode.lazy != <span class="number">0</span>:</span><br><span class="line">       self.pushdown(curNode, start, end, mid)</span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> left &lt;= mid:</span><br><span class="line">      ans += self.query(curNode.leftChild, left, right, start, mid)</span><br><span class="line">    <span class="keyword">if</span> right &gt; mid:</span><br><span class="line">      ans += self.query(curNode.rightChild, left, right, mid + <span class="number">1</span>, end)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(ans)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CountIntervals</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.tree=SegTreeDynamicPointer()</span><br><span class="line">        self.N=<span class="number">1e9</span>+<span class="number">1</span></span><br><span class="line">        self.node=self.tree.root</span><br><span class="line">        self.max_num=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, left: <span class="built_in">int</span>, right: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.max_num=<span class="built_in">max</span>(self.max_num,right)</span><br><span class="line">        self.tree.updateRange(self.node,left,right,<span class="number">0</span>,self.N,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">count</span>(<span class="params">self</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">return</span> self.tree.query(self.node,<span class="number">0</span>,self.max_num,<span class="number">0</span>,self.N)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="20231217-使用最小花费爬楼梯简单"><a class="markdownIt-Anchor" href="#20231217-使用最小花费爬楼梯简单"></a> 2023.12.17 使用最小花费爬楼梯[简单]</h3><p><a href="https://leetcode.cn/problems/min-cost-climbing-stairs/?envType=daily-question&amp;envId=2023-12-17">746. 使用最小花费爬楼梯</a></p><p>思路:简单动态规划,第一阶和第二阶应该是0</p><h3 id="20231218-寻找峰值中等"><a class="markdownIt-Anchor" href="#20231218-寻找峰值中等"></a> 2023.12.18 寻找峰值[中等]</h3><p><a href="https://leetcode.cn/problems/find-peak-element/?envType=daily-question&amp;envId=2023-12-18">162. 寻找峰值</a></p><p>思路:单调栈从栈底到栈顶递增,栈底元素一定大于其左边元素,同时也大于栈中其他元素,因此答案就是栈底元素</p><h3 id="20231219-寻找峰值-ii中等"><a class="markdownIt-Anchor" href="#20231219-寻找峰值-ii中等"></a> 2023.12.19 寻找峰值 II[中等]</h3><p><a href="https://leetcode.cn/problems/find-a-peak-element-ii/?envType=daily-question&amp;envId=2023-12-19">1901. 寻找峰值 II</a></p><p>思路:一维的峰值扩展到二维,无思路</p><p>题解:二分,使用二分分行,然后找到每一行的最大值,用这一行的最大值和他的上下两行的值比较,如果上面的大则继续二分上面的行,否则二分下面的行</p><h3 id="20231220-判别首字母缩略词简单"><a class="markdownIt-Anchor" href="#20231220-判别首字母缩略词简单"></a> 2023.12.20 判别首字母缩略词[简单]</h3><p><a href="https://leetcode.cn/problems/check-if-a-string-is-an-acronym-of-words/?envType=daily-question&amp;envId=2023-12-20">2828. 判别首字母缩略词</a></p><p>思路:数组里面每个单次的首字符看看能不能组成这个单词,先判断两个长度是不是一样</p><h3 id="20231221-美丽塔-ii中等"><a class="markdownIt-Anchor" href="#20231221-美丽塔-ii中等"></a> 2023.12.21 美丽塔 II[中等]</h3><p>思路:暴力,两重循环,判断每个点的左右两边是否满足条件,但是肯定超时</p><p>题解:先预处理每个点左右两边,左边为例,用单调栈(从栈底到栈顶递增,存下标),如果当前元素比栈顶元素小,那么就弹出栈顶元素,直到栈顶元素大于当前元素,那么栈顶元素到当前元素之间的元素都是比当前元素大的,这区间只能选择当前元素的高度,然后再加上栈顶元素左边的高度和,得到了当前元素左边的高度和,右边的高度和同理,然后再遍历每个点,每个点的答案就是左边的高度和+右边的高度和-当前点的高度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 预处理代码</span></span><br><span class="line">prefix[i]=(long)(i-left.Peek())*maxHeights[i]+prefix[left.Peek()];</span><br><span class="line">suffix[i]=(long)(right.Peek()-i)*maxHeights[i]+suffix[right.Peek()];</span><br><span class="line"><span class="comment"># 答案代码</span></span><br><span class="line">res=Math.Max(suffix[i]-maxHeights[i]+prefix[i],res);</span><br></pre></td></tr></table></figure><h3 id="20231222-得到山形数组的最少删除次数困难"><a class="markdownIt-Anchor" href="#20231222-得到山形数组的最少删除次数困难"></a> 2023.12.22 得到山形数组的最少删除次数[困难]</h3><h4 id="最长递增子序列模板"><a class="markdownIt-Anchor" href="#最长递增子序列模板"></a> 最长递增子序列模板</h4><p><strong>动态规划</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">MaxSeqInN2</span>(<span class="params">self,nums</span>):</span><br><span class="line">  n=<span class="built_in">len</span>(nums)</span><br><span class="line">  dp=[<span class="number">1</span>]*(n)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">      <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i):</span><br><span class="line">          <span class="keyword">if</span> nums[i]&gt;nums[j]:</span><br><span class="line">              dp[i]=<span class="built_in">max</span>(dp[i],dp[j]+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">max</span>(dp)</span><br></pre></td></tr></table></figure><p><strong>长度数组</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(NlogN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">MaxSeqInLogn</span>(<span class="params">self,nums</span>):</span><br><span class="line">  n=<span class="built_in">len</span>(nums)</span><br><span class="line">  len2num=[<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)]*(n+<span class="number">1</span>)</span><br><span class="line">  len2num[<span class="number">0</span>]=<span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>)</span><br><span class="line">  ans=-<span class="number">1</span></span><br><span class="line">  <span class="keyword">for</span> i,num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">      lengthIndex=bisect_left(len2num,num)</span><br><span class="line">      len2num[lengthIndex]=num</span><br><span class="line">      ans=<span class="built_in">max</span>(ans,lengthIndex)</span><br><span class="line">  <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h4 id="得到山形数组的最少删除次数"><a class="markdownIt-Anchor" href="#得到山形数组的最少删除次数"></a> 得到山形数组的最少删除次数</h4><p><a href="https://leetcode.cn/problems/minimum-number-of-removals-to-make-mountain-array/">1671. 得到山形数组的最少删除次数</a></p><p>思路:以为和美丽塔 II一样,但是区别在于这一题需要左边的长度越长越好,美丽塔 II有个高度</p><p>题解:预处理每个点左右两边的最长递增子序列,遍历每个点,当前点的答案就是左边的最长递增子序列+右边的最长递增子序列-1(当前点被计算了两次)</p><h3 id="20231223-移除石子使总数最小中等"><a class="markdownIt-Anchor" href="#20231223-移除石子使总数最小中等"></a> 2023.12.23 移除石子使总数最小[中等]</h3><p><a href="https://leetcode.cn/problems/remove-stones-to-minimize-the-total/?envType=daily-question&amp;envId=2023-12-25">1962. 移除石子使总数最小</a></p><p>思路:贪心,用优先队列(最大堆),每次取堆顶的元素然后整除2再放回堆里,重复k次</p><h3 id="20231224-收集足够苹果的最小花园周长中等"><a class="markdownIt-Anchor" href="#20231224-收集足够苹果的最小花园周长中等"></a> 2023.12.24 收集足够苹果的最小花园周长[中等]</h3><p><a href="https://leetcode.cn/problems/minimum-garden-perimeter-to-collect-enough-apples/?envType=daily-question&amp;envId=2023-12-25">1954. 收集足够苹果的最小花园周长</a></p><p>思路:两重循环遍历(x,y)的坐标<br />题解:找规律,计算出如何用n表示苹果的数量,然后二分找到n&gt;=neededApples的最小的n,然后计算出边长,公式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2n(n+1)(2n+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>.</p><h3 id="20231225-不浪费原料的汉堡制作方案中等"><a class="markdownIt-Anchor" href="#20231225-不浪费原料的汉堡制作方案中等"></a> 2023.12.25 不浪费原料的汉堡制作方案[中等]</h3><p><a href="https://leetcode.cn/problems/number-of-burgers-with-no-waste-of-ingredients/?envType=daily-question&amp;envId=2023-12-25">1276. 不浪费原料的汉堡制作方案</a></p><p>思路:小的和巨无霸都只用一个奶酪片,枚举一个的数量,另一个就是奶酪片-枚举的数量,然后判断是否满足条件<br />题解:二元一次方程,解方程组</p><h3 id="20231226-参加考试的最大学生数困难"><a class="markdownIt-Anchor" href="#20231226-参加考试的最大学生数困难"></a> 2023.12.26 😒参加考试的最大学生数[困难]</h3><p><a href="https://leetcode.cn/problems/maximum-students-taking-exam/?envType=daily-question&amp;envId=2023-12-25">1349. 参加考试的最大学生数</a></p><h4 id="位运算基础"><a class="markdownIt-Anchor" href="#位运算基础"></a> 位运算基础</h4><h4 id="参加考试的最大学生数"><a class="markdownIt-Anchor" href="#参加考试的最大学生数"></a> 参加考试的最大学生数</h4><h3 id="20231227-保龄球游戏的获胜者简单"><a class="markdownIt-Anchor" href="#20231227-保龄球游戏的获胜者简单"></a> 2023.12.27 保龄球游戏的获胜者[简单]</h3><p><a href="https://leetcode.cn/problems/determine-the-winner-of-a-bowling-game/?envType=daily-question&amp;envId=2023-12-25">2660. 保龄球游戏的获胜者</a></p><p>思路:模拟,重要的是代码的复用</p><h3 id="20231228-收集巧克力中等"><a class="markdownIt-Anchor" href="#20231228-收集巧克力中等"></a> 2023.12.28 收集巧克力[中等]</h3><p><a href="https://leetcode.cn/problems/collecting-chocolates/description/?envType=daily-question&amp;envId=2023-12-28">2735. 收集巧克力</a></p><p>思路:无思路,因为对当前节点每操作一次都会对后面的节点造成影响,无头绪<br />题解:</p><ol><li>最多移动n-1次,因为移动n次就没动了,所以枚举移动次数(1,n-1),那么对于每个节点,他的选择就是移动或者不移动<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dp[i][k]=min(dp[i][k-1],nums[(i+k)\%n])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mclose">)</span></span></span></span>,答案就是当前移动次数的所有节点的总和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo separator="true">,</mo><mi>k</mi><mo>∗</mo><mi>x</mi><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">ans=min(ans,k * x+\sum_{i=0}^{n-1}dp[i][k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span></li><li>二次差分:看不懂</li></ol><p>优化:二维dp之和k-1有关系,可以改成一维的</p><h3 id="20231229-购买两块巧克力简单"><a class="markdownIt-Anchor" href="#20231229-购买两块巧克力简单"></a> 2023.12.29 购买两块巧克力[简单]</h3><p><a href="https://leetcode.cn/problems/buy-two-chocolates/?envType=daily-question&amp;envId=2024-01-01">2706. 购买两块巧克力</a></p><h3 id="20231230-一周中的第几天简单"><a class="markdownIt-Anchor" href="#20231230-一周中的第几天简单"></a> 2023.12.30 一周中的第几天[简单]</h3><p><a href="https://leetcode.cn/problems/day-of-the-week/description/?envType=daily-question&amp;envId=2024-01-01">1185. 一周中的第几天</a></p><p>思路:模拟<br />题解:巧用语言中的库函数</p><h3 id="20231231-一年中的第几天简单"><a class="markdownIt-Anchor" href="#20231231-一年中的第几天简单"></a> 2023.12.31 一年中的第几天[简单]</h3><p><a href="https://leetcode.cn/problems/day-of-the-year/?envType=daily-question&amp;envId=2024-01-01">1154. 一年中的第几天</a><br />思路:模拟<br />题解:语言的类库多看看</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;202312leetcode每日一题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#202312leetcode每日一题&quot;&gt;&lt;/a&gt; 2023.12LeetCode每日一题&lt;/h2&gt;
&lt;h3 id=&quot;20231211-最小体力消耗路径中</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://gladdduck.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法刷题笔记" scheme="https://gladdduck.github.io/tags/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客新增菜单栏</title>
    <link href="https://gladdduck.github.io/2023/12/11/%E9%85%8D%E7%BD%AE-hexo%E6%96%B0%E5%A2%9E%E8%8F%9C%E5%8D%95%E6%A0%8F/"/>
    <id>https://gladdduck.github.io/2023/12/11/%E9%85%8D%E7%BD%AE-hexo%E6%96%B0%E5%A2%9E%E8%8F%9C%E5%8D%95%E6%A0%8F/</id>
    <published>2023-12-11T06:27:08.586Z</published>
    <updated>2023-12-11T06:36:17.828Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-新增菜单栏"><a class="markdownIt-Anchor" href="#1-新增菜单栏"></a> 1. 新增菜单栏</h2><ol><li>打开主题配置文件<code>_config.yml</code></li><li>找到<code>menu</code>字段，新增菜单栏</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">.</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">archives</span>  <span class="comment"># 归档</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">categories</span>  <span class="comment"># 分类</span></span><br><span class="line">  <span class="attr">Repository:</span> <span class="string">repository</span>  <span class="comment"># github repositories</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">about</span>  <span class="comment"># 关于</span></span><br><span class="line">  <span class="comment"># 新增的菜单栏</span></span><br><span class="line">  <span class="attr">Picture:</span> <span class="string">picturewall</span> <span class="comment"># 图片墙</span></span><br></pre></td></tr></table></figure><ol start="3"><li>修改菜单栏对应的图标,具体的图标名称可以在主题的<code>themes\pure\source\css\style.css</code>中找到,是以<code>icon-</code>开头的类名.<br />但是看不到图标什么样,文件都在<code>fonts</code>文件夹里了</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否启用导航菜单图标</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">icon-home-fill</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">icon-archives-fill</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">icon-folder</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">icon-tags</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">icon-project</span></span><br><span class="line">  <span class="attr">books:</span> <span class="string">icon-book-fill</span></span><br><span class="line">  <span class="attr">picture:</span> <span class="string">icon-starfish</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">icon-cup-fill</span></span><br></pre></td></tr></table></figure><ol start="4"><li>修改菜单栏的名称<code>themes\pure\languages\zh-CN.yml</code>中修改:</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">首页</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">归档</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="string">标签</span></span><br><span class="line">  <span class="attr">Repository:</span> <span class="string">项目</span></span><br><span class="line">  <span class="attr">Books:</span> <span class="string">书单</span></span><br><span class="line">  <span class="attr">Movies:</span> <span class="string">电影</span></span><br><span class="line">  <span class="attr">Links:</span> <span class="string">友链</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">关于</span></span><br><span class="line">  <span class="attr">Picture:</span> <span class="string">图片墙</span>  <span class="comment"># 新增的</span></span><br></pre></td></tr></table></figure><ol start="5"><li>在<code>source</code>目录下新建<code>picturewall</code>文件夹,就是第一步中menu菜单对应的,并在该文件夹下新建<code>index.md</code>文件,内容如下:</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 照片墙</span><br><span class="line">layout: xxxx</span><br><span class="line">comments: false</span><br><span class="line">sidebar: none</span><br><span class="line">---</span><br><span class="line">#layout可以设置为现有的布局,比如links,books这些,也可以直接把layout删掉</span><br></pre></td></tr></table></figure><ol start="6"><li><p>后续<code>public/picturewall</code>文件夹下的index.html就会根据这个index.md渲染</p></li><li><p>固定菜单栏的页面(如果这个页面不需要改动的话,可以设置为跳过渲染),在<code>_config.yml</code>中设置(这一段还没太搞明白):</p></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">picturewall/index.html</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-新增菜单栏&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-新增菜单栏&quot;&gt;&lt;/a&gt; 1. 新增菜单栏&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开主题配置文件&lt;code&gt;_config.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;找到&lt;code&gt;</summary>
      
    
    
    
    <category term="杂七杂八配置" scheme="https://gladdduck.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Hexo" scheme="https://gladdduck.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>mmfewshot配置</title>
    <link href="https://gladdduck.github.io/2023/12/10/%E9%85%8D%E7%BD%AE-mmfewshot%E9%85%8D%E7%BD%AE/"/>
    <id>https://gladdduck.github.io/2023/12/10/%E9%85%8D%E7%BD%AE-mmfewshot%E9%85%8D%E7%BD%AE/</id>
    <published>2023-12-10T07:46:36.918Z</published>
    <updated>2024-01-02T12:42:26.081Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基配置础信息"><a class="markdownIt-Anchor" href="#基配置础信息"></a> 基配置础信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关于mmfewshot</span></span><br><span class="line">1. 配置时间:2023/12/10</span><br><span class="line">2. mmfewshot版本: 0.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关于mmcv</span></span><br><span class="line">1. mmcv  2.x版本之前叫做mmcv-full</span><br><span class="line">2. mmcv  2.x版本之后改名</span><br><span class="line">--之前--   |--现在--</span><br><span class="line">mmcv-full  | mmcv</span><br><span class="line">mmcv       | mmcv-lite</span><br><span class="line">3. mmcv是2023年4月份才改名的,所以mmfewshot要安装mmcv-full这个名字</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关于mmdet</span></span><br><span class="line">1. mmdet 3.x版本之前的版本,mmdet/datasets/custome.py文件用到的numpy的一个方法是np.int,这个是numpy的1.20版本丢弃的,所以使用mmdet3.x之前的版本要安装numpy 1.20一下办的</span><br><span class="line">2. 使用mmdet3.x的版本会提示,mmcv版本过低,需要安装mmcv2.x版本(但是mmcv-full这个版本最高只能是1.x,所以无解(不知道理解的对不对)),意味着mmfewshot 0.1.0可能不支持mmdet3.x版本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 总之:</span></span><br><span class="line">mmcv</span><br><span class="line">mmdet</span><br><span class="line">mmfewshot</span><br><span class="line">这三个库之间的版本相互依赖,所以要安装对应的版本,否则会报错</span><br></pre></td></tr></table></figure><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><ol><li>安装mmcv-full(如果已经有mmcv,需要把mmcv卸载)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个要加上-f参数,不然 MMCV CUDA Compiler: not available</span></span><br><span class="line"><span class="comment"># MMCV CUDA Compiler: 10.1 是正确的</span></span><br><span class="line">pip install mmcv-full==1.5.0 -f https://download.openmmlab.com/mmcv/dist/cu102/torch1.7.0/index.html</span><br></pre></td></tr></table></figure><ol start="2"><li>安装mmdet</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mmdet==2.24.0</span><br></pre></td></tr></table></figure><ol start="3"><li>安装mmcls,这个库好像没有特别大的区别</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mmcls==0.23.2</span><br></pre></td></tr></table></figure><ol start="4"><li>安装mmfewshot</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git下来之后进入mmfewshot目录</span></span><br><span class="line"></span><br><span class="line">pip install -r requirements/build.txt</span><br><span class="line">pip install -v -e .  <span class="comment"># or &quot;python setup.py develop&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li>安装numpy</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy==1.19.5</span><br><span class="line"><span class="comment"># matplotlib和pandas现在要求的最低的numpy版本是1.20.0,所以要安装旧版的pandas和matplotlib</span></span><br><span class="line"><span class="comment"># 这两个版本是支持numpy1.19.5的</span></span><br><span class="line">pip install matplotlib==3.6.0</span><br><span class="line">pip install pandas==1.4.4</span><br></pre></td></tr></table></figure><ol start="6"><li>最后的版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mmcls                   0.23.2</span><br><span class="line">mmcv-full               1.5.0</span><br><span class="line">mmdet                   2.24.0</span><br><span class="line">mmfewshot               0.1.0  </span><br><span class="line">Pillow                  8.4.0</span><br><span class="line">pandas                  1.4.4</span><br><span class="line">matplotlib              3.6.0</span><br></pre></td></tr></table></figure><p>###　可能的报错</p><ol><li><code>TypeError: FormatCode() got an unexpected keyword argument 'verify'</code></li></ol><p><a href="https://github.com/open-mmlab/mmdetection/issues/10962">Issue</a></p><p>安装yapf解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install yapf==0.40.1</span><br></pre></td></tr></table></figure><ol start="2"><li><code>RuntimeError: roi_align_forward_impl: implementation for device cuda:0 not found.</code></li></ol><p>运行mmfewshot/utils/collect_env.py的文件,看看cuda是否可用,安装对应的cuda版本<br />参考上面 <code>安装mmcv-full</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mmcv -f https://download.openmmlab.com/mmcv/dist/cu102/torch1.7.0/index.html</span><br></pre></td></tr></table></figure><ol start="3"><li>初始安装版本不对的报错</li></ol><p><a href="https://github.com/open-mmlab/mmfewshot/issues/144">Issue</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">===================================</span><br><span class="line">mmcls      0.25.0     https://github.com/open-mmlab/mmclassification</span><br><span class="line">mmcv-lite  2.1.0      https://github.com/open-mmlab/mmcv</span><br><span class="line">mmdet      3.0.0      https://github.com/open-mmlab/mmdetection</span><br><span class="line">mmengine   0.10.1     https://github.com/open-mmlab/mmengine</span><br><span class="line"></span><br><span class="line">GPU 0: Tesla V100-SXM2-32GB (UUID: GPU-828d98d3-ad2a-0a92-d4d9-0dac21a5439f)</span><br><span class="line">/public/home/zhaol/syxue20225227095/fewshotdetection/mmfewshot-main</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;tools/detection/train.py&quot;</span>, line 12, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from mmcv import Config, DictAction</span><br><span class="line">ImportError: cannot import name <span class="string">&#x27;Config&#x27;</span> from <span class="string">&#x27;mmcv&#x27;</span> (/public/home/zhaol/anaconda3/envs/syxue2/lib/python3.8/site-packages/mmcv/__init__.py)</span><br><span class="line"></span><br><span class="line">===================================</span><br><span class="line">mmcls      0.25.0     https://github.com/open-mmlab/mmclassification</span><br><span class="line">mmcv       2.1.0      https://github.com/open-mmlab/mmcv</span><br><span class="line">mmdet      3.2.0      https://github.com/open-mmlab/mmdetection</span><br><span class="line">mmengine   0.10.1     https://github.com/open-mmlab/mmengine</span><br><span class="line">GPU 0: Tesla V100-SXM2-32GB (UUID: GPU-828d98d3-ad2a-0a92-d4d9-0dac21a5439f)</span><br><span class="line">/public/home/zhaol/syxue20225227095/fewshotdetection/mmfewshot-main</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;tools/detection/train.py&quot;</span>, line 12, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from mmcv import Config, DictAction</span><br><span class="line">ImportError: cannot import name <span class="string">&#x27;Config&#x27;</span> from <span class="string">&#x27;mmcv&#x27;</span> (unknown location)</span><br><span class="line">===================================</span><br><span class="line">mmcls      0.25.0     https://github.com/open-mmlab/mmclassification</span><br><span class="line">mmdet      3.0.0      https://github.com/open-mmlab/mmdetection</span><br><span class="line">mmengine   0.10.1     https://github.com/open-mmlab/mmengine</span><br><span class="line">mmcv-full  1.7.1      https://github.com/open-mmlab/mmcv</span><br><span class="line">GPU 0: Tesla V100-SXM2-32GB (UUID: GPU-828d98d3-ad2a-0a92-d4d9-0dac21a5439f)</span><br><span class="line">/public/home/zhaol/syxue20225227095/fewshotdetection/mmfewshot-main</span><br><span class="line">/public/home/zhaol/anaconda3/envs/syxue2/lib/python3.8/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, <span class="keyword">in</span> <span class="built_in">which</span> it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md <span class="keyword">for</span> more details.</span><br><span class="line">  warnings.warn(</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;tools/detection/train.py&quot;</span>, line 15, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from mmdet.utils import collect_env</span><br><span class="line">  File <span class="string">&quot;/public/home/zhaol/anaconda3/envs/syxue2/lib/python3.8/site-packages/mmdet/__init__.py&quot;</span>, line 16, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    assert (mmcv_version &gt;= digit_version(mmcv_minimum_version)</span><br><span class="line">AssertionError: MMCV==1.7.1 is used but incompatible. Please install mmcv&gt;=2.0.0rc4, &lt;2.1.0.</span><br></pre></td></tr></table></figure><ol start="4"><li><code>RuntimeError: CUDA error: no kernel image is available for execution on the device 错误</code></li></ol><p>安装的pytorch版本和cuda版本不对应<br />刚开始安装的pytorch 1.6.0 + cuda 10.1,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 torchaudio==0.13.1 --extra-index-url https://download.pytorch.org/whl/cu117</span><br></pre></td></tr></table></figure><h3 id="第二次安装完成-增加xformers"><a class="markdownIt-Anchor" href="#第二次安装完成-增加xformers"></a> 第二次安装完成-增加xformers</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">conda create -n mmfew python=3.9</span><br><span class="line">conda activate mmfew</span><br><span class="line"></span><br><span class="line">pip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu113</span><br><span class="line">conda install linux-64_xformers-0.0.22-py39_cu11.6.2_pyt1.12.1.tar.bz2</span><br><span class="line">pip install mmcv-full==1.6.0 -f  https://download.openmmlab.com/mmcv/dist/cu113/torch1.12/index.html</span><br><span class="line">pip install mmdet==2.24.0 mmcls==0.23.2</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> mmfewshot-main</span><br><span class="line">pip install -r requirements/build.txt</span><br><span class="line">pip install -v -e .</span><br><span class="line"></span><br><span class="line">pip install yapf==0.40.1</span><br><span class="line">pip install triton</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;基配置础信息&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基配置础信息&quot;&gt;&lt;/a&gt; 基配置础信息&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    <category term="杂七杂八配置" scheme="https://gladdduck.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="mmfewshot" scheme="https://gladdduck.github.io/tags/mmfewshot/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客参数记录</title>
    <link href="https://gladdduck.github.io/2023/12/03/%E9%85%8D%E7%BD%AE-Hexo%E5%8D%9A%E5%AE%A2%E5%8F%82%E6%95%B0%E8%AE%B0%E5%BD%95/"/>
    <id>https://gladdduck.github.io/2023/12/03/%E9%85%8D%E7%BD%AE-Hexo%E5%8D%9A%E5%AE%A2%E5%8F%82%E6%95%B0%E8%AE%B0%E5%BD%95/</id>
    <published>2023-12-03T05:54:00.181Z</published>
    <updated>2023-12-03T06:05:39.077Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo官网api"><a class="markdownIt-Anchor" href="#hexo官网api"></a> Hexo官网API</h3><p><a href="https://hexo.io/zh-cn/api/">官网API</a><br /><a href="https://github.com/hexojs/hexo">官网仓库</a></p><h3 id="文章属性"><a class="markdownIt-Anchor" href="#文章属性"></a> 文章属性</h3><p><img src="https://image.yayan.xyz/20231203140130.png" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;hexo官网api&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#hexo官网api&quot;&gt;&lt;/a&gt; Hexo官网API&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/api/&quot;&gt;官网API&lt;/a&gt;&lt;br /</summary>
      
    
    
    
    <category term="杂七杂八配置" scheme="https://gladdduck.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Hexo" scheme="https://gladdduck.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Few-shot Object Detection论文总结</title>
    <link href="https://gladdduck.github.io/2023/11/24/%E5%AD%A6%E6%9C%AF-Few-shotDetection%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/"/>
    <id>https://gladdduck.github.io/2023/11/24/%E5%AD%A6%E6%9C%AF-Few-shotDetection%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/</id>
    <published>2023-11-24T12:54:49.892Z</published>
    <updated>2023-12-22T02:15:38.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="few-shot-object-detection"><a class="markdownIt-Anchor" href="#few-shot-object-detection"></a> Few-shot Object Detection</h1><h2 id="综述"><a class="markdownIt-Anchor" href="#综述"></a> 综述</h2><h3 id="few-shot-object-detection-a-comprehensive-survey"><a class="markdownIt-Anchor" href="#few-shot-object-detection-a-comprehensive-survey"></a> Few-Shot Object Detection: A Comprehensive Survey</h3><ol><li>问题定义:N-way K-shot表示使用K个样本来训练N个类别</li><li>和few-shot learning,semi-supervised learning,increamental learning的区别</li><li>使用到的技术:1)迁移学习2)度量学习3)元学习</li></ol><p><strong>Dual-Branch meta learning:</strong><br /><img src="https://image.yayan.xyz/20231105141045.png" alt="" /><br />实现思路:一个Query Branch用来提取待检测图像的特征,然后通过RPN和一个RoI Align得到Query Feature,再和Support Feature提取出来的Support特征(K shot,K&gt;1取平均),进行Aggregation,然后送入RoI Head进行分类和回归.</p><ol><li><p>聚合相关改进</p><ul><li>Variant For Aggregation:<ul><li>缺点:在RPN之后进行聚合,需要RPN为新类别生成Proposal,但是RPN可能无法为新类别生成Proposal</li><li>改进:在RPN之前进行聚合(AttentionRPN),然后将增强的特征送入RPN,生成Proposal</li><li>改进:使用second-order pooling替换avg pooling,减少Support Feature的颜色,条纹,斑点带来的噪声</li></ul></li><li>Variant For Aggregation Operation<ul><li>缺点:简单的channel-wise 乘法不能充分利用Query和Support的特征</li><li>改进:添加比例因子,使用卷积,利用更复杂的操作等</li></ul></li><li>Keep Spatial Information for Aggregation<ul><li>缺点:average pooling会丢失空间信息,convolution会导致空间信息不对齐</li><li>改进:attention-based aggregation</li></ul></li><li>Attention-base Aggregation<ul><li>Dual-Awareness Attention for Few-Shot Object Detection:增强前景,抑制背景并使用Query Feature Map促进空间位置的对齐</li><li>Object detection based on few-shot learning via instance-level feature correlation and aggregation:IFC module用于构造实例特征的相关性,ASA module增强查询和支持之间的特征灵敏度,减少冗余信息</li><li>Few-shot object detection with affinity relation reasoning:设计了一个亲和关系推理模块（ARRM）来促进支持特征和感兴趣区域特征的交互</li><li>One-Shot Object Detection with Co-Attention and Co-Excitation:使用非局部操作来探索每个查询-目标对中体现的共同注意,并且使用改进的SeNet分配候选区域的重要性</li><li>Adaptive Image Transformer for One-Shot Object Detection:将支持和查询作为Transformer的输入,来充分融合信息</li></ul></li><li>Multi-Level Aggregation<ul><li>缺点:只在特征抽取之后进行了一次聚合</li><li>改进:使用PVTv2(Pyramid Vision Transformer)在特征抽取的时候进行多次融合</li></ul></li><li>Aggregation of Several Support Images<ul><li>缺点:多个Support Image的情况下,对特征图取平均,忽略了不同的信息</li><li>改进:1)使用可学习的权重 2)使用softmax分配权重</li></ul></li></ul></li><li><p>Incorporate Relation between Caregories</p><ul><li>缺点:基本类别可以帮助识别新的稀疏类</li><li>改进:1)融入语言特征 2)构建图关系(多类别关系增强特征,合并相似类别特征) 3)捕获类间相似性,增强泛化能力</li></ul></li><li><p>Increase Discriminative power</p><ul><li>缺点:1)在聚合之后,通常使用交叉熵损失判别分类,更好的方法是使用度量学习 2)元学习学习去区分前景和背景,这导致有可能检测到不存在的物体</li><li>改进:-1)GenDet和Meta DETR通过相似度矩阵最小化类间差异,最大化不同的支持向量 2)MM-FSOD使用皮尔斯系数聚合支持向量和查询向量 3)CME擦除最具辨别力的像素  -1)AttentionRPN使用多关系检测器来判断是否存有物体 2)对比学习测量用来区分不同的类别 3)GenDet使用额外的检测器检测基类,增强骨干网络提取更具代表性的特征</li></ul></li><li><p>Improve representation capability</p><ul><li>缺点:base categories被视为负类,导致识别新类的表达能力不足</li><li>改进:SPCN通过选择与基类不同的区域,并使用自监督的方式检测数据增强前后相同的非基类区域</li></ul></li><li><p>Proposal-free Detector</p><ul><li>缺点:许多方法基于Faster RCNN,1)可能生成不准确的区域建议框,2)决定在区域建议框之前还是之后进行聚合</li><li>改进:1)无提议框的模型更容易实现 2)基于YOLO 3)基于DETR</li></ul></li><li><p>Keep the Performance on Base Categories</p><ul><li>缺点:学习新的类别之后,模型可能会导致灾难性遗忘</li><li>改进:1)Meta Faster R-CNN使用一个额外的branch预测base categories,在训练期间固定 2)Sylph每个类别使用独立的分类器</li></ul></li><li><p>Increase the Variance of Novel Categories</p><ul><li>缺点:直接应用数据增强效果不佳</li><li>改进:TIP使用additional transformed guidance consistency loss,使得变化前后的图像特征保持一致</li></ul></li><li><p>Incorporate Context Information</p><ul><li>缺点:在RoI pool或者RoI Align之后,可能导致丢失信息</li><li>改进:DCNet使用三种不同分辨率执行并行池化</li></ul></li><li><p>Category-agnostic Bounding Box Regression</p></li></ol><p><strong>Single-Branch meta learning:</strong></p><p>用的太少,且精确度不高</p><p><strong>Transfer Learning</strong><br />略…</p><ol><li>Modifications of the Region Proposal Network</li><li>Modifications of the Feature Pyramid Network</li><li>Increase the Variance of Novel Categories</li><li>Transfer Knowledge Between Base and Novel Categories</li><li>Keep the Performance on Base Categories</li><li>Modify the Training Objective</li><li>Use Attention</li><li>Modify Architecture</li></ol><h2 id="论文"><a class="markdownIt-Anchor" href="#论文"></a> 论文</h2><p><img src="https://image.yayan.xyz/20231202142618.png" alt="" /></p><!-- 1. Meta-YOLO,FSRW2. Meta-RCNN3. Attention-RPN4. Meta-DETR5. Frustratingly Simple Few-Shot Object Detection6. Meta-Learning to Detect Rare Objects7. One-Shot Object Detection with Co-Attention and Co-Excitation --><hr /><!-- Meta-YOLO --><h3 id="1-metayolofsrw-few-shot-object-detection-via-feature-reweighting"><a class="markdownIt-Anchor" href="#1-metayolofsrw-few-shot-object-detection-via-feature-reweighting"></a> 1. (MetaYOLO,FSRW) Few-shot Object Detection via Feature Reweighting</h3><p><img src="https://image.yayan.xyz/20231112172223.png" alt="" /><br /><strong>思想</strong>:</p><ol><li>一个元特征抽取模块(meta feature extractor:YOLOv2中的Darknet19),用来提取查询图像的元特征</li><li>一个特征重加权模块(feature reweighting module),将支持图像抽取出全局特征(class-specific representation),用于调整元特征的贡献,获得(理解为抽取出支持图像的特征然后和查询图像的特征做一个channel-wise的乘法,来形成一个reweighting的特征(class-specific features)).<br />另一个理解:把支持图像的特征抽取成一个权重参数,用这个参数来动态调整查询图中的特征贡献,得到一个新的class-specific features</li><li>将class-specific features送入YOLOv2的检测器中进行检测</li><li>输入是一个图形和二进制掩码,掩码只支持一个目标</li></ol><p><strong>训练</strong>:</p><ol><li>基础训练阶段,正常目标检测训练,目的是让模型学会通过参考reweighting向量来检测感兴趣的预取</li><li>微调训练阶段,在基类和新类上训练模型,每个类K个support images, 模拟K-shot</li><li>损失函数中的分类损失,使用softmax之后的类别</li></ol><p><strong>补充</strong><br /><a href="https://mp.weixin.qq.com/s/NW07_x1jx7uSkMm98yUkOg"> Deep Traffic 微信公众号:FSRW</a></p><hr /><!-- Meta-RCNN --><h3 id="2-metarcnn-meta-r-cnn-towards-general-solver-for-instance-level-low-shot-learning"><a class="markdownIt-Anchor" href="#2-metarcnn-meta-r-cnn-towards-general-solver-for-instance-level-low-shot-learning"></a> 2. (MetaRCNN) Meta R-CNN: Towards General Solver for Instance-Level Low-Shot Learning</h3><p><img src="https://image.yayan.xyz/20231114212512.png" alt="" /></p><p><strong>思想</strong>:</p><ol><li>查询集图片经过特征提取网络和RPN网络（与Faster/Mask R-CNN中相同）得到感兴趣区域的特征图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">z_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>支持集图像和对应的真实标签图经过预测器重建模网络（Predictor-head Remodeling Network）得到每个类别对应的类别注意力向量（class-attentive vectors），PRN网络的主体部分与Faster/Mask R-CNN的特征提取网络结构相同且权重共享，得到对应特征图后,通过逐元素Sigmoid函数得到对应的注意力向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">v_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</li><li>最后将RPN网络输出的感兴趣区域特征图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">z_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和PRN网络输出的注意力向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">v_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>通过逐通道相乘的方式进行融合,再利用Faster/Mask R-CNN中预测头得到对应个检测图或分割图.</li></ol><p><strong>符号说明</strong>:</p><table><thead><tr><th>含义</th><th>含义</th><th>含义</th><th>含义</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{base}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>基类</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>n</mi><mi>o</mi><mi>v</mi><mi>a</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{noval}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>新类</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{meta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>基类新类的混合</td><td></td><td></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>训练数据</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{meta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td>测试数据</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(·,\theta )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></td><td>原始预测头</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><msub><mi>D</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(·,D_{meta},\theta )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></td><td>重建后的预测头</td></tr></tbody></table><p><strong>PRN</strong>:</p><p>PRN从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{meta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中推断类别注意向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">v</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msup><mo>=</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>D</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo separator="true">;</mo><mi>ϕ</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{v}^{m e t a}=f\left(D_{m e t a} ; \phi\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>. 具体而言,PRN输入的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{meta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一系列物体的图像,共<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{meta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个类别,每类<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个样本,每个物体由RGB图像和前景掩码标记四个通道表示,经过一层卷积之后,送入共享参数的backbone,最后经过通道软注意力生成目标注意力向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">v</mi></mrow><annotation encoding="application/x-tex">\mathbf{v}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span></span></span></span>,经过平均池化得到类别注意向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">v</mi><mi>c</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msubsup><mo>=</mo><mfrac><mn>1</mn><mi>K</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msubsup><mi mathvariant="bold">v</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">\mathbf{v}_{c}^{m e t a}=\frac{1}{K} \sum_{j=1}^{K} \mathbf{v}_{k}^{(c)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040556em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.480618em;vertical-align:-0.43581800000000004em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.398692em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.2197999999999998em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">c</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span></span></span></span>,将其与 RoI 特征(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi mathvariant="bold">Z</mi><mo>^</mo></mover><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\hat{\mathbf{Z}}_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0995499999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">Z</span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)进行通道层级的点乘，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(·,\theta )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>转为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><msub><mi>D</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(·,D_{meta},\theta )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></p><p>$ h\left(\hat{\mathbf{z}}<em>{i, j}, D</em>{\text {meta }} ; \boldsymbol{\theta}^{\prime}\right) \= h\left(\hat{\mathbf{z}}<em>{i, j} \otimes \mathbf{v}^{\text {meta }}, \boldsymbol{\theta}\right) \=h\left(\hat{\mathbf{z}}</em>{i, j} \otimes f\left(D_{\text {meta }} ; \boldsymbol{\phi}\right), \boldsymbol{\theta}\right) $</p><p><strong>关键点</strong>:</p><ol><li>Mini-batch construction:<ul><li>一个训练的mini-batch包含 m个类<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{meta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,K-shot m-class的meta-set <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>m</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{meta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (测试数据), m个类的训练数据 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>就是Faster RCNN的输入对象.</li></ul></li><li>Channel-wise soft-attention layer<ul><li>执行空间池化来对齐图像特征,保持相同大小的Roi特征(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>z</mi><mo>^</mo></mover><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{z}_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>),特征经过逐元素的 sigmoid 以产生注意力向量</li></ul></li><li>Meta-loss<ul><li>不同类对象的注意向量应该导致对Roi特征的不同选择,为此提出一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">Meta-loss</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">s</span></span></span></span>,使元学习中推断的对象注意力向量多样化。通过交叉熵损失实现的，鼓励对象注意力向量落在每个对象所属的类中</li></ul></li><li>Roi meta-learning<ul><li>训练分为两部分,1. meta-train:只使用基类对象构建 2.meta-test:使用基类和新类对象构建</li></ul></li><li>inference<ul><li>训练时的object attentive vectors将替换class-attentive vectors,用于在Roi特征上作用sotf-attention</li><li>在测试时,PRN接受K-shot来生成class-attentive vectors,然后用于Roi特征上的soft-attention.但是测试时,class-attentive vectors可以提取预处理,然后用于Roi特征上的soft-attention.</li></ul></li></ol><p><strong>补充</strong><br /><a href="https://mp.weixin.qq.com/s/Jp378IF7tTUoz06wjPdmRA"> Deep Traffic 微信公众号:Meta-RCNN</a><br /><strong>补充</strong></p><hr /><!-- Attention-RPN --><h3 id="3-attentionrpf-few-shot-object-detection-with-attention-rpn-and-multi-relation-detector"><a class="markdownIt-Anchor" href="#3-attentionrpf-few-shot-object-detection-with-attention-rpn-and-multi-relation-detector"></a> 3. (AttentionRPF) Few-Shot Object Detection with Attention-RPN and Multi-Relation Detector</h3><p><img src="https://image.yayan.xyz/20231124163026.png" alt="" /></p><p><strong>思想</strong>:</p><ol><li>Attention-RPN:通过注意力机制向 RPN 引入支持信息来指导 RPN 产生相关的候选框,抑制其他类别的候选框.将support feature变成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>S</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">S×S×C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的向量(作者发现s=1效果最好,就是1×1的卷积核),然后在query feature上进行卷积,建立注意力map(这种卷积其本质是按通道的点积，可以视为求余弦相似度的过程),然后将这个注意力map经过一个卷积送到RPN中.</li><li>Multi-Relation Detector:测量来自查询和支持对象的提议框之间的相似性,分类三个(全局关联，局部关联，以及patch关联);最终得到的是支持对象和候选框直接的匹配得分(matching score).</li><li>对比实验,提出相同类别的对象重要,不同类别的对象更重要.构建了一个三元组(查询对象类比,支持对象类别,支持对象其他类别),来增强模型对前景和背景的区分能力.</li></ol><p><strong>解决</strong>:</p><ol><li>RPN对novel class的提议不好</li><li>现有的模型都需要fine-tune</li></ol><p><a href="https://mp.weixin.qq.com/s/Iuqf4TtVeKF1zLtk1VuoXQ"> Deep Traffic 微信公众号:Attention-RPN</a></p><!-- Meta-DETR --><h3 id="4-metadetr-meta-detr-image-level-few-shot-object-detection-with-inter-class-correlation-exploitation"><a class="markdownIt-Anchor" href="#4-metadetr-meta-detr-image-level-few-shot-object-detection-with-inter-class-correlation-exploitation"></a> 4. (MetaDETR) Meta-DETR: Image-Level Few-Shot Object Detection with Inter-Class Correlation Exploitation</h3><p><img src="https://image.yayan.xyz/20231114212457.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>低质量的新类区域建议</li><li>单次推理只能检测一个类,忽略了不同类的类间相关性</li></ol><p><strong>思想</strong>:</p><ol><li>共享的特征抽取器把查询图像和支持图像提取到相同的特征空间中</li><li>通过相关聚合模块(CAM)执行查询和支持直接的匹配，CAM进一步把支持类映射到一组预定义的任务编码中,这些任务编码以类无关的方式区分支持类</li><li>最后,通过transformer架构(Deformable-DETR)预测对象位置和相应任务编码</li></ol><p><strong>关键点</strong>:<br /><img src="https://image.yayan.xyz/20231124210649.png" alt="" /></p><ol><li><p>Feature Matching:通过稍微修改注意力机制实现特征匹配,旨在过滤掉与支持类无关的特征;<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">A</mi><mo>=</mo><mi mathvariant="normal">Attn</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi mathvariant="bold">Q</mi><mo separator="true">,</mo><mi mathvariant="bold">S</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Softmax</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mrow><mo stretchy="false">(</mo><mrow><mi mathvariant="bold">Q</mi><mi mathvariant="bold">W</mi></mrow><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mrow><mi mathvariant="bold">S</mi><mi mathvariant="bold">W</mi></mrow><msup><mo stretchy="false">)</mo><mi mathvariant="normal">T</mi></msup></mrow><msqrt><mi>d</mi></msqrt></mfrac><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathbf{A}=\operatorname{Attn}(\mathbf{Q}, \mathbf{S})=\operatorname{Softmax}\left(\frac{(\mathbf{Q W})(\mathbf{S W})^{\mathrm{T}}}{\sqrt{d}}\right),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">A</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">A</span><span class="mord mathrm">t</span><span class="mord mathrm">t</span><span class="mord mathrm">n</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">Q</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">S</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mop"><span class="mord mathrm">S</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.128365em;"><span style="top:-2.5335085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.937845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mathnormal mtight">d</span></span></span><span style="top:-2.8978450000000002em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.102155em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathbf mtight">Q</span><span class="mord mathbf mtight" style="margin-right:0.01597em;">W</span></span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathbf mtight">S</span><span class="mord mathbf mtight" style="margin-right:0.01597em;">W</span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">Q</mi><mi mathvariant="bold">F</mi></msub><mo>=</mo><mi mathvariant="bold">A</mi><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="bold">S</mi><mo stretchy="false">)</mo><mo>⊙</mo><mi mathvariant="bold">Q</mi></mrow><annotation encoding="application/x-tex">\mathbf{Q}_{\mathbf{F}}=\mathbf{A} \sigma(\mathbf{S}) \odot \mathbf{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8805499999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">Q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33027699999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">F</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">A</span></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">S</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8805499999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbf">Q</span></span></span></span></span></p></li><li><p>Encoding Matching:为了实现相关元学习，给每个支持类的预定义任务编码，并将查询特征与其对应的任务编码进行匹配，以便可以对任务编码而不是特定类进行最终预测。</p><ul><li>此处的任务编码就是Transformer中的正弦函数位置编码</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>E</mi></msub><mo>=</mo><mi mathvariant="bold">A</mi><mi mathvariant="bold">T</mi></mrow><annotation encoding="application/x-tex">Q_E=\mathbf{A}\mathbf{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">A</span></span><span class="mord"><span class="mord mathbf">T</span></span></span></span></span></li></ul></li><li><p>Modeling Background for Open-Set Prediction,给背景一个支持占位和任务编码</p></li></ol><p><strong>训练</strong>:</p><ol><li>给定一个查询图像，随机抽取代表不同支持类的K张支持图像。只保留属于采样支持类的Ground Truth真实标注框作为检测目标。此外，每个对象的分类目标是真是标注类的任务编码，而不是真实标注类本身。<ul><li>标注类转任务编码:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>χ</mi><mrow><mo fence="true">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>i</mi><mo separator="true">,</mo><mspace width="1em"/><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\chi\left(s_{i}\right)=i,  \quad i \in\{1,2, \cdots, C\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">χ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">}</span></span></span></span>,具体实现不重要…</li><li>最终的任务是:将目标类的标签映射到相应任务编码的标签</li></ul></li></ol><p><strong>代码</strong>:<br /><a href="https://github.com/ZhangGongjie/Meta-DETR">Meta-DETR</a><br />理解:</p><ol><li>作者没有把CAM单独抽取出来一个模块(找不到命名为CAM的模块),而是继承DeformableDETR,整个模型就是一个DeformableDETR,CAM就是DeformableDETR的Encoder的第一个层,(就是 <code>DeformableTransformer</code>model中的第一个 <code>TransformerEncoderLayer</code>)</li><li>CAM的实现核心代码:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CAM中</span></span><br><span class="line"><span class="comment"># Multi-Head Attention</span></span><br><span class="line">src2 = self.self_attn(self.with_pos_embed(src, pos), reference_points, src, spatial_shapes, level_start_index, padding_mask)</span><br><span class="line">src = src + self.dropout1(src2)</span><br><span class="line">src = self.norm1(src)</span><br><span class="line"><span class="comment"># Single-Head Attention</span></span><br><span class="line">src, tsp = self.siamese_attn(src, inverse_sigmoid(category_codes), category_codes, tsp)</span><br><span class="line"><span class="comment"># FFN</span></span><br><span class="line">src = self.forward_ffn(src + tsp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Single-Head Attention中</span></span><br><span class="line"><span class="comment"># q是query, k是Sigmoid(support), v是support</span></span><br><span class="line"><span class="comment"># output是QF,tsp是QE</span></span><br><span class="line"><span class="comment"># 这个地方感觉和论文中的公式不一样</span></span><br><span class="line"><span class="comment"># 这里A=Attn(Q,Sigmoid(S))</span></span><br><span class="line"><span class="comment"># 文章里A=Attn(Q,S)</span></span><br><span class="line">output, attn, log_attn = self.attention(q, k, v)</span><br><span class="line">tsp, _, _ = self.attention(q, k, tsp)</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr /><h3 id="5-tfa-frustratingly-simple-few-shot-object-detection"><a class="markdownIt-Anchor" href="#5-tfa-frustratingly-simple-few-shot-object-detection"></a> 5. (TFA) Frustratingly Simple Few-Shot Object Detection</h3><p><img src="https://image.yayan.xyz/20231112160553.png" alt="" /></p><p><strong>微调方法</strong>:</p><ol><li>使用Faster RCNN作为检测器,第一阶段正常训练</li><li>在新类上微调时,只微调分类器,前面的固定,并且分类器改为cosine similarity classifier<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>α</mi><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><mi>x</mi><msubsup><mo stretchy="false">)</mo><mi>i</mi><mi mathvariant="normal">⊤</mi></msubsup><msub><mi>w</mi><mi>j</mi></msub></mrow><mrow><mrow><mo fence="true">∥</mo><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><mi>x</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub><mo fence="true">∥</mo></mrow><mrow><mo fence="true">∥</mo><msub><mi>w</mi><mi>j</mi></msub><mo fence="true">∥</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">s_{i, j}=\frac{\alpha \mathcal{F}(x)_{i}^{\top} w_{j}}{\left\|\mathcal{F}(x)_{i}\right\|\left\|w_{j}\right\|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7014399999999996em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1591199999999997em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∥</span></span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.09931em;">F</span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∥</span></span></span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∥</span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∥</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.09931em;">F</span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">⊤</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>代表了第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个区域建议框和第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>个类别的相似度</li></ol><hr /><h3 id="6-metadet-meta-learning-to-detect-rare-objects"><a class="markdownIt-Anchor" href="#6-metadet-meta-learning-to-detect-rare-objects"></a> 6. (MetaDet) Meta-Learning to Detect Rare Objects</h3><p><img src="https://image.yayan.xyz/20231124170553.png" alt="" /></p><p><strong>思想</strong>:</p><ol><li>和5.Frustratingly Simple Few-Shot Object Detection 有共同的发现<ul><li>根据CNN的研究,模型分为两部分,1)类别无关(CNN底层)　2)类别相关(CNN顶层)</li><li>类别无关的部分可以直接迁移到新类上(参数共享),类别相关的部分使用一个元参数预测类别相关部分的模型</li></ul></li><li>Weight Prediction Meta-Model<ul><li>从大批量数据中学习到的参数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>w</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi></mrow><mrow><mi>c</mi><mo separator="true">,</mo><mo>∗</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">w_{det}^{c,*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1079119999999998em;vertical-align:-0.3013079999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.806604em;"><span style="top:-2.3986920000000005em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span></span></span></span>,从k-shot样本中学习到的参数是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>w</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi></mrow><mi>c</mi></msubsup></mrow><annotation encoding="application/x-tex">w_{det}^{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474999999999999em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>,mete-model T的任务是:</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>w</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi></mrow><mrow><mi>c</mi><mo separator="true">,</mo><mo>∗</mo></mrow></msubsup><mo>=</mo><mi>T</mi><mrow><mo fence="true">(</mo><msubsup><mi>w</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi></mrow><mi>c</mi></msubsup><mo separator="true">,</mo><msub><mi>θ</mi><mi>T</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">w_{det}^{c,*}=T\left(w_{det}^{c}, \theta_{T}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1079119999999998em;vertical-align:-0.3013079999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.806604em;"><span style="top:-2.3986920000000005em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.033108em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>,使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">L2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mord">2</span></span></span></span>损失函数</li></ul></li></ol><h3 id="7-coattention-one-shot-object-detection-with-co-attention-and-co-excitation"><a class="markdownIt-Anchor" href="#7-coattention-one-shot-object-detection-with-co-attention-and-co-excitation"></a> 7. (CoAttention) One-Shot Object Detection with Co-Attention and Co-Excitation</h3><p><img src="https://image.yayan.xyz/20231127212927.png" alt="" /></p><p><strong>思想</strong>:</p><ol><li><p>通过<a href="https://zhuanlan.zhihu.com/p/33345791">非局部操作</a>(每个点的计算都考虑到全图其他点的相似度)来探索每个查询-目标对中体现的共同注意(为了丰富RPN对novel class的提议,与query image提供的类别参考具有外观相似性的RoIs),<br />$ F(I)=\phi(I) \oplus \psi(I ; p) \in \mathbb{R}^{N \times W_{I} \times H_{I}} \quad  for target image, I <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>F(p)=\phi(p) \oplus \psi(p ; I) \in \mathbb{R}^{N \times W_{p} \times H_{p}} \quad  for image patch,  p ,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>\phi(I)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>表示抽取出的特征</mtext><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">表示抽取出的特征,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord cjk_fallback">抽</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">征</span><span class="mpunct">,</span></span></span></span>\psi(I ; p)$代表non-local操作</p></li><li><p>利用Squeeze and co-excitation(SCE模块)自适应地重新加权 N 个通道上的重要性分布来灵活地匹配候选提议(强调那些在评估相似性度量方面起着至关重要的作用的特征通道).<br />首先对支持特征做全局平均池化,得到一个向量,用这个向量调整支持特征和查询特征的权重.</p></li><li><p>候选框排名,将RoI(RPN提供的128个候选框)与支持特征Concat,然后对每个候选框进行分类(分为前景和背景,标签根据与真实框的关系(IoU&gt;0.5)得到).为了与支持特征最相关的候选框排在前面.</p></li></ol><p><strong>关键点</strong>:</p><ol><li>增强RPN对novel class的提议</li><li>通道注意力</li></ol><h3 id="8-fsdetview-few-shot-object-detection-and-viewpoint-estimation-for-objects-in-the-wild"><a class="markdownIt-Anchor" href="#8-fsdetview-few-shot-object-detection-and-viewpoint-estimation-for-objects-in-the-wild"></a> 8. (FSDetView) Few-Shot Object Detection and Viewpoint Estimation for Objects in the Wild.</h3><p>Viewpoint Estimation和少样本检测的结合,忽略Viewpoint Estimation,只看Few-Shot Object Detection</p><p><img src="https://image.yayan.xyz/20231127212854.png" alt="" /></p><p><strong>思想</strong>:</p><ol><li>一个稍微复杂点的聚合模块,其他和Meta R-CNN类似,Meta RCNN 和Meta Yolo中的聚合:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">A</mi><mrow><mo fence="true">(</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">q</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">y</mi></mrow></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">s</mi></mrow></msup><mo fence="true">)</mo></mrow><mo>=</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">q</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">y</mi></mrow></msup><mo>⊙</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">s</mi></mrow></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathcal{A}\left(\mathrm{f}^{\mathrm{qry}}, \mathrm{f}^{\mathrm{cls}}\right)=\mathrm{f}^{\mathrm{qry}} \odot \mathrm{f}^{\mathrm{cls}},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mord mathcal">A</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">q</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">s</span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">q</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">s</span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></li><li>本文提出的聚合:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">A</mi><mrow><mo fence="true">(</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">q</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">y</mi></mrow></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">s</mi></mrow></msup><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">q</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">y</mi></mrow></msup><mo>⊙</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">s</mi></mrow></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">q</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">y</mi></mrow></msup><mo>−</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">s</mi></mrow></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">q</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">y</mi></mrow></msup><mo fence="true">]</mo></mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathcal{A}\left(\mathrm{f}^{\mathrm{qry}}, \mathrm{f}^{\mathrm{cls}}\right)=\left[\mathrm{f}^{\mathrm{qry}} \odot \mathrm{f}^{\mathrm{cls}}, \mathrm{f}^{\mathrm{qry}}-\mathrm{f}^{\mathrm{cls}}, \mathrm{f}^{\mathrm{qry}}\right],</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mord mathcal">A</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">q</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">s</span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">q</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">s</span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">q</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">s</span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">q</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">q</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">y</mi></mrow></msup><mo>−</mo><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">s</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathrm{f}^{\mathrm{qry}}-\mathrm{f}^{\mathrm{cls}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">q</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">s</span></span></span></span></span></span></span></span></span></span></span></span></span>,特征减法衡量图像特征之间的相似性,嵌入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">f</mi><mrow><mi mathvariant="normal">q</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">y</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathrm{f}^{\mathrm{qry}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">q</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span></span></span></span></span></span></span></span>本身，没有任何重新加权，也包含相关信息.</li></ol><h3 id="9-metafasterrcnn-meta-faster-r-cnn-towards-accurate-few-shot-object-detection-with-attentive-feature-alignment"><a class="markdownIt-Anchor" href="#9-metafasterrcnn-meta-faster-r-cnn-towards-accurate-few-shot-object-detection-with-attentive-feature-alignment"></a> 9. (MetaFasterRCNN) Meta Faster R-CNN: Towards Accurate Few-Shot Object Detection with Attentive Feature Alignment.</h3><p><img src="https://image.yayan.xyz/20231127215321.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>RPN对novel class的提议不好</li><li>novel class的候选框和支持特征中的对象位置不对齐</li></ol><p><strong>思想</strong>:</p><ol><li>对Base Class训练一个单独的Faster RCNN用来检测</li><li>提出Meta-RPN module,用于增强RPN对novel class的提议<br /><img src="https://image.yayan.xyz/20231127222207.png" alt="" /></li></ol><p>首先对支持特征对查询特征进行卷积然后生成锚框,对支持特征进行spatial average pool得到和锚框大小一样的特征(多个查询图形取平均),然后送入Meta-RPN module,就是图三中左边上下两个特征图.</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>f</mi><mi>q</mi><mi>c</mi></msubsup><mo>=</mo><mrow><mo fence="true">[</mo><msub><mi mathvariant="normal">Φ</mi><mtext>Mult </mtext></msub><mrow><mo fence="true">(</mo><msub><mi>f</mi><mi>q</mi></msub><mo>⊙</mo><msubsup><mi>f</mi><mtext>pool </mtext><mi>c</mi></msubsup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mi mathvariant="normal">Φ</mi><mtext>Sub </mtext></msub><mrow><mo fence="true">(</mo><msub><mi>f</mi><mi>q</mi></msub><mo>−</mo><msubsup><mi>f</mi><mtext>pool </mtext><mi>c</mi></msubsup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mi mathvariant="normal">Φ</mi><mtext>Cat </mtext></msub><mrow><mo fence="true">[</mo><msub><mi>f</mi><mi>q</mi></msub><mo separator="true">,</mo><msubsup><mi>f</mi><mtext>pool </mtext><mi>c</mi></msubsup><mo fence="true">]</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">f_{q}^{c}=\left[\Phi_{\text {Mult }}\left(f_{q} \odot f_{\text {pool }}^{c}\right), \Phi_{\text {Sub }}\left(f_{q}-f_{\text {pool }}^{c}\right), \Phi_{\text {Cat }}\left[f_{q}, f_{\text {pool }}^{c}\right]\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.077548em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Mult </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">pool </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Sub </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">pool </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Cat </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">pool </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span></p><p>Feature Fusion的公式,Based on 8.Few-Shot Object Detection and Viewpoint Estimation for Objects in the Wild.</p><ol start="3"><li><p>使用高分辨率的支持特征来计算和候选框直接的相似度,但是候选框和支持特征中的对象位置不对齐,所以基于注意力的特征对齐方法来解决空间错位问题.</p></li><li><p>(Spatial Alignment)首先通过计算亲和矩阵来建立两个输入特征之间的软对应关系(每个像素点之间的关系,矩阵大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>W</mi><mo>×</mo><mi>H</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">HW×HW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>),然后计算每个像素点之间的相似度:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><msub><mo>∑</mo><mi>k</mi></msub><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">A(i, j)^{\prime}=\frac{\exp (A(i, j))}{\sum_{k} \exp (A(i, k))}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.580007em;vertical-align:-0.5700069999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1745899999999999em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight"><span class="mtight">e</span><span class="mtight">x</span><span class="mtight">p</span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">e</span><span class="mtight">x</span><span class="mtight">p</span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5700069999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br />然后每个空间位置i就通过聚合类原型中所有位置的嵌入来计算:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mover accent="true"><mi>f</mi><mo>ˉ</mo></mover><mi>c</mi></msup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>j</mi></msub><mi>A</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mover accent="true"><mi>f</mi><mo>^</mo></mover><mi>c</mi></msup><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\bar{f}^{c}(i)=\sum_{j} A(i, j)^{\prime} \hat{f}^{c}(j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0812199999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8312199999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3936979999999999em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></p></li><li><p>(Foreground Attention Module)生成一个Attention mask来抑制背景,增强前景.候选框中的每个像素i与每个空间位置的相似度:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><msub><mo>∑</mo><mi>j</mi></msub><mi>A</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msub><mo>∑</mo><mi>j</mi></msub><mi>A</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">M(i)=\sigma\left(\sum_{j} A(i, j)\right)=\frac{1}{1+\exp \left(-\sum_{j} A(i, j)\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.674835em;vertical-align:-0.8297270000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.4924999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mop mtight"><span class="mtight">e</span><span class="mtight">x</span><span class="mtight">p</span></span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">(</span></span><span class="mord mtight">−</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.14964714285714287em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.46032428571428574em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathnormal mtight">A</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8297270000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br />其中 M 中的较高值表示候选框中的对应位置更类似于对齐原型类的位置，并且更有可能是相同的语义部分。背景区域很难在类原型中找到相似度较高的位置，导致M中的值较低,最后将M和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mover accent="true"><mi>f</mi><mo>ˉ</mo></mover><mi>c</mi></msup></mrow><annotation encoding="application/x-tex">\bar{f}^{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0256599999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8312199999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span></span>相乘,再通过类似残差连接的一个可学习参数,得到最终的特征:</p></li><li><p>(Non-linear Classifier Module)为了衡量最终的候选框和支持类之间的相似性,使用特征融合网络来聚合两个高分辨率的特征，<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo>=</mo><mrow><mo fence="true">[</mo><msub><mi mathvariant="normal">Ψ</mi><mrow><mi>M</mi><mi>u</mi><mi>l</mi><mi>t</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi>f</mi><mo stretchy="true">~</mo></mover><mi>c</mi></msup><mo>⊙</mo><msub><mover accent="true"><mi>f</mi><mo stretchy="true">~</mo></mover><mi>p</mi></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mi mathvariant="normal">Ψ</mi><mrow><mi>S</mi><mi>u</mi><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi>f</mi><mo stretchy="true">~</mo></mover><mi>c</mi></msup><mo>−</mo><msub><mover accent="true"><mi>f</mi><mo stretchy="true">~</mo></mover><mi>p</mi></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mi mathvariant="normal">Ψ</mi><mrow><mi>C</mi><mi>a</mi><mi>t</mi></mrow></msub><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>f</mi><mo stretchy="true">~</mo></mover><mi>c</mi></msup><mo separator="true">,</mo><msub><mover accent="true"><mi>f</mi><mo stretchy="true">~</mo></mover><mi>p</mi></msub><mo fence="true">]</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">f=\left[\Psi_{M u l t}\left(\widetilde{f}^{c} \odot \widetilde{f}_{p}\right), \Psi_{S u b}\left(\widetilde{f}^{c}-\widetilde{f}_{p}\right), \Psi_{C a t}\left[\widetilde{f}^{c}, \widetilde{f}_{p}\right]\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span class="svg-align" style="width:calc(100% - 0.33334em);margin-left:0.33334em;top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span class="svg-align" style="width:calc(100% - 0.33334em);margin-left:0.33334em;top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span class="svg-align" style="width:calc(100% - 0.33334em);margin-left:0.33334em;top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span class="svg-align" style="width:calc(100% - 0.33334em);margin-left:0.33334em;top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span class="svg-align" style="width:calc(100% - 0.33334em);margin-left:0.33334em;top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span class="svg-align" style="width:calc(100% - 0.33334em);margin-left:0.33334em;top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span><br />然后将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>送入预测类和框的层<br /><img src="https://image.yayan.xyz/20231127222652.png" alt="" /></p></li></ol><p><strong>训练</strong>:</p><ol><li>使用base class进行元学习,不需要微调就可以应用到novel class上</li><li>训练完之后,用novel class+base class的数据进行微调(这不作弊吗?)</li></ol><h3 id="10-fsce-fsce-few-shot-object-detection-via-contrastive-proposal-encoding"><a class="markdownIt-Anchor" href="#10-fsce-fsce-few-shot-object-detection-via-contrastive-proposal-encoding"></a> 10. (FSCE) FSCE: Few-Shot Object Detection via Contrastive Proposal Encoding</h3><p><img src="https://image.yayan.xyz/20231202155449.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>transfer learning的方法通常精确度高</li><li>精确度的退化主要来自将新实例错误分类为易混淆的类,定位基本准确(现有模型并没有学习到一个好的类别特征嵌入)</li></ol><p><strong>思想</strong>:</p><ol><li>减小类内方差,增大类间方差,使用对比学习(To learn instance-level discriminative feature representations, contrastive learning has demonstrated its effectiveness in tasks including recognition, identification and the recent successful self-supervised models. )</li><li>RPN推荐的novel class只有base class的四分之一<ul><li>在NMS（非极大值抑制）之后保留的提议数量×2。这样的话，能够为后续提供更多可能包含前景的提议</li><li>将RoI头中用于计算损失的候选框减少一半,因为一半多的候选框都包含的是背景(提升前景框的比例)</li></ul></li><li>对比提议编码（ Contrastive Proposal Encoding）<ul><li>RoI features因为有Relu激活,部分为0,所以用一个FC层来编码,获取到128维的对比特征</li><li>使用余弦相似度计算候选框之间的相似度,并优化对比目标使得类间方差大,类内方差小</li></ul></li><li>Contrastive Proposal Encoding (CPE) Loss<br />$\mathcal{L}<em>{C P E}=\frac{1}{N} \sum</em>{i=1}^{N} f\left(u_{i}\right) \cdot L_{z_{i}} <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>L_{z_{i}}=\frac{-1}{N_{y_{i}}-1} \sum_{j=1, j \neq i}^{N} \mathbb{I}\left{y_{i}=y_{j}\right} \cdot \log \frac{\exp \left(\tilde{z_{i}} \cdot \tilde{z_{j}} / \tau\right)}{\sum_{k=1}^{N} \mathbb{I}<em>{k \neq i} \cdot \exp \left(\tilde{z</em>{i}} \cdot \tilde{z_{k}} / \tau\right)}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>z_i<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>是对比特征</mtext><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">是对比特征,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">征</span><span class="mpunct">,</span></span></span></span>y_i<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>是类别</mtext><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">是类别,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">类</span><span class="mord cjk_fallback">别</span><span class="mpunct">,</span></span></span></span>u_i<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>是与真实框的</mtext><mi>I</mi><mi>o</mi><mi>U</mi><mtext>分数</mtext><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">是与真实框的IoU分数,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">与</span><span class="mord cjk_fallback">真</span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">框</span><span class="mord cjk_fallback">的</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">数</span><span class="mpunct">,</span></span></span></span>N_y<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>是类别</mtext><mi>y</mi><mtext>的样本数量</mtext><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">是类别y的样本数量,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">类</span><span class="mord cjk_fallback">别</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">本</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">量</span><span class="mpunct">,</span></span></span></span>f\left(u_{i}\right)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>作用是为质量不同的预测框赋予不同的权重</mtext><mo separator="true">,</mo><mtext>实验证明常量更好上述公式中衡量了特征</mtext></mrow><annotation encoding="application/x-tex">作用是为质量不同的预测框赋予不同的权重,实验证明常量更好上述公式中衡量了特征</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">质</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">预</span><span class="mord cjk_fallback">测</span><span class="mord cjk_fallback">框</span><span class="mord cjk_fallback">赋</span><span class="mord cjk_fallback">予</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">权</span><span class="mord cjk_fallback">重</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">验</span><span class="mord cjk_fallback">证</span><span class="mord cjk_fallback">明</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">更</span><span class="mord cjk_fallback">好</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">述</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">衡</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">了</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">征</span></span></span></span>z_i<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>和</mtext></mrow><annotation encoding="application/x-tex">和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">和</span></span></span></span>\tilde{z_{i}}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>之间的余弦相似度。当两个</mtext><mi>R</mi><mi>o</mi><mi>I</mi><mtext>（</mtext></mrow><annotation encoding="application/x-tex">之间的余弦相似度。当两个RoI（</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">间</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">余</span><span class="mord cjk_fallback">弦</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">似</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">个</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord cjk_fallback">（</span></span></span></span>i<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>和</mtext></mrow><annotation encoding="application/x-tex">和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">和</span></span></span></span>j$）为相同类别时，其相似度越高，该损失的值就越小，这将引导相同类别的特征嵌入在学习过程中变得更紧凑，而不同类别的特征嵌入将变得更分散，</li></ol><h3 id="11-afdnet-afd-net-adaptive-fully-dual-network-for-few-shot-object-detection"><a class="markdownIt-Anchor" href="#11-afdnet-afd-net-adaptive-fully-dual-network-for-few-shot-object-detection"></a> 11. (AFDNet) AFD-Net: Adaptive Fully-Dual Network for Few-Shot Object Detection</h3><p><img src="https://image.yayan.xyz/20231203114632.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>在目标检测中,分类和定位是完全不同的两个子任务,使用相同的特征进行这两个任务不好</li></ol><p><strong>思想</strong>:</p><ol><li>提出了Adaptive Fully-Dual Network(AFD-Net,自适应全双网络),将分类和定位解耦<ul><li>查询图像使用双询问编码（Dual Query Encoder，DQE）输出用于分类和定位的查询他特征</li><li>支持图像使用双注意力生成（Dual Attention Generator，DAG）输出用于分类和定位的类被注意(支持)特征</li><li>用于分类和定位的查询特征和支持特征分别送入双聚合器（Dual Aggregator，DA）用于分类和定位</li></ul></li><li>Dual Attention Generator比Dual Query Encoder多了一个Max Pool来保证支持特征的大小和查询特征的大小一致<br /><img src="https://image.yayan.xyz/20231203145704.png" alt="" /><br />分类分支使用卷积处理,回归任务使用全连接处理,最后各乘一个可学习的权重,concat在一起</li><li>Dual Aggregator的聚合方式和8.(FSDetView) Few-Shot Object Detection and Viewpoint Estimation for Objects in the Wild.一样</li></ol><h3 id="12-defrcn-defrcn-decoupled-faster-r-cnn-for-few-shot-object-detection"><a class="markdownIt-Anchor" href="#12-defrcn-defrcn-decoupled-faster-r-cnn-for-few-shot-object-detection"></a> 12. (DeFRCN) DeFRCN: Decoupled Faster R-CNN for Few-Shot Object Detection</h3><p><img src="https://image.yayan.xyz/20231204214547.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>multi-stage (RPN vs. RCNN)<ul><li>RPN应该是类无关的</li><li>RCNN应该是类相关的</li><li>但是二者共用一个backbone,梯度会回流到backbone带来冲突</li><li>通过梯度调整三个模块(backbone,RPN,RCNN)之间的解耦程度来缓解整个模型不被其中一个支配</li></ul></li><li>multi-task (classification vs. localization).<ul><li>分类任务需要平移不变性,而定位任务对位置敏感</li><li>在分类分支上使用一个有效的分数校准模块来实现解耦两个任务</li></ul></li></ol><p><strong>思想</strong>:</p><ol><li><p>在RPN,RCNN和backbone之间引入GDL,使用一个decoupling coefficient <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span></span></span></span>来控制梯度的流动,从而减少不同模块之间的相互影响,<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="double-struck">G</mi><mrow><mo stretchy="false">(</mo><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathbb{G}_{(\mathcal{A}, \lambda)}(x) =\mathcal{A}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">G</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">λ</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal">A</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">d</mi><msub><mi mathvariant="double-struck">G</mi><mrow><mo stretchy="false">(</mo><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mi mathvariant="normal">d</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mi>λ</mi><msub><mi mathvariant="normal">∇</mi><mi mathvariant="script">A</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\mathrm{d} \mathbb{G}_{(\mathcal{A}, \lambda)}}{\mathrm{d} x} =\lambda \nabla_{\mathcal{A}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.399748em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.054748em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span></span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5686400000000003em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathbb mtight">G</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">λ</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3694857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">λ</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span></span></span></span>有三种可能,分开讨论</p></li><li><p>PCB由一个预训练模型，一个ROIAlign层和一个分类器组成.首先从支持集中提取特征 ,然后使用RoIAlign与GroundTruth生成MK个实例,然后对k个实例的特征取平均,得到m个类别原型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">p_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. 然后给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>(由检测器得到),利用预测出来的框,使用RoIAlign对齐,得到预测特征,计算预测特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和类原型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">p_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>之间的相似度分数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">s_i^{cos}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.923056em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>,最后的预测类别得分为:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mo lspace="0em" rspace="0em">‡</mo></msubsup><mo>=</mo><mi>α</mi><mo>⋅</mo><msub><mi>s</mi><mi>i</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mi>s</mi><mi>i</mi><mi>cos</mi><mo>⁡</mo></msubsup></mrow><annotation encoding="application/x-tex">s_{i}^{\ddagger}=\alpha \cdot s_{i}+(1-\alpha) \cdot s_{i}^{\cos }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2438799999999999em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">‡</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.923056em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">c</span><span class="mtight">o</span><span class="mtight">s</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span></p></li></ol><h3 id="13-fct-few-shot-object-detection-with-fully-cross-transformer"><a class="markdownIt-Anchor" href="#13-fct-few-shot-object-detection-with-fully-cross-transformer"></a> 13. (FCT) Few-Shot Object Detection with Fully Cross-Transformer</h3><p><img src="https://image.yayan.xyz/20231206190239.png" alt="" /><br /><strong>问题</strong>:</p><ol><li>之前的工作,支持分支和查询分支的交互仅限于在检测头,剩余的几百个层的特征都是独立的,</li></ol><p><strong>思想</strong>:</p><ol><li>backbone中的Cross-Transformer之前<ul><li>在送入之前,把图像分成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mo>×</mo><mn>4</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">4×4×3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>大小的patches.然后展平扩展通道数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">C_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>加上位置编码,和批次编码之后(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>X</mi><mi>q</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><msub><mi>X</mi><mi>q</mi></msub><mo>+</mo><msubsup><mi mathvariant="bold">E</mi><mi>q</mi><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow></msubsup><mo>+</mo><msup><mi mathvariant="bold">E</mi><mrow><mi>b</mi><mi>r</mi><mi>a</mi></mrow></msup><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><msubsup><mi>X</mi><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><msub><mi>X</mi><mi>s</mi></msub><mo>+</mo><msubsup><mi mathvariant="bold">E</mi><mi>s</mi><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow></msubsup><mo>+</mo><msup><mi mathvariant="bold">E</mi><mrow><mi>b</mi><mi>r</mi><mi>a</mi></mrow></msup><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">X_{q}^{\prime}=X_{q}+\mathbf{E}_{q}^{p o s}+\mathbf{E}^{b r a}[0], X_{s}^{\prime}=X_{s}+\mathbf{E}_{s}^{p o s}+\mathbf{E}^{b r a}[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.135em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.069218em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">E</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93311em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">E</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>),再经过映射得到KVQ(为了减少计算量,使用了空间缩减)</li></ul></li><li>The Asymmetric-Batched Cross-Attention,非对称批处理交叉注意<ul><li>支持图像通常大于1,且不固定,这个模块一次计算查询图像与同一类的所有支持图像之间的注意。<br /><img src="https://image.yayan.xyz/20231206201930.png" alt="" /></li><li>对支持图像进行平均池化,使得匹配查询分支的批量大小</li><li>对查询图像进行重复,使得匹配支持分支的批量大小</li><li>聚合之后做多头注意力+MLP</li></ul></li><li>The Cross-Transformer Detection Head用于在最终检测之前联合提取建议和支持图像的RoI特征<ul><li>从支持分支提取出100个候选框取平均,只有一个</li><li>从查询分支提取出100个候选框</li><li>使用3.Few-Shot Object Detection with Attention-RPN and Multi-Relation Detector中的两两匹配方法进行预测</li></ul></li></ol><h3 id="14-dedetr-decoupled-detr-for-few-shot-object-detection"><a class="markdownIt-Anchor" href="#14-dedetr-decoupled-detr-for-few-shot-object-detection"></a> 14. (DeDETR) Decoupled DETR For Few-shot Object Detection</h3><p><img src="https://image.yayan.xyz/20231205210339.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>FasterRCNN存在定位准确,分类不准确的问题,DETR同样存在(因为极端样本不平衡导致参数优化中数据丰富的类的旧知识占主导地位，这意味着模型总是对数据丰富的类有一定的偏向。)</li><li>解码器只会使用编码器最后一层的输出作为输入,但是编码器到解码器是一个从浅到深再回到浅的过程,所以浅编码器可能会更好地匹配浅解码器</li><li>不仅解码器的最后一层能产生正确的预测结果，解码器中间层的输出有时也能产生更好的预测结果。</li></ol><p><strong>思想</strong>:</p><ol><li><p>Decoupled prompts (DePrompt):</p><ul><li>来自新类的少数样本很难将像 DETR 这样的大型模型推向合适的最优值,因此为新类和基类分配单独的权重集</li><li>分别为base class 和novel class构建独立的deformable selfattention modules,DePrompt的输出作为编码器的输入,DePrompt的输出由公式决定(w的三种设置)<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mtext>DePrompt </mtext></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><mo>∗</mo><msub><mi>f</mi><msub><mi>b</mi><mrow><mi>p</mi><mi>m</mi><mi>t</mi></mrow></msub></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>w</mi><mo stretchy="false">)</mo><mo>∗</mo><msub><mi>f</mi><msub><mi>n</mi><mrow><mi>p</mi><mi>m</mi><mi>t</mi></mrow></msub></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{\text {DePrompt }}(x)=w * f_{b_{p m t}}(x)+(1-w) * f_{n_{p m t}}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">DePrompt </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0973199999999999em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0973199999999999em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></li></ul></li><li><p>编码器和解码器之间的Skip connection,有两种方式</p><ul><li>可学习的连接,每一层解码器的输入都有前面所有编码器层的输出乘可学习的权重矩阵得到<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>e</mi><mi>m</mi><mi mathvariant="normal">_</mi><mi>n</mi><mi>e</mi><msup><mi>w</mi><mi>j</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mi>i</mi><mrow><mi>i</mi><mo>=</mo><mn>6</mn></mrow></msubsup><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>∗</mo><mi>M</mi><mi>e</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>o</mi><mi>r</mi><msup><mi>i</mi><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">Mem\_new^j=\sum_{i}^{i=6} A_{i j} * Men\_ori^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.134664em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.264274em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.964564em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.134664em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span></li><li>软连接,每一层解码器的输入都有前面对应的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn><mo>−</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">6-j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>层和最后一层编码器的输出得到<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>e</mi><mi>m</mi><mi mathvariant="normal">_</mi><mi>n</mi><mi>e</mi><msup><mi>w</mi><mi>j</mi></msup><mo>=</mo><mi>A</mi><mo>∗</mo><mi>M</mi><mi>e</mi><mi>m</mi><mi mathvariant="normal">_</mi><mi>o</mi><mi>r</mi><msup><mi>i</mi><mrow><mo stretchy="false">{</mo><mn>6</mn><mo stretchy="false">}</mo></mrow></msup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>A</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>M</mi><mi>e</mi><msub><mi>m</mi><mo lspace="0em" rspace="0em">−</mo></msub><mi>o</mi><mi>r</mi><msup><mi>i</mi><mrow><mo stretchy="false">{</mo><mi>i</mi><mo stretchy="false">}</mo></mrow></msup></mrow><annotation encoding="application/x-tex">Mem\_new^j=A * M e m \_o r i^{\{6\}}+(1-A) * M e m_{-} o r i^{\{i\}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.134664em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">{</span><span class="mord mtight">6</span><span class="mclose mtight">}</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.096331em;vertical-align:-0.208331em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">{</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">}</span></span></span></span></span></span></span></span></span></span></span></span></li></ul></li><li><p>Adaptive decoder selection来解决5个中间层解码器的输出可能比最后一层获得更好的检测结果</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mi mathvariant="normal">_</mi><mi>n</mi><mi>e</mi><mi>w</mi><mo>=</mo><msubsup><mo>∑</mo><mi>j</mi><mrow><mi>j</mi><mo>=</mo><mn>6</mn></mrow></msubsup><msub><mi>B</mi><mi>j</mi></msub><mo>∗</mo><mi>D</mi><mi>e</mi><mi>c</mi><mi mathvariant="normal">_</mi><mi>o</mi><mi>r</mi><msup><mi>i</mi><mi>j</mi></msup></mrow><annotation encoding="application/x-tex">Dec\_new =\sum_{j}^{j=6} B_{j} * Dec\_ori^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.400382em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.964564em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.134664em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span></span></span></li><li>用可学习的参数动态调整每个层输出的权重</li></ul></li></ol><h3 id="15-fsrc-few-shot-object-detection-with-refined-contrastive-learning"><a class="markdownIt-Anchor" href="#15-fsrc-few-shot-object-detection-with-refined-contrastive-learning"></a> 15. (FSRC) Few-shot Object Detection with Refined Contrastive Learning</h3><p><img src="https://image.yayan.xyz/20231207200929.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>各个类别的检测精度的标准差很大,表明模型对不同类别的检测能力差异很大</li></ol><p><strong>思想</strong>:<br />1.在RoiPool前都和FasterRCNN一样,不同的地方在于加上了RCL模块<br />2. 使用细粒度的对比学习增强学习能力(和10.FSCE: Few-Shot Object Detection via Contrastive Proposal Encoding的区别在于FSCE把所有的类(前景和背景)都考虑进去进行对比),本文先把类间距小的类(相似类)挑出来,然后在这些Resemblance Group中使用对比学习<br />3. 找到相似类对</p><ul><li>需要IoU和真实框大于阈值,并且分类错误</li><li>当一个相似类对出现的次数超过某个阈值后,把这些相似类对中的类都记录下来,作为一个Resemblance Group</li><li>只有当预测的类别或者真实的类别属于Resemblance Group中的类时,才会进行对比学习</li><li>这个测量应该在训练过程中使用,因为在刚开始的时候,模型倾向于基类</li></ul><ol start="4"><li>损失函数<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>R</mi><mi>C</mi><mi>L</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><msub><mi>N</mi><mrow><mi>R</mi><mi>C</mi><mi>L</mi></mrow></msub></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>R</mi><mi>C</mi><mi>L</mi></mrow></msub></msubsup><mi>w</mi><mrow><mo fence="true">(</mo><msub><mi>u</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>⋅</mo><msub><mi>L</mi><msub><mi>z</mi><mi>i</mi></msub></msub></mrow><annotation encoding="application/x-tex">L_{R C L}=\frac{1}{N_{R C L}} \sum_{i=1}^{N_{R C L}} w\left(u_{i}\right) \cdot L_{z_{i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.426536em;vertical-align:-0.44530499999999995em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span></li></ol><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>R</mi><mi>C</mi><mi>L</mi></mrow></msub><mo>=</mo><msub><mi>N</mi><mrow><mi>a</mi><mi>l</mi><mi>l</mi></mrow></msub><mo separator="true">,</mo><msub><mi>I</mi><mi>c</mi></msub><mo>&lt;</mo><msub><mi>I</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">N_{R C L} = N_{a l l}, I_{c}&lt;I_{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>R</mi><mi>C</mi><mi>L</mi></mrow></msub><mo>=</mo><msub><mi>N</mi><msub><mi>G</mi><mi>R</mi></msub></msub><mo separator="true">,</mo><msub><mi>I</mi><mi>c</mi></msub><mo>⩾</mo><msub><mi>I</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">N_{R C L} = N_{G_{R}}, I_{c} \geqslant I_{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.933635em;vertical-align:-0.250305em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><msub><mi>z</mi><mi>i</mi></msub></msub><mo>=</mo><mfrac><mrow><mo>−</mo><mn>1</mn></mrow><mrow><msub><mi>N</mi><msub><mi>y</mi><mi>i</mi></msub></msub><mo>−</mo><mn>1</mn></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo mathvariant="normal">≠</mo><mi>i</mi></mrow><mi>N</mi></msubsup><mi>I</mi><mrow><mo fence="true">{</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>y</mi><mi>j</mi></msub><mo fence="true">}</mo></mrow><mo>⋅</mo><mi>log</mi><mo>⁡</mo><mfrac><msup><mi>e</mi><mrow><mover accent="true"><msub><mi>z</mi><mi>i</mi></msub><mo>~</mo></mover><mo>⋅</mo><mover accent="true"><mrow><msub><mi>z</mi><mi>j</mi></msub><mi mathvariant="normal">/</mi><mi>τ</mi></mrow><mo>~</mo></mover></mrow></msup><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msub><mi>I</mi><mrow><mi>k</mi><mo mathvariant="normal">≠</mo><mi>i</mi></mrow></msub><mo>⋅</mo><msup><mi>e</mi><mrow><mover accent="true"><msub><mi>z</mi><mi>i</mi></msub><mo>~</mo></mover><mo>⋅</mo><mover accent="true"><msub><mi>z</mi><mi>k</mi></msub><mo>~</mo></mover><mi mathvariant="normal">/</mi><mi>τ</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">L_{z_{i}}=\frac{-1}{N_{y_{i}}-1} \sum_{j=1, j \neq i}^{N} I\left\{y_{i}=y_{j}\right\} \cdot \log \frac{e^{\tilde{z_{i}} \cdot \tilde{z_{j} / \tau}}}{\sum_{k=1}^{N} I_{k \neq i} \cdot e^{\tilde{z_{i}} \cdot \tilde{z_{k}} / \tau}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.583691em;vertical-align:-0.60246em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.03588em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3678em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.60246em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.8776869999999999em;vertical-align:-0.660252em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.217435em;"><span style="top:-2.5647550000000003em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852357142857143em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8932071428571429em;"><span style="top:-2.893207142857143em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.5em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.04398em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.85em;"><span class="pstrut" style="height:2.5em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.5em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.04398em;margin-right:0.1em;"><span class="pstrut" style="height:2.69444em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34963999999999995em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.85em;"><span class="pstrut" style="height:2.5em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34963999999999995em;"><span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1763357142857143em;"><span style="top:-3.176335714285714em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.7049em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.5em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.04398em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.85em;"><span class="pstrut" style="height:2.5em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9868599999999998em;"><span style="top:-2.75em;"><span class="pstrut" style="height:2.75em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.04398em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5091600000000001em;"><span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.1132em;">τ</span></span></span><span style="top:-3.419em;"><span class="pstrut" style="height:2.75em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5091600000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.660252em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="16-ecea-ecea-extensible-co-existing-attention-for-few-shot-object-detection"><a class="markdownIt-Anchor" href="#16-ecea-ecea-extensible-co-existing-attention-for-few-shot-object-detection"></a> 16. (ECEA) ECEA: Extensible Co-Existing Attention for Few-Shot Object Detection</h3><p><img src="http://image.yayan.xyz/20231208131820.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>很少考虑到局部到全局的定位(kshot样本可能只能提供novel class的一部分,比如只有狗头,但是要检测出狗身子)</li></ol><p><strong>Related Work值得借鉴</strong></p><p><strong>思想</strong>:</p><ol><li><p>提出了一个Extensible Co-Existing Attention(ECEA)模块，使模型能够根据局部部分推断全局对象。本质上，该模型在具有丰富样本的基本阶段不断学习可扩展的能力，并将其转移到新的阶段，可以帮助少镜头模型快速适应将局部区域扩展到共存区域。</p></li><li><p>使用ResNet101的后三层构建多尺度模块经过特征融合之后送到ECEA模块中</p></li><li><p>将特征图划分为一系列patch,表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">x_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>,每个patch利用deformable cnn来获得N个extensible regions,…看不懂了<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">EA</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>q</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mfrac><msup><mi>e</mi><mrow><msub><mi>x</mi><mi>q</mi></msub><msup><mi>W</mi><mi>q</mi></msup><mo>⋅</mo><msup><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>q</mi></msub><msubsup><mi>W</mi><mi>n</mi><mi>k</mi></msubsup><mo fence="true">)</mo></mrow><mi>T</mi></msup></mrow></msup><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>e</mi><mrow><msub><mi>x</mi><mi>q</mi></msub><msup><mi>W</mi><mi>q</mi></msup><mo>⋅</mo><msup><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>q</mi></msub><msubsup><mi>W</mi><mi>n</mi><mi>k</mi></msubsup><mo fence="true">)</mo></mrow><mi>T</mi></msup></mrow></msup></mrow></mfrac><mo>⋅</mo><msub><mi>x</mi><mi>q</mi></msub><msubsup><mi>W</mi><mi>n</mi><mi>v</mi></msubsup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\operatorname{EA}\left(x_{q}\right)=\sum_{n=1}^{N} \frac{e^{x_{q} W^{q} \cdot\left(x_{q} W_{n}^{k}\right)^{T}}}{\sum_{n=1}^{N} e^{x_{q} W^{q} \cdot\left(x_{q} W_{n}^{k}\right)^{T}}} \cdot x_{q} W_{n}^{v},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">A</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4741212857142854em;vertical-align:-0.9100312857142854em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5640900000000002em;"><span style="top:-2.485065714285715em;"><span class="pstrut" style="height:3.17009em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852357142857143em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2500346938775508em;"><span style="top:-3.2500346938775513em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.841264285714286em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3000000000000003em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39444em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.73275em;"><span style="top:-2.8021900000000004em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="minner mtight"><span class="minner mtight"><span class="mopen sizing reset-size1 size3 mtight delimcenter" style="top:0.07142857142857142em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3000000000000003em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39444em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9884399999999999em;"><span style="top:-2.2944400000000003em;margin-left:-0.13889em;margin-right:0.1em;"><span class="pstrut" style="height:2.69444em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-2.98844em;margin-right:0.1em;"><span class="pstrut" style="height:2.69444em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size1 size3 mtight delimcenter" style="top:0.07142857142857142em;"><span class="mtight">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1777699999999998em;"><span style="top:-3.1777699999999998em;margin-right:0.1em;"><span class="pstrut" style="height:2.6833299999999998em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.40009em;"><span class="pstrut" style="height:3.17009em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.56409em;"><span class="pstrut" style="height:3.17009em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.671557142857143em;"><span style="top:-3.671557142857143em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:3.1173785714285716em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3000000000000003em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39444em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.83456em;"><span style="top:-2.9040000000000004em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="minner mtight"><span class="minner mtight"><span class="mopen sizing reset-size1 size6 mtight delimcenter" style="top:0.125em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3000000000000003em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39444em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.09844em;"><span style="top:-2.2944400000000003em;margin-left:-0.13889em;margin-right:0.1em;"><span class="pstrut" style="height:2.69444em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.09844em;margin-right:0.1em;"><span class="pstrut" style="height:2.69444em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size1 size6 mtight delimcenter" style="top:0.125em;"><span class="mtight">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.56433em;"><span style="top:-3.56433em;margin-right:0.1em;"><span class="pstrut" style="height:2.6833299999999998em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9100312857142854em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><br />(类似与:一个patch经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo separator="true">,</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">K,V,Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">Q</span></span></span></span>,然后和其他patch计算相似度,然后和其他patch的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>相乘,得到最终的特征)</p></li><li><p>补充3: Extensible Liner (应该是Deformable 实现)学习到N个可扩展区域的位置和形状,然后和当前的区域进行点积运算,得到相似度分数,然后在和另一个Extensible Liner学习到N个可扩展区域<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>相乘,得到最终的特征(也是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo separator="true">,</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">K,V,Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">Q</span></span></span></span>的形式,但是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo separator="true">,</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">K,V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>中包含了N个相关的扩展区域?)</p></li><li><p>构建了级联的多头多层的Extensible Module,扩展的区域更大,视野更大,更能获得对象的定位<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">MHEA</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mi>W</mi><mi>m</mi></msub><mi mathvariant="normal">EA</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{MHEA}(x)=\sum_{m=1}^{M} W_{m} \operatorname{EA}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">M</span><span class="mord mathrm">H</span><span class="mord mathrm">E</span><span class="mord mathrm">A</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">A</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p></li></ol><h3 id="17-vfa-few-shot-object-detection-via-variational-feature-aggregation"><a class="markdownIt-Anchor" href="#17-vfa-few-shot-object-detection-via-variational-feature-aggregation"></a> 17. (VFA) Few-Shot Object Detection via Variational Feature Aggregation</h3><p><img src="https://image.yayan.xyz/20231209144136.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>class-specific aggregation和class-agnostic aggregation的区别没看懂,没看出来带来什么影响</li><li>因为novel class的样本太少了,样本间的方差太大,预测结果和样本的质量关系很大</li></ol><p><strong>思想</strong>:</p><ol><li>使用class-agnostic aggregation聚合,即在训练时随机挑选一个支持类和查询的RoIfeature进行聚合得到聚合特征</li><li>使用Variational Feature Aggregation(VFA),先将支持特征转为分布,然后从分布中采样出特征.由于分布不特定于特定的示例,所以方差具有鲁棒性</li></ol><h3 id="18-bcyolo-bi-path-combination-yolo-for-real-time-few-shot-object-detection"><a class="markdownIt-Anchor" href="#18-bcyolo-bi-path-combination-yolo-for-real-time-few-shot-object-detection"></a> 18. (BCYOLO) Bi-path Combination YOLO for Real-time Few-shot Object Detection</h3><p><img src="http://image.yayan.xyz/20231211194628.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>提高模型的检测速度,为了保持较高的推理速度和可接受的检测精度</li><li>提升 transfer learning的泛化能力</li></ol><p><strong>思想</strong>:</p><ol><li>提出了一种双路径组合YOLO（BCYOLO）模型,即base class一个路径,novel class一个路径,novel class的路径由base class蒸馏得到</li><li>提出一种Attentive DropBlock模块(基于 DropBlock:卷积的dropout可能会根据周围像素点构建出来,因此作用不大,dropblock丢弃的是连续区域),该算法不仅受保持概率和块大小的参数的影响，还受对象语义特征的影响。</li></ol><h3 id="19-corpn-cooperating-rpns-improve-few-shot-object-detection"><a class="markdownIt-Anchor" href="#19-corpn-cooperating-rpns-improve-few-shot-object-detection"></a> 19. (CoRPN) Cooperating RPN’s Improve Few-Shot Object Detection</h3><p><img src="http://image.yayan.xyz/20231215142308.png" alt="" /></p><p><strong>问题</strong>:</p><ol><li>RPN对新类的提议不好,RPN 必须尽可能报告尽可能多的高 IOU 框，否则分类器将太弱而无法建模外观出现变化的新类。不能简单地报告大量框来逃避这种影响，因为这样做将需要分类器非常擅长拒绝误报。</li></ol><p><strong>思想</strong>:</p><ol><li>训练多个RPN,这些RPN应该是不同的,但是合作的</li><li>应该选用哪个RPN(不能单单选择分数最高的,其他的没用了):<ul><li>对框i的所有评分取sigmoid,把接近[0,1]的取出来,只有被选择的框才获取到梯度</li></ul></li><li>多样性:<ul><li>N个RPN和M个锚候选框,构建一个矩阵,最大化矩阵的秩</li></ul></li><li>协同(防止有RPN一直拒绝任何前景框):<ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="script">L</mi><mtext>coop </mtext><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msubsup><mo>:</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mrow><mo fence="true">{</mo><mn>0</mn><mo separator="true">,</mo><mi>ϕ</mi><mo>−</mo><msubsup><mi>f</mi><mi>i</mi><mi>j</mi></msubsup><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\mathcal{L}_{\text {coop }}^{i, j}:=\max \left\{0, \phi-f_{i}^{j}\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2077719999999998em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">coop </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">{</span></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.4231360000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">}</span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo>−</mo><msubsup><mi>f</mi><mi>i</mi><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">\phi-f_{i}^{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.219436em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.4231360000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span>充当每个 RPN 分配给前景框的概率的下限。如果 RPN 的响应低于 φ，则 RPN 将受到惩罚。</li></ul></li></ol><h3 id="19-devit-detect-every-thing-with-few-examples"><a class="markdownIt-Anchor" href="#19-devit-detect-every-thing-with-few-examples"></a> 19. ★(DEVit) Detect Every Thing with Few Examples</h3><p><img src="http://image.yayan.xyz/20231215144650.png" alt="" /><br /><img src="http://image.yayan.xyz/20231215144709.png" alt="" /><br /><img src="http://image.yayan.xyz/20231215144724.png" alt="" /></p><h2 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h2><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><ol><li>发表时间</li><li>meta-learning or fine-turning</li><li>解决的问题</li><li>使用的方法</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;few-shot-object-detection&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#few-shot-object-detection&quot;&gt;&lt;/a&gt; Few-shot Object Detection&lt;/h1&gt;
&lt;h2 id</summary>
      
    
    
    
    <category term="论文记录" scheme="https://gladdduck.github.io/categories/%E8%AE%BA%E6%96%87%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Few-shotObjectDetection" scheme="https://gladdduck.github.io/tags/Few-shotObjectDetection/"/>
    
  </entry>
  
  <entry>
    <title>C#学习中的小知识点</title>
    <link href="https://gladdduck.github.io/2023/11/24/%E7%AC%94%E8%AE%B0-C#%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://gladdduck.github.io/2023/11/24/%E7%AC%94%E8%AE%B0-C#%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2023-11-24T12:54:49.890Z</published>
    <updated>2023-11-24T09:14:47.621Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符串前面的字符"><a class="markdownIt-Anchor" href="#字符串前面的字符"></a> 字符串前面的字符</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//正常字符串  类似python中的&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">string</span> one = <span class="string">&quot;\\&quot;</span>;</span><br><span class="line"><span class="comment">//模板字符串 类似python中的f&#x27;&#x27;或者&#x27;&#x27;.format() 可以加入变量</span></span><br><span class="line"><span class="built_in">string</span> two = <span class="string">$&quot;\\&quot;</span>;</span><br><span class="line"><span class="comment">//逐字字符串 类似python中的r&#x27;&#x27;  每个字符是本身的意思,不转义</span></span><br><span class="line"><span class="built_in">string</span> three = <span class="string">@&quot;\&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;字符串前面的字符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串前面的字符&quot;&gt;&lt;/a&gt; 字符串前面的字符&lt;/h3&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu</summary>
      
    
    
    
    <category term="快捷命令" scheme="https://gladdduck.github.io/categories/%E5%BF%AB%E6%8D%B7%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="CSharp" scheme="https://gladdduck.github.io/tags/CSharp/"/>
    
  </entry>
  
  <entry>
    <title>C#使用PaddleOCRSharp</title>
    <link href="https://gladdduck.github.io/2023/11/24/%E9%85%8D%E7%BD%AE-C#%E4%BD%BF%E7%94%A8PaddleOCRSharp/"/>
    <id>https://gladdduck.github.io/2023/11/24/%E9%85%8D%E7%BD%AE-C#%E4%BD%BF%E7%94%A8PaddleOCRSharp/</id>
    <published>2023-11-24T12:54:49.886Z</published>
    <updated>2023-11-26T05:19:59.766Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-nuget安装"><a class="markdownIt-Anchor" href="#1-nuget安装"></a> 1. Nuget安装</h3><h3 id="2本地编译"><a class="markdownIt-Anchor" href="#2本地编译"></a> 2.本地编译</h3><h4 id="编译"><a class="markdownIt-Anchor" href="#编译"></a> 编译</h4><ol><li><a href="https://gitee.com/raoyutian/paddle-ocrsharp">gitee</a>上拉下来源码,github的版本比较老</li><li>VS2022打开项目,双击项目名称打开.csproj文件.在 <code>TargetFrameworks</code>中修改需要的版本,例如:</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TargetFrameworks</span>&gt;</span></span><br><span class="line">  net35;</span><br><span class="line">  net40;</span><br><span class="line">  net45;</span><br><span class="line">  net451;</span><br><span class="line">  net452;</span><br><span class="line">  net46;</span><br><span class="line">  net461;</span><br><span class="line">  net462;</span><br><span class="line">  net47;</span><br><span class="line">  net471;</span><br><span class="line">  net472;</span><br><span class="line">  net48;</span><br><span class="line">  net481;</span><br><span class="line">  netstandard2.0;netcoreapp3.1;</span><br><span class="line">  net5.0;net6.0;net7.0;net8.0</span><br><span class="line"><span class="tag">&lt;/<span class="name">TargetFrameworks</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>如果是 <code>.Net8.0</code>,会报错 <code>不存在ImageToBytes</code>, 因为在 <code>EngineBase.cs</code>中有 <code>if !NET8_0_OR_GREATER</code>,<code>ImageToBytes</code>只针对 <code>.Net8.0</code>以下版本,所以在 <code>#endif</code>后面加上:</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> NET8_0_OR_GREATER</span></span><br><span class="line"><span class="function"><span class="keyword">internal</span> <span class="keyword">protected</span> <span class="built_in">byte</span>[] <span class="title">ImageToBytes</span>(<span class="params">Image image</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">    &#123;</span><br><span class="line">        image.Save(ms, image.RawFormat); <span class="comment">// 保存图片到内存流</span></span><br><span class="line">        <span class="keyword">return</span> ms.ToArray(); <span class="comment">// 返回字节数组</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><ol start="4"><li>清理项目,重新生成,就可以在 <code>bin</code>文件夹下找到对应版本的dll文件了</li></ol><h4 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h4><ol><li>新建项目,在依赖项中,右键添加项目引用,找到生成的dll文件,添加引用<br /><img src="https://image.yayan.xyz/20231122160927.png" alt="" /></li><li>测试代码可以用下面的</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">OpenFileDialog ofd = <span class="keyword">new</span> OpenFileDialog();</span><br><span class="line"></span><br><span class="line">ofd.Filter = <span class="string">&quot;*.*|*.bmp;*.jpg;*.jpeg;*.tiff;*.tiff;*.png&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ofd.ShowDialog() != DialogResult.OK) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> imagebyte = File.ReadAllBytes(ofd.FileName);</span><br><span class="line"></span><br><span class="line">Bitmap bitmap = <span class="keyword">new</span> Bitmap(<span class="keyword">new</span> MemoryStream(imagebyte));</span><br><span class="line"></span><br><span class="line">OCRModelConfig config = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">OCRParameter oCRParameter = <span class="keyword">new</span> OCRParameter();</span><br><span class="line"></span><br><span class="line">OCRResult ocrResult = <span class="keyword">new</span> OCRResult();</span><br><span class="line"></span><br><span class="line"><span class="comment">//建议程序全局初始化一次即可，不必每次识别都初始化，容易报错。    </span></span><br><span class="line"></span><br><span class="line">PaddleOCREngine engine = <span class="keyword">new</span> PaddleOCREngine(config, oCRParameter);</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    ocrResult = engine.DetectText(bitmap);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ocrResult != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">    label1.Text = ocrResult.Text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li><p>如果不出意外的话,应该会报错,一个错误是 <code>无法加载文件或程序集System.Drawing.Common, Version=0.0.0.0, culture=....</code>这个是因为没有安装 <code>System.Drawing.Common</code>这个包,在这个项目中用Nuget安装就可以了</p></li><li><p>另一个错误是 <code>找不到xxxxx.dll</code>或 <code>什么dll文件不存在</code>或 <code>ch-xxxxxxx找不到,不存在</code>.解决方法:</p><ul><li>第一种,先显示全部文件,在bin/debug/对应的版本文件夹下,把PaddleOCRSharp项目中的 <code>PaddleOCRLib</code>文件下的内容全部复制到这个文件夹下<br /><img src="https://image.yayan.xyz/20231122161507.png" alt="" /></li><li>第二种,把 <code>PaddleOCRLib</code>文件夹下的所有文件复制到解决方案同目录,然后把每一个文件的属性都设置位 <code>始终复制</code>或者 <code>如果较新则复制</code>,但是这样文件结构就复杂了</li><li>第三种,把 <code>PaddleOCRLib</code>文件夹复制过来,</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-nuget安装&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-nuget安装&quot;&gt;&lt;/a&gt; 1. Nuget安装&lt;/h3&gt;
&lt;h3 id=&quot;2本地编译&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2本</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://gladdduck.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="PaddleOCRSharp" scheme="https://gladdduck.github.io/tags/PaddleOCRSharp/"/>
    
  </entry>
  
  <entry>
    <title>VS2022快捷键</title>
    <link href="https://gladdduck.github.io/2023/11/24/%E6%9D%82%E8%B0%88-VS2022%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://gladdduck.github.io/2023/11/24/%E6%9D%82%E8%B0%88-VS2022%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2023-11-24T12:54:49.882Z</published>
    <updated>2023-11-24T09:14:47.861Z</updated>
    
    <content type="html"><![CDATA[<h4 id="复制一行"><a class="markdownIt-Anchor" href="#复制一行"></a> 复制一行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+D</span><br></pre></td></tr></table></figure><h4 id="注释"><a class="markdownIt-Anchor" href="#注释"></a> 注释</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 注释:Ctrl+K 接上 Ctrl+C</span><br><span class="line">2. 取消注释:Ctrl+K 接上 Ctrl+U</span><br></pre></td></tr></table></figure><h4 id="代码折叠"><a class="markdownIt-Anchor" href="#代码折叠"></a> 代码折叠</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 折叠光标所在部分:Ctrl+M 接上 Ctrl+M</span><br><span class="line">2. 折叠全部函数:Ctrl+M 接上 Ctrl+O</span><br><span class="line">(打开同理)</span><br></pre></td></tr></table></figure><h4 id="代码格式化"><a class="markdownIt-Anchor" href="#代码格式化"></a> 代码格式化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+K 接上 Ctrl+D</span><br></pre></td></tr></table></figure><h4 id="f开头的快捷键"><a class="markdownIt-Anchor" href="#f开头的快捷键"></a> F开头的快捷键</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. F5:开始调试</span><br><span class="line">2. F7:页面跳转代码</span><br><span class="line">3. F9:设置断点</span><br><span class="line">4. F10:单步执行</span><br><span class="line">5. F11:单步进入</span><br><span class="line">6. F12:转到定义</span><br><span class="line">7. Shift+F12:查找变量所有引用</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;复制一行&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#复制一行&quot;&gt;&lt;/a&gt; 复制一行&lt;/h4&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    <category term="快捷命令" scheme="https://gladdduck.github.io/categories/%E5%BF%AB%E6%8D%B7%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="VS2022" scheme="https://gladdduck.github.io/tags/VS2022/"/>
    
  </entry>
  
  <entry>
    <title>VSCode登录Github账号同步</title>
    <link href="https://gladdduck.github.io/2023/11/20/%E9%85%8D%E7%BD%AE-VSCode%E7%99%BB%E5%BD%95Github/"/>
    <id>https://gladdduck.github.io/2023/11/20/%E9%85%8D%E7%BD%AE-VSCode%E7%99%BB%E5%BD%95Github/</id>
    <published>2023-11-20T04:44:58.504Z</published>
    <updated>2023-11-20T04:52:43.741Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h3><p><img src="https://image.yayan.xyz/20231120124637.png" alt="" /></p><ol><li>多个设备使用vscode,每次都要配置(快捷键,插件这些),很麻烦</li><li>登录GitHub账号(Microsoft账号也可以),提示:<strong>vscode 登录github 尚未完成授权此扩展使用 GitHub 的操作。是否要尝试其他方式? (本地服务器)</strong><br /><img src="https://image.yayan.xyz/20231120125224.png" alt="" /></li></ol><h3 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h3><ol><li>原因是本地电脑连不上github,需要一个全局代理(没有)</li><li>方法:在<code>C:\Windows\System32\drivers\etc</code>下找到<code>hosts</code>文件,添加</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">140.82.112.4 github.com</span><br><span class="line">185.199.108.153 vscode-auth.github.com</span><br><span class="line">185.199.109.153 vscode-auth.github.com</span><br><span class="line">185.199.110.153 vscode-auth.github.com</span><br><span class="line">185.199.111.153 vscode-auth.github.com</span><br></pre></td></tr></table></figure><ol start="3"><li>可以先把host文件复制到桌面,修改桌面的host,然后替换,这样就不存在权限问题了</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#问题&quot;&gt;&lt;/a&gt; 问题&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://image.yayan.xyz/20231120124637.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;</summary>
      
    
    
    
    <category term="杂七杂八配置" scheme="https://gladdduck.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="VSCode Github" scheme="https://gladdduck.github.io/tags/VSCode-Github/"/>
    
  </entry>
  
  <entry>
    <title>BingChat国内使用</title>
    <link href="https://gladdduck.github.io/2023/11/20/%E9%85%8D%E7%BD%AE-Bing%20Chat%E4%BD%BF%E7%94%A8/"/>
    <id>https://gladdduck.github.io/2023/11/20/%E9%85%8D%E7%BD%AE-Bing%20Chat%E4%BD%BF%E7%94%A8/</id>
    <published>2023-11-20T01:35:57.276Z</published>
    <updated>2023-11-26T05:19:19.444Z</updated>
    
    <content type="html"><![CDATA[<h4 id="好处"><a class="markdownIt-Anchor" href="#好处"></a> 好处</h4><ol><li>不需要申请,网络Ok都可以用</li><li>DALL·E 3 免费用</li><li>据说是ChatGPT 4.0,多模态,可以上传图片</li><li>后续可以增加插件</li></ol><h4 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h4><ol><li><a href="http://xn--bing-9z2h93o.com">打开bing.com</a>(<a href="http://xn--cn-gy2ck96a40cbvlg4f2xhp4ah8hnx0dhs4d.bing.com">这个地方如果打开的是cn.bing.com</a>,就不会出现Chat窗口),不需要登录</li><li>调整国家和地区,随便国家<br /><img src="http://image.yayan.xyz/20231120095230.png" alt="" /></li><li>左边标签页就有Chat了</li></ol><p><img src="http://image.yayan.xyz/20231120095459.png" alt="" /></p><h4 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意</h4><ol><li>每天好像只有30次查询机会,不登录只有5次(在Chrome上只有5次,在Edge上是30次)</li><li><a href="http://xn--bing-955fz0yuvfxjp15f1tdh76cvehk8f.com/create%E4%B8%8A%E7%94%9F%E6%88%90,%E9%9C%80%E8%A6%81%E7%99%BB%E5%BD%95">图片生成可以直接在bing.com/create上生成,需要登录</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;好处&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#好处&quot;&gt;&lt;/a&gt; 好处&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;不需要申请,网络Ok都可以用&lt;/li&gt;
&lt;li&gt;DALL·E 3 免费用&lt;/li&gt;
&lt;li&gt;据说是ChatGPT 4.0,多模态,可</summary>
      
    
    
    
    <category term="杂七杂八配置" scheme="https://gladdduck.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="BingChat" scheme="https://gladdduck.github.io/tags/BingChat/"/>
    
  </entry>
  
  <entry>
    <title>杂七杂八小知识</title>
    <link href="https://gladdduck.github.io/2023/11/19/%E6%9D%82%E8%B0%88-%E6%9D%82%E8%AE%B0%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://gladdduck.github.io/2023/11/19/%E6%9D%82%E8%B0%88-%E6%9D%82%E8%AE%B0%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2023-11-19T07:27:51.051Z</published>
    <updated>2023-11-26T05:18:31.885Z</updated>
    
    <content type="html"><![CDATA[<h4 id="cookie和token的区别是什么"><a class="markdownIt-Anchor" href="#cookie和token的区别是什么"></a> cookie和token的区别是什么</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;cookie和token的区别是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#cookie和token的区别是什么&quot;&gt;&lt;/a&gt; cookie和token的区别是什么&lt;/h4&gt;
</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://gladdduck.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="知识点" scheme="https://gladdduck.github.io/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>Zero-shot Detection论文总结</title>
    <link href="https://gladdduck.github.io/2023/11/14/%E5%AD%A6%E6%9C%AF-Zero-shotDetection%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/"/>
    <id>https://gladdduck.github.io/2023/11/14/%E5%AD%A6%E6%9C%AF-Zero-shotDetection%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/</id>
    <published>2023-11-14T12:57:15.167Z</published>
    <updated>2023-11-14T12:59:53.394Z</updated>
    
    <content type="html"><![CDATA[<h1 id="zero-shot-object-detection"><a class="markdownIt-Anchor" href="#zero-shot-object-detection"></a> Zero-shot Object Detection</h1><p>缺点: 需要结合文本信息,没办法完全根据图片进行检测</p><h2 id="综述"><a class="markdownIt-Anchor" href="#综述"></a> 综述</h2><p><strong>A Survey of Vision-Language Pre-Trained Models</strong><br />视觉语言多模态综述<br />介绍了视觉语言多模态的1. 特征表示 2. 模态交互 3. 预训练任务 4. 下游任务 5. 方向<br />2022年之前的VL预训练模型和常用数据集</p><h2 id="网页"><a class="markdownIt-Anchor" href="#网页"></a> 网页</h2><p><strong><a href="https://www.width.ai/post/how-zero-shot-object-detection-changes-computer-vision-tasks-in-business">Zero-Shot Object Detection介绍</a></strong></p><p>介绍了Zero-Shot Object Detection的基本概念，以及如何使用Region-CLIP进行Zero-Shot Object Detection</p><p><strong><a href="https://www.pinecone.io/learn/series/image-search/zero-shot-object-detection-clip/">Zero-Shot Object Detection案例</a></strong></p><p>一个样例代码,使用CLIP进行检测</p><h2 id="论文"><a class="markdownIt-Anchor" href="#论文"></a> 论文</h2><h3 id="zero-shot-detection"><a class="markdownIt-Anchor" href="#zero-shot-detection"></a> Zero-Shot Detection</h3><p><img src="https://image.yayan.xyz/20231023204527.png" alt="" /><br /><img src="https://image.yayan.xyz/20231031170459.png" alt="" /></p><ol><li>利用BackBone抽出来图像的特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">T_F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">T_F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上进行检测,得到目标的位置信息<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">T_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">T_F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上进行语义预测,得到目标的文本信息<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">T_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>F</mi></msub><mo separator="true">,</mo><msub><mi>T</mi><mi>L</mi></msub><mo separator="true">,</mo><msub><mi>T</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">T_F,T_L,T_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>拼接起来,进行置信度的预测,得到了最终的预测结果(x,y,w,h,cls)</li><li>损失函数由1)位置损失 2)语义损失 3)置信度损失组成</li><li>在验证过程中分为Test-Seen,Test-Unseen,Test-Mix三种情况</li></ol><p>解决问题:</p><ol><li>RPN可能无法提议出那么多没见过的物体</li><li>基于YOLOv2,性能强大</li><li>简单容易理解</li></ol><h3 id="zero-shot-object-detection-2"><a class="markdownIt-Anchor" href="#zero-shot-object-detection-2"></a> Zero-Shot Object Detection</h3><p>方法:</p><ol><li>两阶段检测器结构,对区域建议框内的物体抽取出图像特征</li><li>通过映射将图像特征映射到文本特征空间(通过wordEmbedding得到)</li><li>在公共空间计算图像特征和文本特征的相似度,得到未见物体的类别</li></ol><p>解决问题:</p><ol><li>将未见物体分为背景的解决<ul><li>使用固定的背景类:在嵌入空间中为背景添加一个固定的向量</li><li>将多个潜在的类分配给背景对象,不断的将背景框标记为对象反复训练</li></ul></li><li>密集采样嵌入空间:数据集中可见类太少了导致公共空间稀疏,未见类的语义和视觉之间无法对齐<ul><li>使用除了未见类之外的额外数据补充训练</li></ul></li></ol><h3 id="region-clip"><a class="markdownIt-Anchor" href="#region-clip"></a> Region-CLIP</h3><ol><li>利用RPN从图像中提取出region,抽取出特征</li><li>利用现有文本解析器,从文本中提取出concept,抽取出特征</li><li>利用CLIP计算region和concept的相似度,得到region-text的配对</li><li>利用三个损失函数训练模型</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;zero-shot-object-detection&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#zero-shot-object-detection&quot;&gt;&lt;/a&gt; Zero-shot Object Detection&lt;/h1&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="论文记录" scheme="https://gladdduck.github.io/categories/%E8%AE%BA%E6%96%87%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Zero-shot Detection" scheme="https://gladdduck.github.io/tags/Zero-shot-Detection/"/>
    
  </entry>
  
  <entry>
    <title>Blazor中的Localization</title>
    <link href="https://gladdduck.github.io/2023/10/09/%E9%85%8D%E7%BD%AE-Blazor%E4%B8%AD%E7%9A%84Localization/"/>
    <id>https://gladdduck.github.io/2023/10/09/%E9%85%8D%E7%BD%AE-Blazor%E4%B8%AD%E7%9A%84Localization/</id>
    <published>2023-10-09T11:38:30.993Z</published>
    <updated>2023-11-26T05:19:29.773Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://code-maze.com/localization-in-blazor-webassembly-applications/">参考连接</a></p><h3 id="1根据浏览器语言显示语言"><a class="markdownIt-Anchor" href="#1根据浏览器语言显示语言"></a> 1.根据浏览器语言显示语言</h3><ol><li><p>项目中新建Resources文件夹</p></li><li><p>新建Text.resx文件(这个不用加语言的后缀,会报错 <code>自定义工具 PublicResXFileCodeGenerator 未能对输入文件产生输出</code>)</p></li><li><p>新建其他语言的Text文件,比如Text.zh.resx</p></li><li><p>resx文件中访问修饰符需要设置 <code>public</code>,每个文件中的名称需要相同,值是各个语言<br /><img src="https://image.yayan.xyz/20231009202818.png" alt="" /></p></li><li><p>完成之后,类似下图<br /><img src="https://image.yayan.xyz/20231009202906.png" alt="" /></p></li><li><p>在 <code>Program.cs</code>中添加 <code>builder.Services.AddLocalization();</code></p></li><li><p>在 <code>_Imports.razor</code>中添加</p><ul><li><code>@using Microsoft.Extensions.Localization</code></li><li><code>@using 项目名.文件夹名称</code>,例如:<code>@using BlazorWasmLocalization.Shared.ResourceFiles</code></li></ul></li><li><p>在页面中添加代码,其中Text就是resx文件的名称</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@page &quot;/&quot;</span><br><span class="line">@inject IStringLocalizer&lt;Text&gt; localizer</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;@localizer[&quot;resx文件中的一个名称&quot;]&lt;/h1&gt;</span><br><span class="line">@localizer[&quot;resx文件中的一个名称&quot;]</span><br></pre></td></tr></table></figure><h3 id="2根据用户选择的语言显示语言"><a class="markdownIt-Anchor" href="#2根据用户选择的语言显示语言"></a> 2.根据用户选择的语言显示语言</h3><ol><li>可以新建一个组件也可以直接在页面中添加</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 下拉选框 --&gt;</span><br><span class="line">&lt;strong&gt;Culture:&lt;/strong&gt;</span><br><span class="line"></span><br><span class="line">&lt;select class=&quot;form-control&quot; @bind=&quot;Culture&quot; style=&quot;width:300px; margin-left:10px;&quot;&gt;</span><br><span class="line">    @foreach (var culture in cultures)</span><br><span class="line">    &#123;</span><br><span class="line">        &lt;option value=&quot;@culture&quot;&gt;@culture.DisplayName&lt;/option&gt;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 组件代码 --&gt;</span><br><span class="line">public partial class CultureSelector</span><br><span class="line">&#123;</span><br><span class="line">    [Inject]</span><br><span class="line">    public NavigationManager NavManager &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    [Inject]</span><br><span class="line">    public IJSRuntime JSRuntime &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 语言列表,和resx文件对应 --&gt;</span><br><span class="line">    CultureInfo[] cultures = new[]</span><br><span class="line">    &#123;</span><br><span class="line">        new CultureInfo(&quot;en-US&quot;),</span><br><span class="line">        new CultureInfo(&quot;zh-CN&quot;)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    CultureInfo Culture</span><br><span class="line">    &#123;</span><br><span class="line">        get =&gt; CultureInfo.CurrentCulture;</span><br><span class="line">        set</span><br><span class="line">        &#123;</span><br><span class="line">            if (CultureInfo.CurrentCulture != value)</span><br><span class="line">            &#123;</span><br><span class="line">                var js = (IJSInProcessRuntime)JSRuntime;</span><br><span class="line">                js.InvokeVoid(&quot;blazorCulture.set&quot;, value.Name);</span><br><span class="line">                &lt;!-- 每次选择之后会刷新一下页面 --&gt;</span><br><span class="line">                NavManager.NavigateTo(NavManager.Uri, forceLoad: true);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在项目下新建一个 <code>Extensions</code>文件夹,新建一个 <code>WebAssemblyHostExtension.cs</code>文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">public static class WebAssemblyHostExtension</span><br><span class="line">&#123;</span><br><span class="line">    public async static Task SetDefaultCulture(this WebAssemblyHost host)</span><br><span class="line">    &#123;</span><br><span class="line">        var jsInterop = host.Services.GetRequiredService&lt;IJSRuntime&gt;();</span><br><span class="line">        var result = await jsInterop.InvokeAsync&lt;string&gt;(&quot;blazorCulture.get&quot;);</span><br><span class="line"></span><br><span class="line">        CultureInfo culture;</span><br><span class="line"></span><br><span class="line">        if (result != null)</span><br><span class="line">            culture = new CultureInfo(result);</span><br><span class="line">        else</span><br><span class="line">            culture = new CultureInfo(&quot;zh-CN&quot;);</span><br><span class="line"></span><br><span class="line">        CultureInfo.DefaultThreadCurrentCulture = culture;</span><br><span class="line">        CultureInfo.DefaultThreadCurrentUICulture = culture;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在 <code>Program.cs</code>中添加</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var host = builder.Build();</span><br><span class="line">await host.SetDefaultCulture();</span><br><span class="line">await host.RunAsync();</span><br></pre></td></tr></table></figure><ol start="4"><li>在 <code>wwwroot/index.html</code>中添加</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       blazorCulture = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">get</span>: <span class="function">() =&gt;</span> <span class="variable language_">localStorage</span>[<span class="string">&#x27;BlazorCulture&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">set</span>: <span class="function">(<span class="params">value</span>) =&gt;</span> <span class="variable language_">localStorage</span>[<span class="string">&#x27;BlazorCulture&#x27;</span>] = value</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>在csproj文件中添加</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">BlazorWebAssemblyLoadAllGlobalizationData</span>&gt;</span>true<span class="tag">&lt;/<span class="name">BlazorWebAssemblyLoadAllGlobalizationData</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li>运行即可</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://code-maze.com/localization-in-blazor-webassembly-applications/&quot;&gt;参考连接&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1根据浏览器语言显示语言&quot;&gt;&lt;a class=&quot;markdownIt-</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://gladdduck.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="BlazorLocalization" scheme="https://gladdduck.github.io/tags/BlazorLocalization/"/>
    
  </entry>
  
</feed>
